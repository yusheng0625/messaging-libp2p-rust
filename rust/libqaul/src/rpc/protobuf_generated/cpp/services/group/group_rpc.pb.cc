// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/group/group_rpc.proto

#include "services/group/group_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace qaul {
namespace rpc {
namespace group {
PROTOBUF_CONSTEXPR Group::Group(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDefaultTypeInternal() {}
  union {
    Group _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDefaultTypeInternal _Group_default_instance_;
PROTOBUF_CONSTEXPR GroupResult::GroupResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupResultDefaultTypeInternal() {}
  union {
    GroupResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupResultDefaultTypeInternal _GroupResult_default_instance_;
PROTOBUF_CONSTEXPR GroupCreateRequest::GroupCreateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupCreateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupCreateRequestDefaultTypeInternal() {}
  union {
    GroupCreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupCreateRequestDefaultTypeInternal _GroupCreateRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupCreateResponse::GroupCreateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupCreateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupCreateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupCreateResponseDefaultTypeInternal() {}
  union {
    GroupCreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupCreateResponseDefaultTypeInternal _GroupCreateResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupRenameRequest::GroupRenameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupRenameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupRenameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupRenameRequestDefaultTypeInternal() {}
  union {
    GroupRenameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupRenameRequestDefaultTypeInternal _GroupRenameRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupRenameResponse::GroupRenameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupRenameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupRenameResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupRenameResponseDefaultTypeInternal() {}
  union {
    GroupRenameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupRenameResponseDefaultTypeInternal _GroupRenameResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupInviteMemberRequest::GroupInviteMemberRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInviteMemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInviteMemberRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInviteMemberRequestDefaultTypeInternal() {}
  union {
    GroupInviteMemberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInviteMemberRequestDefaultTypeInternal _GroupInviteMemberRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupInviteMemberResponse::GroupInviteMemberResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInviteMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInviteMemberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInviteMemberResponseDefaultTypeInternal() {}
  union {
    GroupInviteMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInviteMemberResponseDefaultTypeInternal _GroupInviteMemberResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupReplyInviteRequest::GroupReplyInviteRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.accept_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupReplyInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupReplyInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupReplyInviteRequestDefaultTypeInternal() {}
  union {
    GroupReplyInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupReplyInviteRequestDefaultTypeInternal _GroupReplyInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupReplyInviteResponse::GroupReplyInviteResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupReplyInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupReplyInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupReplyInviteResponseDefaultTypeInternal() {}
  union {
    GroupReplyInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupReplyInviteResponseDefaultTypeInternal _GroupReplyInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupRemoveMemberRequest::GroupRemoveMemberRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupRemoveMemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupRemoveMemberRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupRemoveMemberRequestDefaultTypeInternal() {}
  union {
    GroupRemoveMemberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupRemoveMemberRequestDefaultTypeInternal _GroupRemoveMemberRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupRemoveMemberResponse::GroupRemoveMemberResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupRemoveMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupRemoveMemberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupRemoveMemberResponseDefaultTypeInternal() {}
  union {
    GroupRemoveMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupRemoveMemberResponseDefaultTypeInternal _GroupRemoveMemberResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupInfoRequest::GroupInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInfoRequestDefaultTypeInternal() {}
  union {
    GroupInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInfoRequestDefaultTypeInternal _GroupInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupMember::GroupMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.joined_at_)*/uint64_t{0u}
  , /*decltype(_impl_.role_)*/0
  , /*decltype(_impl_.state_)*/0
  , /*decltype(_impl_.last_message_index_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupMemberDefaultTypeInternal() {}
  union {
    GroupMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupMemberDefaultTypeInternal _GroupMember_default_instance_;
PROTOBUF_CONSTEXPR GroupInfo::GroupInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.members_)*/{}
  , /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_message_sender_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/uint64_t{0u}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.revision_)*/0u
  , /*decltype(_impl_.is_direct_chat_)*/false
  , /*decltype(_impl_.unread_messages_)*/0u
  , /*decltype(_impl_.last_message_at_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInfoDefaultTypeInternal() {}
  union {
    GroupInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
PROTOBUF_CONSTEXPR GroupListRequest::GroupListRequest(
    ::_pbi::ConstantInitialized) {}
struct GroupListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupListRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupListRequestDefaultTypeInternal() {}
  union {
    GroupListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupListRequestDefaultTypeInternal _GroupListRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupListResponse::GroupListResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.groups_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupListResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupListResponseDefaultTypeInternal() {}
  union {
    GroupListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupListResponseDefaultTypeInternal _GroupListResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupInvited::GroupInvited(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sender_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_)*/nullptr
  , /*decltype(_impl_.received_at_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInvitedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInvitedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInvitedDefaultTypeInternal() {}
  union {
    GroupInvited _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInvitedDefaultTypeInternal _GroupInvited_default_instance_;
PROTOBUF_CONSTEXPR GroupInvitedRequest::GroupInvitedRequest(
    ::_pbi::ConstantInitialized) {}
struct GroupInvitedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInvitedRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInvitedRequestDefaultTypeInternal() {}
  union {
    GroupInvitedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInvitedRequestDefaultTypeInternal _GroupInvitedRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupInvitedResponse::GroupInvitedResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invited_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInvitedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInvitedResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInvitedResponseDefaultTypeInternal() {}
  union {
    GroupInvitedResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInvitedResponseDefaultTypeInternal _GroupInvitedResponse_default_instance_;
}  // namespace group
}  // namespace rpc
}  // namespace qaul
static ::_pb::Metadata file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_services_2fgroup_2fgroup_5frpc_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_services_2fgroup_2fgroup_5frpc_2eproto = nullptr;

const uint32_t TableStruct_services_2fgroup_2fgroup_5frpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::Group, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::Group, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::Group, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupResult, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupResult, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupCreateRequest, _impl_.group_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupCreateResponse, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupCreateResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameRequest, _impl_.group_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameResponse, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameResponse, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRenameResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberResponse, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberResponse, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInviteMemberResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteRequest, _impl_.accept_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteResponse, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupReplyInviteResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberResponse, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberResponse, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupRemoveMemberResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfoRequest, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _impl_.role_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _impl_.joined_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupMember, _impl_.last_message_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.revision_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.is_direct_chat_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.members_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.unread_messages_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.last_message_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.last_message_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInfo, _impl_.last_message_sender_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupListResponse, _impl_.groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvited, _impl_.sender_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvited, _impl_.received_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvited, _impl_.group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvitedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvitedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::group::GroupInvitedResponse, _impl_.invited_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::rpc::group::Group)},
  { 23, -1, -1, sizeof(::qaul::rpc::group::GroupResult)},
  { 31, -1, -1, sizeof(::qaul::rpc::group::GroupCreateRequest)},
  { 38, -1, -1, sizeof(::qaul::rpc::group::GroupCreateResponse)},
  { 46, -1, -1, sizeof(::qaul::rpc::group::GroupRenameRequest)},
  { 54, -1, -1, sizeof(::qaul::rpc::group::GroupRenameResponse)},
  { 63, -1, -1, sizeof(::qaul::rpc::group::GroupInviteMemberRequest)},
  { 71, -1, -1, sizeof(::qaul::rpc::group::GroupInviteMemberResponse)},
  { 80, -1, -1, sizeof(::qaul::rpc::group::GroupReplyInviteRequest)},
  { 88, -1, -1, sizeof(::qaul::rpc::group::GroupReplyInviteResponse)},
  { 96, -1, -1, sizeof(::qaul::rpc::group::GroupRemoveMemberRequest)},
  { 104, -1, -1, sizeof(::qaul::rpc::group::GroupRemoveMemberResponse)},
  { 113, -1, -1, sizeof(::qaul::rpc::group::GroupInfoRequest)},
  { 120, -1, -1, sizeof(::qaul::rpc::group::GroupMember)},
  { 131, -1, -1, sizeof(::qaul::rpc::group::GroupInfo)},
  { 148, -1, -1, sizeof(::qaul::rpc::group::GroupListRequest)},
  { 154, -1, -1, sizeof(::qaul::rpc::group::GroupListResponse)},
  { 161, -1, -1, sizeof(::qaul::rpc::group::GroupInvited)},
  { 170, -1, -1, sizeof(::qaul::rpc::group::GroupInvitedRequest)},
  { 176, -1, -1, sizeof(::qaul::rpc::group::GroupInvitedResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::qaul::rpc::group::_Group_default_instance_._instance,
  &::qaul::rpc::group::_GroupResult_default_instance_._instance,
  &::qaul::rpc::group::_GroupCreateRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupCreateResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupRenameRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupRenameResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupInviteMemberRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupInviteMemberResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupReplyInviteRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupReplyInviteResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupRemoveMemberRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupRemoveMemberResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupInfoRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupMember_default_instance_._instance,
  &::qaul::rpc::group::_GroupInfo_default_instance_._instance,
  &::qaul::rpc::group::_GroupListRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupListResponse_default_instance_._instance,
  &::qaul::rpc::group::_GroupInvited_default_instance_._instance,
  &::qaul::rpc::group::_GroupInvitedRequest_default_instance_._instance,
  &::qaul::rpc::group::_GroupInvitedResponse_default_instance_._instance,
};

const char descriptor_table_protodef_services_2fgroup_2fgroup_5frpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036services/group/group_rpc.proto\022\016qaul.r"
  "pc.group\"\230\t\n\005Group\022B\n\024group_create_reque"
  "st\030\001 \001(\0132\".qaul.rpc.group.GroupCreateReq"
  "uestH\000\022D\n\025group_create_response\030\002 \001(\0132#."
  "qaul.rpc.group.GroupCreateResponseH\000\022B\n\024"
  "group_rename_request\030\003 \001(\0132\".qaul.rpc.gr"
  "oup.GroupRenameRequestH\000\022D\n\025group_rename"
  "_response\030\004 \001(\0132#.qaul.rpc.group.GroupRe"
  "nameResponseH\000\022O\n\033group_invite_member_re"
  "quest\030\005 \001(\0132(.qaul.rpc.group.GroupInvite"
  "MemberRequestH\000\022Q\n\034group_invite_member_r"
  "esponse\030\006 \001(\0132).qaul.rpc.group.GroupInvi"
  "teMemberResponseH\000\022O\n\033group_remove_membe"
  "r_request\030\007 \001(\0132(.qaul.rpc.group.GroupRe"
  "moveMemberRequestH\000\022Q\n\034group_remove_memb"
  "er_response\030\010 \001(\0132).qaul.rpc.group.Group"
  "RemoveMemberResponseH\000\022>\n\022group_info_req"
  "uest\030\t \001(\0132 .qaul.rpc.group.GroupInfoReq"
  "uestH\000\0228\n\023group_info_response\030\n \001(\0132\031.qa"
  "ul.rpc.group.GroupInfoH\000\022M\n\032group_reply_"
  "invite_request\030\013 \001(\0132\'.qaul.rpc.group.Gr"
  "oupReplyInviteRequestH\000\022O\n\033group_reply_i"
  "nvite_response\030\014 \001(\0132(.qaul.rpc.group.Gr"
  "oupReplyInviteResponseH\000\022>\n\022group_list_r"
  "equest\030\r \001(\0132 .qaul.rpc.group.GroupListR"
  "equestH\000\022@\n\023group_list_response\030\016 \001(\0132!."
  "qaul.rpc.group.GroupListResponseH\000\022D\n\025gr"
  "oup_invited_request\030\017 \001(\0132#.qaul.rpc.gro"
  "up.GroupInvitedRequestH\000\022F\n\026group_invite"
  "d_response\030\020 \001(\0132$.qaul.rpc.group.GroupI"
  "nvitedResponseH\000B\t\n\007message\".\n\013GroupResu"
  "lt\022\016\n\006status\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"(\n\022G"
  "roupCreateRequest\022\022\n\ngroup_name\030\001 \001(\t\"T\n"
  "\023GroupCreateResponse\022\020\n\010group_id\030\001 \001(\014\022+"
  "\n\006result\030\002 \001(\0132\033.qaul.rpc.group.GroupRes"
  "ult\":\n\022GroupRenameRequest\022\020\n\010group_id\030\001 "
  "\001(\014\022\022\n\ngroup_name\030\002 \001(\t\"h\n\023GroupRenameRe"
  "sponse\022\020\n\010group_id\030\001 \001(\014\022\022\n\ngroup_name\030\002"
  " \001(\t\022+\n\006result\030\003 \001(\0132\033.qaul.rpc.group.Gr"
  "oupResult\"=\n\030GroupInviteMemberRequest\022\020\n"
  "\010group_id\030\001 \001(\014\022\017\n\007user_id\030\002 \001(\014\"k\n\031Grou"
  "pInviteMemberResponse\022\020\n\010group_id\030\001 \001(\014\022"
  "\017\n\007user_id\030\002 \001(\014\022+\n\006result\030\003 \001(\0132\033.qaul."
  "rpc.group.GroupResult\";\n\027GroupReplyInvit"
  "eRequest\022\020\n\010group_id\030\001 \001(\014\022\016\n\006accept\030\003 \001"
  "(\010\"Y\n\030GroupReplyInviteResponse\022\020\n\010group_"
  "id\030\001 \001(\014\022+\n\006result\030\003 \001(\0132\033.qaul.rpc.grou"
  "p.GroupResult\"=\n\030GroupRemoveMemberReques"
  "t\022\020\n\010group_id\030\001 \001(\014\022\017\n\007user_id\030\002 \001(\014\"k\n\031"
  "GroupRemoveMemberResponse\022\020\n\010group_id\030\001 "
  "\001(\014\022\017\n\007user_id\030\002 \001(\014\022+\n\006result\030\003 \001(\0132\033.q"
  "aul.rpc.group.GroupResult\"$\n\020GroupInfoRe"
  "quest\022\020\n\010group_id\030\001 \001(\014\"\255\001\n\013GroupMember\022"
  "\017\n\007user_id\030\001 \001(\014\022-\n\004role\030\002 \001(\0162\037.qaul.rp"
  "c.group.GroupMemberRole\022\021\n\tjoined_at\030\003 \001"
  "(\004\022/\n\005state\030\004 \001(\0162 .qaul.rpc.group.Group"
  "MemberState\022\032\n\022last_message_index\030\005 \001(\r\""
  "\262\002\n\tGroupInfo\022\020\n\010group_id\030\001 \001(\014\022\022\n\ngroup"
  "_name\030\002 \001(\t\022\022\n\ncreated_at\030\003 \001(\004\022+\n\006statu"
  "s\030\004 \001(\0162\033.qaul.rpc.group.GroupStatus\022\020\n\010"
  "revision\030\005 \001(\r\022\026\n\016is_direct_chat\030\006 \001(\010\022,"
  "\n\007members\030\007 \003(\0132\033.qaul.rpc.group.GroupMe"
  "mber\022\027\n\017unread_messages\030\010 \001(\r\022\027\n\017last_me"
  "ssage_at\030\t \001(\004\022\024\n\014last_message\030\n \001(\014\022\036\n\026"
  "last_message_sender_id\030\013 \001(\014\"\022\n\020GroupLis"
  "tRequest\">\n\021GroupListResponse\022)\n\006groups\030"
  "\001 \003(\0132\031.qaul.rpc.group.GroupInfo\"`\n\014Grou"
  "pInvited\022\021\n\tsender_id\030\001 \001(\014\022\023\n\013received_"
  "at\030\002 \001(\004\022(\n\005group\030\003 \001(\0132\031.qaul.rpc.group"
  ".GroupInfo\"\025\n\023GroupInvitedRequest\"E\n\024Gro"
  "upInvitedResponse\022-\n\007invited\030\001 \003(\0132\034.qau"
  "l.rpc.group.GroupInvited*.\n\020GroupMemberS"
  "tate\022\013\n\007Invited\020\000\022\r\n\tActivated\020\001*\'\n\017Grou"
  "pMemberRole\022\010\n\004User\020\000\022\n\n\005Admin\020\377\001*\?\n\013Gro"
  "upStatus\022\n\n\006ACTIVE\020\000\022\023\n\017INVITE_ACCEPTED\020"
  "\001\022\017\n\013DEACTIVATED\020\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto = {
    false, false, 3026, descriptor_table_protodef_services_2fgroup_2fgroup_5frpc_2eproto,
    "services/group/group_rpc.proto",
    &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once, nullptr, 0, 20,
    schemas, file_default_instances, TableStruct_services_2fgroup_2fgroup_5frpc_2eproto::offsets,
    file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto, file_level_enum_descriptors_services_2fgroup_2fgroup_5frpc_2eproto,
    file_level_service_descriptors_services_2fgroup_2fgroup_5frpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter() {
  return &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_services_2fgroup_2fgroup_5frpc_2eproto(&descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto);
namespace qaul {
namespace rpc {
namespace group {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GroupMemberState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto);
  return file_level_enum_descriptors_services_2fgroup_2fgroup_5frpc_2eproto[0];
}
bool GroupMemberState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GroupMemberRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto);
  return file_level_enum_descriptors_services_2fgroup_2fgroup_5frpc_2eproto[1];
}
bool GroupMemberRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GroupStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto);
  return file_level_enum_descriptors_services_2fgroup_2fgroup_5frpc_2eproto[2];
}
bool GroupStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Group::_Internal {
 public:
  static const ::qaul::rpc::group::GroupCreateRequest& group_create_request(const Group* msg);
  static const ::qaul::rpc::group::GroupCreateResponse& group_create_response(const Group* msg);
  static const ::qaul::rpc::group::GroupRenameRequest& group_rename_request(const Group* msg);
  static const ::qaul::rpc::group::GroupRenameResponse& group_rename_response(const Group* msg);
  static const ::qaul::rpc::group::GroupInviteMemberRequest& group_invite_member_request(const Group* msg);
  static const ::qaul::rpc::group::GroupInviteMemberResponse& group_invite_member_response(const Group* msg);
  static const ::qaul::rpc::group::GroupRemoveMemberRequest& group_remove_member_request(const Group* msg);
  static const ::qaul::rpc::group::GroupRemoveMemberResponse& group_remove_member_response(const Group* msg);
  static const ::qaul::rpc::group::GroupInfoRequest& group_info_request(const Group* msg);
  static const ::qaul::rpc::group::GroupInfo& group_info_response(const Group* msg);
  static const ::qaul::rpc::group::GroupReplyInviteRequest& group_reply_invite_request(const Group* msg);
  static const ::qaul::rpc::group::GroupReplyInviteResponse& group_reply_invite_response(const Group* msg);
  static const ::qaul::rpc::group::GroupListRequest& group_list_request(const Group* msg);
  static const ::qaul::rpc::group::GroupListResponse& group_list_response(const Group* msg);
  static const ::qaul::rpc::group::GroupInvitedRequest& group_invited_request(const Group* msg);
  static const ::qaul::rpc::group::GroupInvitedResponse& group_invited_response(const Group* msg);
};

const ::qaul::rpc::group::GroupCreateRequest&
Group::_Internal::group_create_request(const Group* msg) {
  return *msg->_impl_.message_.group_create_request_;
}
const ::qaul::rpc::group::GroupCreateResponse&
Group::_Internal::group_create_response(const Group* msg) {
  return *msg->_impl_.message_.group_create_response_;
}
const ::qaul::rpc::group::GroupRenameRequest&
Group::_Internal::group_rename_request(const Group* msg) {
  return *msg->_impl_.message_.group_rename_request_;
}
const ::qaul::rpc::group::GroupRenameResponse&
Group::_Internal::group_rename_response(const Group* msg) {
  return *msg->_impl_.message_.group_rename_response_;
}
const ::qaul::rpc::group::GroupInviteMemberRequest&
Group::_Internal::group_invite_member_request(const Group* msg) {
  return *msg->_impl_.message_.group_invite_member_request_;
}
const ::qaul::rpc::group::GroupInviteMemberResponse&
Group::_Internal::group_invite_member_response(const Group* msg) {
  return *msg->_impl_.message_.group_invite_member_response_;
}
const ::qaul::rpc::group::GroupRemoveMemberRequest&
Group::_Internal::group_remove_member_request(const Group* msg) {
  return *msg->_impl_.message_.group_remove_member_request_;
}
const ::qaul::rpc::group::GroupRemoveMemberResponse&
Group::_Internal::group_remove_member_response(const Group* msg) {
  return *msg->_impl_.message_.group_remove_member_response_;
}
const ::qaul::rpc::group::GroupInfoRequest&
Group::_Internal::group_info_request(const Group* msg) {
  return *msg->_impl_.message_.group_info_request_;
}
const ::qaul::rpc::group::GroupInfo&
Group::_Internal::group_info_response(const Group* msg) {
  return *msg->_impl_.message_.group_info_response_;
}
const ::qaul::rpc::group::GroupReplyInviteRequest&
Group::_Internal::group_reply_invite_request(const Group* msg) {
  return *msg->_impl_.message_.group_reply_invite_request_;
}
const ::qaul::rpc::group::GroupReplyInviteResponse&
Group::_Internal::group_reply_invite_response(const Group* msg) {
  return *msg->_impl_.message_.group_reply_invite_response_;
}
const ::qaul::rpc::group::GroupListRequest&
Group::_Internal::group_list_request(const Group* msg) {
  return *msg->_impl_.message_.group_list_request_;
}
const ::qaul::rpc::group::GroupListResponse&
Group::_Internal::group_list_response(const Group* msg) {
  return *msg->_impl_.message_.group_list_response_;
}
const ::qaul::rpc::group::GroupInvitedRequest&
Group::_Internal::group_invited_request(const Group* msg) {
  return *msg->_impl_.message_.group_invited_request_;
}
const ::qaul::rpc::group::GroupInvitedResponse&
Group::_Internal::group_invited_response(const Group* msg) {
  return *msg->_impl_.message_.group_invited_response_;
}
void Group::set_allocated_group_create_request(::qaul::rpc::group::GroupCreateRequest* group_create_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_create_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_create_request);
    if (message_arena != submessage_arena) {
      group_create_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_create_request, submessage_arena);
    }
    set_has_group_create_request();
    _impl_.message_.group_create_request_ = group_create_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_create_request)
}
void Group::set_allocated_group_create_response(::qaul::rpc::group::GroupCreateResponse* group_create_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_create_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_create_response);
    if (message_arena != submessage_arena) {
      group_create_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_create_response, submessage_arena);
    }
    set_has_group_create_response();
    _impl_.message_.group_create_response_ = group_create_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_create_response)
}
void Group::set_allocated_group_rename_request(::qaul::rpc::group::GroupRenameRequest* group_rename_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_rename_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_rename_request);
    if (message_arena != submessage_arena) {
      group_rename_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_rename_request, submessage_arena);
    }
    set_has_group_rename_request();
    _impl_.message_.group_rename_request_ = group_rename_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_rename_request)
}
void Group::set_allocated_group_rename_response(::qaul::rpc::group::GroupRenameResponse* group_rename_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_rename_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_rename_response);
    if (message_arena != submessage_arena) {
      group_rename_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_rename_response, submessage_arena);
    }
    set_has_group_rename_response();
    _impl_.message_.group_rename_response_ = group_rename_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_rename_response)
}
void Group::set_allocated_group_invite_member_request(::qaul::rpc::group::GroupInviteMemberRequest* group_invite_member_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_invite_member_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_invite_member_request);
    if (message_arena != submessage_arena) {
      group_invite_member_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_invite_member_request, submessage_arena);
    }
    set_has_group_invite_member_request();
    _impl_.message_.group_invite_member_request_ = group_invite_member_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_invite_member_request)
}
void Group::set_allocated_group_invite_member_response(::qaul::rpc::group::GroupInviteMemberResponse* group_invite_member_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_invite_member_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_invite_member_response);
    if (message_arena != submessage_arena) {
      group_invite_member_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_invite_member_response, submessage_arena);
    }
    set_has_group_invite_member_response();
    _impl_.message_.group_invite_member_response_ = group_invite_member_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_invite_member_response)
}
void Group::set_allocated_group_remove_member_request(::qaul::rpc::group::GroupRemoveMemberRequest* group_remove_member_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_remove_member_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_remove_member_request);
    if (message_arena != submessage_arena) {
      group_remove_member_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_remove_member_request, submessage_arena);
    }
    set_has_group_remove_member_request();
    _impl_.message_.group_remove_member_request_ = group_remove_member_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_remove_member_request)
}
void Group::set_allocated_group_remove_member_response(::qaul::rpc::group::GroupRemoveMemberResponse* group_remove_member_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_remove_member_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_remove_member_response);
    if (message_arena != submessage_arena) {
      group_remove_member_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_remove_member_response, submessage_arena);
    }
    set_has_group_remove_member_response();
    _impl_.message_.group_remove_member_response_ = group_remove_member_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_remove_member_response)
}
void Group::set_allocated_group_info_request(::qaul::rpc::group::GroupInfoRequest* group_info_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_info_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_info_request);
    if (message_arena != submessage_arena) {
      group_info_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_info_request, submessage_arena);
    }
    set_has_group_info_request();
    _impl_.message_.group_info_request_ = group_info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_info_request)
}
void Group::set_allocated_group_info_response(::qaul::rpc::group::GroupInfo* group_info_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_info_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_info_response);
    if (message_arena != submessage_arena) {
      group_info_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_info_response, submessage_arena);
    }
    set_has_group_info_response();
    _impl_.message_.group_info_response_ = group_info_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_info_response)
}
void Group::set_allocated_group_reply_invite_request(::qaul::rpc::group::GroupReplyInviteRequest* group_reply_invite_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_reply_invite_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_reply_invite_request);
    if (message_arena != submessage_arena) {
      group_reply_invite_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_reply_invite_request, submessage_arena);
    }
    set_has_group_reply_invite_request();
    _impl_.message_.group_reply_invite_request_ = group_reply_invite_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_reply_invite_request)
}
void Group::set_allocated_group_reply_invite_response(::qaul::rpc::group::GroupReplyInviteResponse* group_reply_invite_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_reply_invite_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_reply_invite_response);
    if (message_arena != submessage_arena) {
      group_reply_invite_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_reply_invite_response, submessage_arena);
    }
    set_has_group_reply_invite_response();
    _impl_.message_.group_reply_invite_response_ = group_reply_invite_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_reply_invite_response)
}
void Group::set_allocated_group_list_request(::qaul::rpc::group::GroupListRequest* group_list_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_list_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_list_request);
    if (message_arena != submessage_arena) {
      group_list_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_list_request, submessage_arena);
    }
    set_has_group_list_request();
    _impl_.message_.group_list_request_ = group_list_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_list_request)
}
void Group::set_allocated_group_list_response(::qaul::rpc::group::GroupListResponse* group_list_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_list_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_list_response);
    if (message_arena != submessage_arena) {
      group_list_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_list_response, submessage_arena);
    }
    set_has_group_list_response();
    _impl_.message_.group_list_response_ = group_list_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_list_response)
}
void Group::set_allocated_group_invited_request(::qaul::rpc::group::GroupInvitedRequest* group_invited_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_invited_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_invited_request);
    if (message_arena != submessage_arena) {
      group_invited_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_invited_request, submessage_arena);
    }
    set_has_group_invited_request();
    _impl_.message_.group_invited_request_ = group_invited_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_invited_request)
}
void Group::set_allocated_group_invited_response(::qaul::rpc::group::GroupInvitedResponse* group_invited_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_invited_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_invited_response);
    if (message_arena != submessage_arena) {
      group_invited_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_invited_response, submessage_arena);
    }
    set_has_group_invited_response();
    _impl_.message_.group_invited_response_ = group_invited_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.group.Group.group_invited_response)
}
Group::Group(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.Group)
}
Group::Group(const Group& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Group* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kGroupCreateRequest: {
      _this->_internal_mutable_group_create_request()->::qaul::rpc::group::GroupCreateRequest::MergeFrom(
          from._internal_group_create_request());
      break;
    }
    case kGroupCreateResponse: {
      _this->_internal_mutable_group_create_response()->::qaul::rpc::group::GroupCreateResponse::MergeFrom(
          from._internal_group_create_response());
      break;
    }
    case kGroupRenameRequest: {
      _this->_internal_mutable_group_rename_request()->::qaul::rpc::group::GroupRenameRequest::MergeFrom(
          from._internal_group_rename_request());
      break;
    }
    case kGroupRenameResponse: {
      _this->_internal_mutable_group_rename_response()->::qaul::rpc::group::GroupRenameResponse::MergeFrom(
          from._internal_group_rename_response());
      break;
    }
    case kGroupInviteMemberRequest: {
      _this->_internal_mutable_group_invite_member_request()->::qaul::rpc::group::GroupInviteMemberRequest::MergeFrom(
          from._internal_group_invite_member_request());
      break;
    }
    case kGroupInviteMemberResponse: {
      _this->_internal_mutable_group_invite_member_response()->::qaul::rpc::group::GroupInviteMemberResponse::MergeFrom(
          from._internal_group_invite_member_response());
      break;
    }
    case kGroupRemoveMemberRequest: {
      _this->_internal_mutable_group_remove_member_request()->::qaul::rpc::group::GroupRemoveMemberRequest::MergeFrom(
          from._internal_group_remove_member_request());
      break;
    }
    case kGroupRemoveMemberResponse: {
      _this->_internal_mutable_group_remove_member_response()->::qaul::rpc::group::GroupRemoveMemberResponse::MergeFrom(
          from._internal_group_remove_member_response());
      break;
    }
    case kGroupInfoRequest: {
      _this->_internal_mutable_group_info_request()->::qaul::rpc::group::GroupInfoRequest::MergeFrom(
          from._internal_group_info_request());
      break;
    }
    case kGroupInfoResponse: {
      _this->_internal_mutable_group_info_response()->::qaul::rpc::group::GroupInfo::MergeFrom(
          from._internal_group_info_response());
      break;
    }
    case kGroupReplyInviteRequest: {
      _this->_internal_mutable_group_reply_invite_request()->::qaul::rpc::group::GroupReplyInviteRequest::MergeFrom(
          from._internal_group_reply_invite_request());
      break;
    }
    case kGroupReplyInviteResponse: {
      _this->_internal_mutable_group_reply_invite_response()->::qaul::rpc::group::GroupReplyInviteResponse::MergeFrom(
          from._internal_group_reply_invite_response());
      break;
    }
    case kGroupListRequest: {
      _this->_internal_mutable_group_list_request()->::qaul::rpc::group::GroupListRequest::MergeFrom(
          from._internal_group_list_request());
      break;
    }
    case kGroupListResponse: {
      _this->_internal_mutable_group_list_response()->::qaul::rpc::group::GroupListResponse::MergeFrom(
          from._internal_group_list_response());
      break;
    }
    case kGroupInvitedRequest: {
      _this->_internal_mutable_group_invited_request()->::qaul::rpc::group::GroupInvitedRequest::MergeFrom(
          from._internal_group_invited_request());
      break;
    }
    case kGroupInvitedResponse: {
      _this->_internal_mutable_group_invited_response()->::qaul::rpc::group::GroupInvitedResponse::MergeFrom(
          from._internal_group_invited_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.Group)
}

inline void Group::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message();
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.Group)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Group::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Group::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Group::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.rpc.group.Group)
  switch (message_case()) {
    case kGroupCreateRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_create_request_;
      }
      break;
    }
    case kGroupCreateResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_create_response_;
      }
      break;
    }
    case kGroupRenameRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_rename_request_;
      }
      break;
    }
    case kGroupRenameResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_rename_response_;
      }
      break;
    }
    case kGroupInviteMemberRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_invite_member_request_;
      }
      break;
    }
    case kGroupInviteMemberResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_invite_member_response_;
      }
      break;
    }
    case kGroupRemoveMemberRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_remove_member_request_;
      }
      break;
    }
    case kGroupRemoveMemberResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_remove_member_response_;
      }
      break;
    }
    case kGroupInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_info_request_;
      }
      break;
    }
    case kGroupInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_info_response_;
      }
      break;
    }
    case kGroupReplyInviteRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_reply_invite_request_;
      }
      break;
    }
    case kGroupReplyInviteResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_reply_invite_response_;
      }
      break;
    }
    case kGroupListRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_list_request_;
      }
      break;
    }
    case kGroupListResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_list_response_;
      }
      break;
    }
    case kGroupInvitedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_invited_request_;
      }
      break;
    }
    case kGroupInvitedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_invited_response_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.Group)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Group::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.group.GroupCreateRequest group_create_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_create_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupCreateResponse group_create_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_create_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupRenameRequest group_rename_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_rename_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupRenameResponse group_rename_response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_rename_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInviteMemberRequest group_invite_member_request = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_invite_member_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInviteMemberResponse group_invite_member_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_invite_member_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupRemoveMemberRequest group_remove_member_request = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_remove_member_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupRemoveMemberResponse group_remove_member_response = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_remove_member_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInfoRequest group_info_request = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_info_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInfo group_info_response = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_info_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupReplyInviteRequest group_reply_invite_request = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_reply_invite_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupReplyInviteResponse group_reply_invite_response = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_reply_invite_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupListRequest group_list_request = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_list_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupListResponse group_list_response = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_list_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInvitedRequest group_invited_request = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_invited_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInvitedResponse group_invited_response = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_invited_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Group::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.Group)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.group.GroupCreateRequest group_create_request = 1;
  if (_internal_has_group_create_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::group_create_request(this),
        _Internal::group_create_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupCreateResponse group_create_response = 2;
  if (_internal_has_group_create_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::group_create_response(this),
        _Internal::group_create_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupRenameRequest group_rename_request = 3;
  if (_internal_has_group_rename_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::group_rename_request(this),
        _Internal::group_rename_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupRenameResponse group_rename_response = 4;
  if (_internal_has_group_rename_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::group_rename_response(this),
        _Internal::group_rename_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInviteMemberRequest group_invite_member_request = 5;
  if (_internal_has_group_invite_member_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::group_invite_member_request(this),
        _Internal::group_invite_member_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInviteMemberResponse group_invite_member_response = 6;
  if (_internal_has_group_invite_member_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::group_invite_member_response(this),
        _Internal::group_invite_member_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupRemoveMemberRequest group_remove_member_request = 7;
  if (_internal_has_group_remove_member_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::group_remove_member_request(this),
        _Internal::group_remove_member_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupRemoveMemberResponse group_remove_member_response = 8;
  if (_internal_has_group_remove_member_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::group_remove_member_response(this),
        _Internal::group_remove_member_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInfoRequest group_info_request = 9;
  if (_internal_has_group_info_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::group_info_request(this),
        _Internal::group_info_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInfo group_info_response = 10;
  if (_internal_has_group_info_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::group_info_response(this),
        _Internal::group_info_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupReplyInviteRequest group_reply_invite_request = 11;
  if (_internal_has_group_reply_invite_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::group_reply_invite_request(this),
        _Internal::group_reply_invite_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupReplyInviteResponse group_reply_invite_response = 12;
  if (_internal_has_group_reply_invite_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::group_reply_invite_response(this),
        _Internal::group_reply_invite_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupListRequest group_list_request = 13;
  if (_internal_has_group_list_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::group_list_request(this),
        _Internal::group_list_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupListResponse group_list_response = 14;
  if (_internal_has_group_list_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::group_list_response(this),
        _Internal::group_list_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInvitedRequest group_invited_request = 15;
  if (_internal_has_group_invited_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::group_invited_request(this),
        _Internal::group_invited_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.group.GroupInvitedResponse group_invited_response = 16;
  if (_internal_has_group_invited_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::group_invited_response(this),
        _Internal::group_invited_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.Group)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.rpc.group.GroupCreateRequest group_create_request = 1;
    case kGroupCreateRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_create_request_);
      break;
    }
    // .qaul.rpc.group.GroupCreateResponse group_create_response = 2;
    case kGroupCreateResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_create_response_);
      break;
    }
    // .qaul.rpc.group.GroupRenameRequest group_rename_request = 3;
    case kGroupRenameRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_rename_request_);
      break;
    }
    // .qaul.rpc.group.GroupRenameResponse group_rename_response = 4;
    case kGroupRenameResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_rename_response_);
      break;
    }
    // .qaul.rpc.group.GroupInviteMemberRequest group_invite_member_request = 5;
    case kGroupInviteMemberRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_invite_member_request_);
      break;
    }
    // .qaul.rpc.group.GroupInviteMemberResponse group_invite_member_response = 6;
    case kGroupInviteMemberResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_invite_member_response_);
      break;
    }
    // .qaul.rpc.group.GroupRemoveMemberRequest group_remove_member_request = 7;
    case kGroupRemoveMemberRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_remove_member_request_);
      break;
    }
    // .qaul.rpc.group.GroupRemoveMemberResponse group_remove_member_response = 8;
    case kGroupRemoveMemberResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_remove_member_response_);
      break;
    }
    // .qaul.rpc.group.GroupInfoRequest group_info_request = 9;
    case kGroupInfoRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_info_request_);
      break;
    }
    // .qaul.rpc.group.GroupInfo group_info_response = 10;
    case kGroupInfoResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_info_response_);
      break;
    }
    // .qaul.rpc.group.GroupReplyInviteRequest group_reply_invite_request = 11;
    case kGroupReplyInviteRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_reply_invite_request_);
      break;
    }
    // .qaul.rpc.group.GroupReplyInviteResponse group_reply_invite_response = 12;
    case kGroupReplyInviteResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_reply_invite_response_);
      break;
    }
    // .qaul.rpc.group.GroupListRequest group_list_request = 13;
    case kGroupListRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_list_request_);
      break;
    }
    // .qaul.rpc.group.GroupListResponse group_list_response = 14;
    case kGroupListResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_list_response_);
      break;
    }
    // .qaul.rpc.group.GroupInvitedRequest group_invited_request = 15;
    case kGroupInvitedRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_invited_request_);
      break;
    }
    // .qaul.rpc.group.GroupInvitedResponse group_invited_response = 16;
    case kGroupInvitedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_invited_response_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Group::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Group::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Group::GetClassData() const { return &_class_data_; }


void Group::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Group*>(&to_msg);
  auto& from = static_cast<const Group&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.Group)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kGroupCreateRequest: {
      _this->_internal_mutable_group_create_request()->::qaul::rpc::group::GroupCreateRequest::MergeFrom(
          from._internal_group_create_request());
      break;
    }
    case kGroupCreateResponse: {
      _this->_internal_mutable_group_create_response()->::qaul::rpc::group::GroupCreateResponse::MergeFrom(
          from._internal_group_create_response());
      break;
    }
    case kGroupRenameRequest: {
      _this->_internal_mutable_group_rename_request()->::qaul::rpc::group::GroupRenameRequest::MergeFrom(
          from._internal_group_rename_request());
      break;
    }
    case kGroupRenameResponse: {
      _this->_internal_mutable_group_rename_response()->::qaul::rpc::group::GroupRenameResponse::MergeFrom(
          from._internal_group_rename_response());
      break;
    }
    case kGroupInviteMemberRequest: {
      _this->_internal_mutable_group_invite_member_request()->::qaul::rpc::group::GroupInviteMemberRequest::MergeFrom(
          from._internal_group_invite_member_request());
      break;
    }
    case kGroupInviteMemberResponse: {
      _this->_internal_mutable_group_invite_member_response()->::qaul::rpc::group::GroupInviteMemberResponse::MergeFrom(
          from._internal_group_invite_member_response());
      break;
    }
    case kGroupRemoveMemberRequest: {
      _this->_internal_mutable_group_remove_member_request()->::qaul::rpc::group::GroupRemoveMemberRequest::MergeFrom(
          from._internal_group_remove_member_request());
      break;
    }
    case kGroupRemoveMemberResponse: {
      _this->_internal_mutable_group_remove_member_response()->::qaul::rpc::group::GroupRemoveMemberResponse::MergeFrom(
          from._internal_group_remove_member_response());
      break;
    }
    case kGroupInfoRequest: {
      _this->_internal_mutable_group_info_request()->::qaul::rpc::group::GroupInfoRequest::MergeFrom(
          from._internal_group_info_request());
      break;
    }
    case kGroupInfoResponse: {
      _this->_internal_mutable_group_info_response()->::qaul::rpc::group::GroupInfo::MergeFrom(
          from._internal_group_info_response());
      break;
    }
    case kGroupReplyInviteRequest: {
      _this->_internal_mutable_group_reply_invite_request()->::qaul::rpc::group::GroupReplyInviteRequest::MergeFrom(
          from._internal_group_reply_invite_request());
      break;
    }
    case kGroupReplyInviteResponse: {
      _this->_internal_mutable_group_reply_invite_response()->::qaul::rpc::group::GroupReplyInviteResponse::MergeFrom(
          from._internal_group_reply_invite_response());
      break;
    }
    case kGroupListRequest: {
      _this->_internal_mutable_group_list_request()->::qaul::rpc::group::GroupListRequest::MergeFrom(
          from._internal_group_list_request());
      break;
    }
    case kGroupListResponse: {
      _this->_internal_mutable_group_list_response()->::qaul::rpc::group::GroupListResponse::MergeFrom(
          from._internal_group_list_response());
      break;
    }
    case kGroupInvitedRequest: {
      _this->_internal_mutable_group_invited_request()->::qaul::rpc::group::GroupInvitedRequest::MergeFrom(
          from._internal_group_invited_request());
      break;
    }
    case kGroupInvitedResponse: {
      _this->_internal_mutable_group_invited_response()->::qaul::rpc::group::GroupInvitedResponse::MergeFrom(
          from._internal_group_invited_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::InternalSwap(Group* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Group::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[0]);
}

// ===================================================================

class GroupResult::_Internal {
 public:
};

GroupResult::GroupResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupResult)
}
GroupResult::GroupResult(const GroupResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupResult)
}

inline void GroupResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupResult::~GroupResult() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void GroupResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupResult::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.group.GroupResult.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.group.GroupResult.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupResult)
  return target;
}

size_t GroupResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupResult::GetClassData() const { return &_class_data_; }


void GroupResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupResult*>(&to_msg);
  auto& from = static_cast<const GroupResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupResult::CopyFrom(const GroupResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupResult::IsInitialized() const {
  return true;
}

void GroupResult::InternalSwap(GroupResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[1]);
}

// ===================================================================

class GroupCreateRequest::_Internal {
 public:
};

GroupCreateRequest::GroupCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupCreateRequest)
}
GroupCreateRequest::GroupCreateRequest(const GroupCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupCreateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupCreateRequest)
}

inline void GroupCreateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupCreateRequest::~GroupCreateRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupCreateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_name_.Destroy();
}

void GroupCreateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupCreateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupCreateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string group_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.group.GroupCreateRequest.group_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupCreateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupCreateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_name = 1;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.group.GroupCreateRequest.group_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_group_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupCreateRequest)
  return target;
}

size_t GroupCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupCreateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string group_name = 1;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupCreateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupCreateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupCreateRequest::GetClassData() const { return &_class_data_; }


void GroupCreateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupCreateRequest*>(&to_msg);
  auto& from = static_cast<const GroupCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupCreateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupCreateRequest::CopyFrom(const GroupCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreateRequest::IsInitialized() const {
  return true;
}

void GroupCreateRequest::InternalSwap(GroupCreateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[2]);
}

// ===================================================================

class GroupCreateResponse::_Internal {
 public:
  static const ::qaul::rpc::group::GroupResult& result(const GroupCreateResponse* msg);
};

const ::qaul::rpc::group::GroupResult&
GroupCreateResponse::_Internal::result(const GroupCreateResponse* msg) {
  return *msg->_impl_.result_;
}
GroupCreateResponse::GroupCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupCreateResponse)
}
GroupCreateResponse::GroupCreateResponse(const GroupCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupCreateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::qaul::rpc::group::GroupResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupCreateResponse)
}

inline void GroupCreateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupCreateResponse::~GroupCreateResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupCreateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupCreateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupCreateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupCreateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupResult result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupCreateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupCreateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // .qaul.rpc.group.GroupResult result = 2;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupCreateResponse)
  return target;
}

size_t GroupCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupCreateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // .qaul.rpc.group.GroupResult result = 2;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupCreateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupCreateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupCreateResponse::GetClassData() const { return &_class_data_; }


void GroupCreateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupCreateResponse*>(&to_msg);
  auto& from = static_cast<const GroupCreateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupCreateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::qaul::rpc::group::GroupResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupCreateResponse::CopyFrom(const GroupCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreateResponse::IsInitialized() const {
  return true;
}

void GroupCreateResponse::InternalSwap(GroupCreateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupCreateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[3]);
}

// ===================================================================

class GroupRenameRequest::_Internal {
 public:
};

GroupRenameRequest::GroupRenameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupRenameRequest)
}
GroupRenameRequest::GroupRenameRequest(const GroupRenameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupRenameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupRenameRequest)
}

inline void GroupRenameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupRenameRequest::~GroupRenameRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupRenameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupRenameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.group_name_.Destroy();
}

void GroupRenameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupRenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupRenameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupRenameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.group.GroupRenameRequest.group_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupRenameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupRenameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.group.GroupRenameRequest.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupRenameRequest)
  return target;
}

size_t GroupRenameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupRenameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupRenameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupRenameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupRenameRequest::GetClassData() const { return &_class_data_; }


void GroupRenameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupRenameRequest*>(&to_msg);
  auto& from = static_cast<const GroupRenameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupRenameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupRenameRequest::CopyFrom(const GroupRenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupRenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRenameRequest::IsInitialized() const {
  return true;
}

void GroupRenameRequest::InternalSwap(GroupRenameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupRenameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[4]);
}

// ===================================================================

class GroupRenameResponse::_Internal {
 public:
  static const ::qaul::rpc::group::GroupResult& result(const GroupRenameResponse* msg);
};

const ::qaul::rpc::group::GroupResult&
GroupRenameResponse::_Internal::result(const GroupRenameResponse* msg) {
  return *msg->_impl_.result_;
}
GroupRenameResponse::GroupRenameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupRenameResponse)
}
GroupRenameResponse::GroupRenameResponse(const GroupRenameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupRenameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::qaul::rpc::group::GroupResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupRenameResponse)
}

inline void GroupRenameResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupRenameResponse::~GroupRenameResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupRenameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupRenameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.group_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupRenameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupRenameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupRenameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupRenameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.group.GroupRenameResponse.group_name"));
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupResult result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupRenameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupRenameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.group.GroupRenameResponse.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupRenameResponse)
  return target;
}

size_t GroupRenameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupRenameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupRenameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupRenameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupRenameResponse::GetClassData() const { return &_class_data_; }


void GroupRenameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupRenameResponse*>(&to_msg);
  auto& from = static_cast<const GroupRenameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupRenameResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::qaul::rpc::group::GroupResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupRenameResponse::CopyFrom(const GroupRenameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupRenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRenameResponse::IsInitialized() const {
  return true;
}

void GroupRenameResponse::InternalSwap(GroupRenameResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupRenameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[5]);
}

// ===================================================================

class GroupInviteMemberRequest::_Internal {
 public:
};

GroupInviteMemberRequest::GroupInviteMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInviteMemberRequest)
}
GroupInviteMemberRequest::GroupInviteMemberRequest(const GroupInviteMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInviteMemberRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInviteMemberRequest)
}

inline void GroupInviteMemberRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInviteMemberRequest::~GroupInviteMemberRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInviteMemberRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInviteMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.user_id_.Destroy();
}

void GroupInviteMemberRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInviteMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInviteMemberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInviteMemberRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInviteMemberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInviteMemberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInviteMemberRequest)
  return target;
}

size_t GroupInviteMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInviteMemberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInviteMemberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInviteMemberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInviteMemberRequest::GetClassData() const { return &_class_data_; }


void GroupInviteMemberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInviteMemberRequest*>(&to_msg);
  auto& from = static_cast<const GroupInviteMemberRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInviteMemberRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInviteMemberRequest::CopyFrom(const GroupInviteMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInviteMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInviteMemberRequest::IsInitialized() const {
  return true;
}

void GroupInviteMemberRequest::InternalSwap(GroupInviteMemberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInviteMemberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[6]);
}

// ===================================================================

class GroupInviteMemberResponse::_Internal {
 public:
  static const ::qaul::rpc::group::GroupResult& result(const GroupInviteMemberResponse* msg);
};

const ::qaul::rpc::group::GroupResult&
GroupInviteMemberResponse::_Internal::result(const GroupInviteMemberResponse* msg) {
  return *msg->_impl_.result_;
}
GroupInviteMemberResponse::GroupInviteMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInviteMemberResponse)
}
GroupInviteMemberResponse::GroupInviteMemberResponse(const GroupInviteMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInviteMemberResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::qaul::rpc::group::GroupResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInviteMemberResponse)
}

inline void GroupInviteMemberResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInviteMemberResponse::~GroupInviteMemberResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInviteMemberResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInviteMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.user_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupInviteMemberResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInviteMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInviteMemberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInviteMemberResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupResult result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInviteMemberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInviteMemberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInviteMemberResponse)
  return target;
}

size_t GroupInviteMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInviteMemberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInviteMemberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInviteMemberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInviteMemberResponse::GetClassData() const { return &_class_data_; }


void GroupInviteMemberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInviteMemberResponse*>(&to_msg);
  auto& from = static_cast<const GroupInviteMemberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInviteMemberResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::qaul::rpc::group::GroupResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInviteMemberResponse::CopyFrom(const GroupInviteMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInviteMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInviteMemberResponse::IsInitialized() const {
  return true;
}

void GroupInviteMemberResponse::InternalSwap(GroupInviteMemberResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInviteMemberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[7]);
}

// ===================================================================

class GroupReplyInviteRequest::_Internal {
 public:
};

GroupReplyInviteRequest::GroupReplyInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupReplyInviteRequest)
}
GroupReplyInviteRequest::GroupReplyInviteRequest(const GroupReplyInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupReplyInviteRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.accept_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.accept_ = from._impl_.accept_;
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupReplyInviteRequest)
}

inline void GroupReplyInviteRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.accept_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupReplyInviteRequest::~GroupReplyInviteRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupReplyInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupReplyInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
}

void GroupReplyInviteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupReplyInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupReplyInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.accept_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupReplyInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool accept = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.accept_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupReplyInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupReplyInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bool accept = 3;
  if (this->_internal_accept() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_accept(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupReplyInviteRequest)
  return target;
}

size_t GroupReplyInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupReplyInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bool accept = 3;
  if (this->_internal_accept() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupReplyInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupReplyInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupReplyInviteRequest::GetClassData() const { return &_class_data_; }


void GroupReplyInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupReplyInviteRequest*>(&to_msg);
  auto& from = static_cast<const GroupReplyInviteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupReplyInviteRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_accept() != 0) {
    _this->_internal_set_accept(from._internal_accept());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupReplyInviteRequest::CopyFrom(const GroupReplyInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupReplyInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupReplyInviteRequest::IsInitialized() const {
  return true;
}

void GroupReplyInviteRequest::InternalSwap(GroupReplyInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  swap(_impl_.accept_, other->_impl_.accept_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupReplyInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[8]);
}

// ===================================================================

class GroupReplyInviteResponse::_Internal {
 public:
  static const ::qaul::rpc::group::GroupResult& result(const GroupReplyInviteResponse* msg);
};

const ::qaul::rpc::group::GroupResult&
GroupReplyInviteResponse::_Internal::result(const GroupReplyInviteResponse* msg) {
  return *msg->_impl_.result_;
}
GroupReplyInviteResponse::GroupReplyInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupReplyInviteResponse)
}
GroupReplyInviteResponse::GroupReplyInviteResponse(const GroupReplyInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupReplyInviteResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::qaul::rpc::group::GroupResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupReplyInviteResponse)
}

inline void GroupReplyInviteResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupReplyInviteResponse::~GroupReplyInviteResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupReplyInviteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupReplyInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupReplyInviteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupReplyInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupReplyInviteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupReplyInviteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupResult result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupReplyInviteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupReplyInviteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupReplyInviteResponse)
  return target;
}

size_t GroupReplyInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupReplyInviteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupReplyInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupReplyInviteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupReplyInviteResponse::GetClassData() const { return &_class_data_; }


void GroupReplyInviteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupReplyInviteResponse*>(&to_msg);
  auto& from = static_cast<const GroupReplyInviteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupReplyInviteResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::qaul::rpc::group::GroupResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupReplyInviteResponse::CopyFrom(const GroupReplyInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupReplyInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupReplyInviteResponse::IsInitialized() const {
  return true;
}

void GroupReplyInviteResponse::InternalSwap(GroupReplyInviteResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupReplyInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[9]);
}

// ===================================================================

class GroupRemoveMemberRequest::_Internal {
 public:
};

GroupRemoveMemberRequest::GroupRemoveMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupRemoveMemberRequest)
}
GroupRemoveMemberRequest::GroupRemoveMemberRequest(const GroupRemoveMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupRemoveMemberRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupRemoveMemberRequest)
}

inline void GroupRemoveMemberRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupRemoveMemberRequest::~GroupRemoveMemberRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupRemoveMemberRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupRemoveMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.user_id_.Destroy();
}

void GroupRemoveMemberRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupRemoveMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupRemoveMemberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupRemoveMemberRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupRemoveMemberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupRemoveMemberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupRemoveMemberRequest)
  return target;
}

size_t GroupRemoveMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupRemoveMemberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupRemoveMemberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupRemoveMemberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupRemoveMemberRequest::GetClassData() const { return &_class_data_; }


void GroupRemoveMemberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupRemoveMemberRequest*>(&to_msg);
  auto& from = static_cast<const GroupRemoveMemberRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupRemoveMemberRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupRemoveMemberRequest::CopyFrom(const GroupRemoveMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupRemoveMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRemoveMemberRequest::IsInitialized() const {
  return true;
}

void GroupRemoveMemberRequest::InternalSwap(GroupRemoveMemberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupRemoveMemberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[10]);
}

// ===================================================================

class GroupRemoveMemberResponse::_Internal {
 public:
  static const ::qaul::rpc::group::GroupResult& result(const GroupRemoveMemberResponse* msg);
};

const ::qaul::rpc::group::GroupResult&
GroupRemoveMemberResponse::_Internal::result(const GroupRemoveMemberResponse* msg) {
  return *msg->_impl_.result_;
}
GroupRemoveMemberResponse::GroupRemoveMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupRemoveMemberResponse)
}
GroupRemoveMemberResponse::GroupRemoveMemberResponse(const GroupRemoveMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupRemoveMemberResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::qaul::rpc::group::GroupResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupRemoveMemberResponse)
}

inline void GroupRemoveMemberResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupRemoveMemberResponse::~GroupRemoveMemberResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupRemoveMemberResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupRemoveMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
  _impl_.user_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupRemoveMemberResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupRemoveMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupRemoveMemberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupRemoveMemberResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupResult result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupRemoveMemberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupRemoveMemberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupRemoveMemberResponse)
  return target;
}

size_t GroupRemoveMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupRemoveMemberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bytes user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  // .qaul.rpc.group.GroupResult result = 3;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupRemoveMemberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupRemoveMemberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupRemoveMemberResponse::GetClassData() const { return &_class_data_; }


void GroupRemoveMemberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupRemoveMemberResponse*>(&to_msg);
  auto& from = static_cast<const GroupRemoveMemberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupRemoveMemberResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::qaul::rpc::group::GroupResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupRemoveMemberResponse::CopyFrom(const GroupRemoveMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupRemoveMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRemoveMemberResponse::IsInitialized() const {
  return true;
}

void GroupRemoveMemberResponse::InternalSwap(GroupRemoveMemberResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupRemoveMemberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[11]);
}

// ===================================================================

class GroupInfoRequest::_Internal {
 public:
};

GroupInfoRequest::GroupInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInfoRequest)
}
GroupInfoRequest::GroupInfoRequest(const GroupInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInfoRequest)
}

inline void GroupInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInfoRequest::~GroupInfoRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
}

void GroupInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInfoRequest)
  return target;
}

size_t GroupInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInfoRequest::GetClassData() const { return &_class_data_; }


void GroupInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInfoRequest*>(&to_msg);
  auto& from = static_cast<const GroupInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInfoRequest::CopyFrom(const GroupInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfoRequest::IsInitialized() const {
  return true;
}

void GroupInfoRequest::InternalSwap(GroupInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[12]);
}

// ===================================================================

class GroupMember::_Internal {
 public:
};

GroupMember::GroupMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupMember)
}
GroupMember::GroupMember(const GroupMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.joined_at_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.last_message_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.joined_at_, &from._impl_.joined_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.last_message_index_) -
    reinterpret_cast<char*>(&_impl_.joined_at_)) + sizeof(_impl_.last_message_index_));
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupMember)
}

inline void GroupMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.joined_at_){uint64_t{0u}}
    , decltype(_impl_.role_){0}
    , decltype(_impl_.state_){0}
    , decltype(_impl_.last_message_index_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
}

void GroupMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.joined_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.last_message_index_) -
      reinterpret_cast<char*>(&_impl_.joined_at_)) + sizeof(_impl_.last_message_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupMemberRole role = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_role(static_cast<::qaul::rpc::group::GroupMemberRole>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 joined_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.joined_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupMemberState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::qaul::rpc::group::GroupMemberState>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 last_message_index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.last_message_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // .qaul.rpc.group.GroupMemberRole role = 2;
  if (this->_internal_role() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  // uint64 joined_at = 3;
  if (this->_internal_joined_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_joined_at(), target);
  }

  // .qaul.rpc.group.GroupMemberState state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // uint32 last_message_index = 5;
  if (this->_internal_last_message_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_last_message_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupMember)
  return target;
}

size_t GroupMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  // uint64 joined_at = 3;
  if (this->_internal_joined_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_joined_at());
  }

  // .qaul.rpc.group.GroupMemberRole role = 2;
  if (this->_internal_role() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_role());
  }

  // .qaul.rpc.group.GroupMemberState state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // uint32 last_message_index = 5;
  if (this->_internal_last_message_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_last_message_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupMember::GetClassData() const { return &_class_data_; }


void GroupMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupMember*>(&to_msg);
  auto& from = static_cast<const GroupMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_joined_at() != 0) {
    _this->_internal_set_joined_at(from._internal_joined_at());
  }
  if (from._internal_role() != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_last_message_index() != 0) {
    _this->_internal_set_last_message_index(from._internal_last_message_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupMember::CopyFrom(const GroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMember::IsInitialized() const {
  return true;
}

void GroupMember::InternalSwap(GroupMember* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.last_message_index_)
      + sizeof(GroupMember::_impl_.last_message_index_)
      - PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.joined_at_)>(
          reinterpret_cast<char*>(&_impl_.joined_at_),
          reinterpret_cast<char*>(&other->_impl_.joined_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[13]);
}

// ===================================================================

class GroupInfo::_Internal {
 public:
};

GroupInfo::GroupInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){from._impl_.members_}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.last_message_){}
    , decltype(_impl_.last_message_sender_id_){}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.revision_){}
    , decltype(_impl_.is_direct_chat_){}
    , decltype(_impl_.unread_messages_){}
    , decltype(_impl_.last_message_at_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.last_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_message().empty()) {
    _this->_impl_.last_message_.Set(from._internal_last_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.last_message_sender_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_message_sender_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_message_sender_id().empty()) {
    _this->_impl_.last_message_sender_id_.Set(from._internal_last_message_sender_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.created_at_, &from._impl_.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.last_message_at_) -
    reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.last_message_at_));
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInfo)
}

inline void GroupInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){arena}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.last_message_){}
    , decltype(_impl_.last_message_sender_id_){}
    , decltype(_impl_.created_at_){uint64_t{0u}}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.revision_){0u}
    , decltype(_impl_.is_direct_chat_){false}
    , decltype(_impl_.unread_messages_){0u}
    , decltype(_impl_.last_message_at_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_message_sender_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_message_sender_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.members_.~RepeatedPtrField();
  _impl_.group_id_.Destroy();
  _impl_.group_name_.Destroy();
  _impl_.last_message_.Destroy();
  _impl_.last_message_sender_id_.Destroy();
}

void GroupInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.members_.Clear();
  _impl_.group_id_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  _impl_.last_message_.ClearToEmpty();
  _impl_.last_message_sender_id_.ClearToEmpty();
  ::memset(&_impl_.created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.last_message_at_) -
      reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.last_message_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.group.GroupInfo.group_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupStatus status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::qaul::rpc::group::GroupStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 revision = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_direct_chat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.is_direct_chat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .qaul.rpc.group.GroupMember members = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 unread_messages = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.unread_messages_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 last_message_at = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.last_message_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes last_message = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_last_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes last_message_sender_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_last_message_sender_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.group.GroupInfo.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  // uint64 created_at = 3;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_created_at(), target);
  }

  // .qaul.rpc.group.GroupStatus status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  // uint32 revision = 5;
  if (this->_internal_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_revision(), target);
  }

  // bool is_direct_chat = 6;
  if (this->_internal_is_direct_chat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_is_direct_chat(), target);
  }

  // repeated .qaul.rpc.group.GroupMember members = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint32 unread_messages = 8;
  if (this->_internal_unread_messages() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_unread_messages(), target);
  }

  // uint64 last_message_at = 9;
  if (this->_internal_last_message_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(9, this->_internal_last_message_at(), target);
  }

  // bytes last_message = 10;
  if (!this->_internal_last_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_last_message(), target);
  }

  // bytes last_message_sender_id = 11;
  if (!this->_internal_last_message_sender_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_last_message_sender_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.group.GroupMember members = 7;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->_impl_.members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // bytes last_message = 10;
  if (!this->_internal_last_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_last_message());
  }

  // bytes last_message_sender_id = 11;
  if (!this->_internal_last_message_sender_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_last_message_sender_id());
  }

  // uint64 created_at = 3;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_created_at());
  }

  // .qaul.rpc.group.GroupStatus status = 4;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // uint32 revision = 5;
  if (this->_internal_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_revision());
  }

  // bool is_direct_chat = 6;
  if (this->_internal_is_direct_chat() != 0) {
    total_size += 1 + 1;
  }

  // uint32 unread_messages = 8;
  if (this->_internal_unread_messages() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_unread_messages());
  }

  // uint64 last_message_at = 9;
  if (this->_internal_last_message_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_last_message_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInfo::GetClassData() const { return &_class_data_; }


void GroupInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInfo*>(&to_msg);
  auto& from = static_cast<const GroupInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.members_.MergeFrom(from._impl_.members_);
  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (!from._internal_last_message().empty()) {
    _this->_internal_set_last_message(from._internal_last_message());
  }
  if (!from._internal_last_message_sender_id().empty()) {
    _this->_internal_set_last_message_sender_id(from._internal_last_message_sender_id());
  }
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_revision() != 0) {
    _this->_internal_set_revision(from._internal_revision());
  }
  if (from._internal_is_direct_chat() != 0) {
    _this->_internal_set_is_direct_chat(from._internal_is_direct_chat());
  }
  if (from._internal_unread_messages() != 0) {
    _this->_internal_set_unread_messages(from._internal_unread_messages());
  }
  if (from._internal_last_message_at() != 0) {
    _this->_internal_set_last_message_at(from._internal_last_message_at());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.members_.InternalSwap(&other->_impl_.members_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.last_message_, lhs_arena,
      &other->_impl_.last_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.last_message_sender_id_, lhs_arena,
      &other->_impl_.last_message_sender_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.last_message_at_)
      + sizeof(GroupInfo::_impl_.last_message_at_)
      - PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[14]);
}

// ===================================================================

class GroupListRequest::_Internal {
 public:
};

GroupListRequest::GroupListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupListRequest)
}
GroupListRequest::GroupListRequest(const GroupListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GroupListRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupListRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupListRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GroupListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[15]);
}

// ===================================================================

class GroupListResponse::_Internal {
 public:
};

GroupListResponse::GroupListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupListResponse)
}
GroupListResponse::GroupListResponse(const GroupListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupListResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.groups_){from._impl_.groups_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupListResponse)
}

inline void GroupListResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.groups_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GroupListResponse::~GroupListResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupListResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.groups_.~RepeatedPtrField();
}

void GroupListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupListResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .qaul.rpc.group.GroupInfo groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qaul.rpc.group.GroupInfo groups = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_groups_size()); i < n; i++) {
    const auto& repfield = this->_internal_groups(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupListResponse)
  return target;
}

size_t GroupListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.group.GroupInfo groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->_impl_.groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupListResponse::GetClassData() const { return &_class_data_; }


void GroupListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupListResponse*>(&to_msg);
  auto& from = static_cast<const GroupListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupListResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.groups_.MergeFrom(from._impl_.groups_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupListResponse::CopyFrom(const GroupListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupListResponse::IsInitialized() const {
  return true;
}

void GroupListResponse::InternalSwap(GroupListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[16]);
}

// ===================================================================

class GroupInvited::_Internal {
 public:
  static const ::qaul::rpc::group::GroupInfo& group(const GroupInvited* msg);
};

const ::qaul::rpc::group::GroupInfo&
GroupInvited::_Internal::group(const GroupInvited* msg) {
  return *msg->_impl_.group_;
}
GroupInvited::GroupInvited(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInvited)
}
GroupInvited::GroupInvited(const GroupInvited& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInvited* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_id_){}
    , decltype(_impl_.group_){nullptr}
    , decltype(_impl_.received_at_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sender_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_id().empty()) {
    _this->_impl_.sender_id_.Set(from._internal_sender_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_group()) {
    _this->_impl_.group_ = new ::qaul::rpc::group::GroupInfo(*from._impl_.group_);
  }
  _this->_impl_.received_at_ = from._impl_.received_at_;
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInvited)
}

inline void GroupInvited::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sender_id_){}
    , decltype(_impl_.group_){nullptr}
    , decltype(_impl_.received_at_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.sender_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInvited::~GroupInvited() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInvited)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInvited::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sender_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.group_;
}

void GroupInvited::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInvited::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInvited)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.group_ != nullptr) {
    delete _impl_.group_;
  }
  _impl_.group_ = nullptr;
  _impl_.received_at_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInvited::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes sender_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 received_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.received_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.group.GroupInfo group = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_group(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInvited::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInvited)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sender_id = 1;
  if (!this->_internal_sender_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_sender_id(), target);
  }

  // uint64 received_at = 2;
  if (this->_internal_received_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_received_at(), target);
  }

  // .qaul.rpc.group.GroupInfo group = 3;
  if (this->_internal_has_group()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::group(this),
        _Internal::group(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInvited)
  return target;
}

size_t GroupInvited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInvited)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sender_id = 1;
  if (!this->_internal_sender_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sender_id());
  }

  // .qaul.rpc.group.GroupInfo group = 3;
  if (this->_internal_has_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.group_);
  }

  // uint64 received_at = 2;
  if (this->_internal_received_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_received_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInvited::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInvited::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInvited::GetClassData() const { return &_class_data_; }


void GroupInvited::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInvited*>(&to_msg);
  auto& from = static_cast<const GroupInvited&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInvited)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_id().empty()) {
    _this->_internal_set_sender_id(from._internal_sender_id());
  }
  if (from._internal_has_group()) {
    _this->_internal_mutable_group()->::qaul::rpc::group::GroupInfo::MergeFrom(
        from._internal_group());
  }
  if (from._internal_received_at() != 0) {
    _this->_internal_set_received_at(from._internal_received_at());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInvited::CopyFrom(const GroupInvited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInvited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInvited::IsInitialized() const {
  return true;
}

void GroupInvited::InternalSwap(GroupInvited* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sender_id_, lhs_arena,
      &other->_impl_.sender_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupInvited, _impl_.received_at_)
      + sizeof(GroupInvited::_impl_.received_at_)
      - PROTOBUF_FIELD_OFFSET(GroupInvited, _impl_.group_)>(
          reinterpret_cast<char*>(&_impl_.group_),
          reinterpret_cast<char*>(&other->_impl_.group_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInvited::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[17]);
}

// ===================================================================

class GroupInvitedRequest::_Internal {
 public:
};

GroupInvitedRequest::GroupInvitedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInvitedRequest)
}
GroupInvitedRequest::GroupInvitedRequest(const GroupInvitedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GroupInvitedRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInvitedRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInvitedRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInvitedRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GroupInvitedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[18]);
}

// ===================================================================

class GroupInvitedResponse::_Internal {
 public:
};

GroupInvitedResponse::GroupInvitedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.group.GroupInvitedResponse)
}
GroupInvitedResponse::GroupInvitedResponse(const GroupInvitedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInvitedResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invited_){from._impl_.invited_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.group.GroupInvitedResponse)
}

inline void GroupInvitedResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invited_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GroupInvitedResponse::~GroupInvitedResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.group.GroupInvitedResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInvitedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invited_.~RepeatedPtrField();
}

void GroupInvitedResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInvitedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.group.GroupInvitedResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invited_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInvitedResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .qaul.rpc.group.GroupInvited invited = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invited(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInvitedResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.group.GroupInvitedResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qaul.rpc.group.GroupInvited invited = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invited_size()); i < n; i++) {
    const auto& repfield = this->_internal_invited(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.group.GroupInvitedResponse)
  return target;
}

size_t GroupInvitedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.group.GroupInvitedResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.group.GroupInvited invited = 1;
  total_size += 1UL * this->_internal_invited_size();
  for (const auto& msg : this->_impl_.invited_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInvitedResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInvitedResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInvitedResponse::GetClassData() const { return &_class_data_; }


void GroupInvitedResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInvitedResponse*>(&to_msg);
  auto& from = static_cast<const GroupInvitedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.group.GroupInvitedResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.invited_.MergeFrom(from._impl_.invited_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInvitedResponse::CopyFrom(const GroupInvitedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.group.GroupInvitedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInvitedResponse::IsInitialized() const {
  return true;
}

void GroupInvitedResponse::InternalSwap(GroupInvitedResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.invited_.InternalSwap(&other->_impl_.invited_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInvitedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5frpc_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5frpc_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace group
}  // namespace rpc
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::Group*
Arena::CreateMaybeMessage< ::qaul::rpc::group::Group >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::Group >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupResult*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupResult >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupCreateRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupCreateResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupRenameRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupRenameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupRenameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupRenameResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupRenameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupRenameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInviteMemberRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInviteMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInviteMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInviteMemberResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInviteMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInviteMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupReplyInviteRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupReplyInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupReplyInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupReplyInviteResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupReplyInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupReplyInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupRemoveMemberRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupRemoveMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupRemoveMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupRemoveMemberResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupRemoveMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupRemoveMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInfoRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupMember*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupMember >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInfo*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupListRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupListResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInvited*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInvited >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInvited >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInvitedRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInvitedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInvitedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::group::GroupInvitedResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::group::GroupInvitedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::group::GroupInvitedResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
