// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/group/group_net.proto

#include "services/group/group_net.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace qaul {
namespace net {
namespace group {
PROTOBUF_CONSTEXPR GroupContainer::GroupContainer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct GroupContainerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupContainerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupContainerDefaultTypeInternal() {}
  union {
    GroupContainer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupContainerDefaultTypeInternal _GroupContainer_default_instance_;
PROTOBUF_CONSTEXPR InviteMember::InviteMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InviteMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InviteMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InviteMemberDefaultTypeInternal() {}
  union {
    InviteMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InviteMemberDefaultTypeInternal _InviteMember_default_instance_;
PROTOBUF_CONSTEXPR GroupMember::GroupMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.joined_at_)*/uint64_t{0u}
  , /*decltype(_impl_.role_)*/0
  , /*decltype(_impl_.state_)*/0
  , /*decltype(_impl_.last_message_index_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupMemberDefaultTypeInternal() {}
  union {
    GroupMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupMemberDefaultTypeInternal _GroupMember_default_instance_;
PROTOBUF_CONSTEXPR GroupInfo::GroupInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.members_)*/{}
  , /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/uint64_t{0u}
  , /*decltype(_impl_.revision_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInfoDefaultTypeInternal() {}
  union {
    GroupInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
PROTOBUF_CONSTEXPR ReplyInvite::ReplyInvite(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.accept_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplyInviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyInviteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyInviteDefaultTypeInternal() {}
  union {
    ReplyInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyInviteDefaultTypeInternal _ReplyInvite_default_instance_;
PROTOBUF_CONSTEXPR RemovedMember::RemovedMember(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemovedMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemovedMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemovedMemberDefaultTypeInternal() {}
  union {
    RemovedMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemovedMemberDefaultTypeInternal _RemovedMember_default_instance_;
}  // namespace group
}  // namespace net
}  // namespace qaul
static ::_pb::Metadata file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_services_2fgroup_2fgroup_5fnet_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_services_2fgroup_2fgroup_5fnet_2eproto = nullptr;

const uint32_t TableStruct_services_2fgroup_2fgroup_5fnet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupContainer, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupContainer, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::InviteMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::InviteMember, _impl_.group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _impl_.role_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _impl_.joined_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupMember, _impl_.last_message_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _impl_.group_name_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _impl_.revision_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::GroupInfo, _impl_.members_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::ReplyInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::ReplyInvite, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::ReplyInvite, _impl_.accept_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::RemovedMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::net::group::RemovedMember, _impl_.group_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::net::group::GroupContainer)},
  { 11, -1, -1, sizeof(::qaul::net::group::InviteMember)},
  { 18, -1, -1, sizeof(::qaul::net::group::GroupMember)},
  { 29, -1, -1, sizeof(::qaul::net::group::GroupInfo)},
  { 40, -1, -1, sizeof(::qaul::net::group::ReplyInvite)},
  { 48, -1, -1, sizeof(::qaul::net::group::RemovedMember)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::qaul::net::group::_GroupContainer_default_instance_._instance,
  &::qaul::net::group::_InviteMember_default_instance_._instance,
  &::qaul::net::group::_GroupMember_default_instance_._instance,
  &::qaul::net::group::_GroupInfo_default_instance_._instance,
  &::qaul::net::group::_ReplyInvite_default_instance_._instance,
  &::qaul::net::group::_RemovedMember_default_instance_._instance,
};

const char descriptor_table_protodef_services_2fgroup_2fgroup_5fnet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036services/group/group_net.proto\022\016qaul.n"
  "et.group\"\352\001\n\016GroupContainer\0225\n\rinvite_me"
  "mber\030\001 \001(\0132\034.qaul.net.group.InviteMember"
  "H\000\0223\n\014reply_invite\030\002 \001(\0132\033.qaul.net.grou"
  "p.ReplyInviteH\000\022/\n\ngroup_info\030\003 \001(\0132\031.qa"
  "ul.net.group.GroupInfoH\000\0220\n\007removed\030\004 \001("
  "\0132\035.qaul.net.group.RemovedMemberH\000B\t\n\007me"
  "ssage\"8\n\014InviteMember\022(\n\005group\030\001 \001(\0132\031.q"
  "aul.net.group.GroupInfo\"\255\001\n\013GroupMember\022"
  "\017\n\007user_id\030\001 \001(\014\022-\n\004role\030\002 \001(\0162\037.qaul.ne"
  "t.group.GroupMemberRole\022\021\n\tjoined_at\030\003 \001"
  "(\004\022/\n\005state\030\004 \001(\0162 .qaul.net.group.Group"
  "MemberState\022\032\n\022last_message_index\030\005 \001(\r\""
  "\205\001\n\tGroupInfo\022\020\n\010group_id\030\001 \001(\014\022\022\n\ngroup"
  "_name\030\002 \001(\t\022\022\n\ncreated_at\030\003 \001(\004\022\020\n\010revis"
  "ion\030\004 \001(\r\022,\n\007members\030\005 \003(\0132\033.qaul.net.gr"
  "oup.GroupMember\"/\n\013ReplyInvite\022\020\n\010group_"
  "id\030\001 \001(\014\022\016\n\006accept\030\002 \001(\010\"!\n\rRemovedMembe"
  "r\022\020\n\010group_id\030\001 \001(\014*.\n\020GroupMemberState\022"
  "\013\n\007Invited\020\000\022\r\n\tActivated\020\001*\'\n\017GroupMemb"
  "erRole\022\010\n\004User\020\000\022\n\n\005Admin\020\377\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto = {
    false, false, 836, descriptor_table_protodef_services_2fgroup_2fgroup_5fnet_2eproto,
    "services/group/group_net.proto",
    &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once, nullptr, 0, 6,
    schemas, file_default_instances, TableStruct_services_2fgroup_2fgroup_5fnet_2eproto::offsets,
    file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto, file_level_enum_descriptors_services_2fgroup_2fgroup_5fnet_2eproto,
    file_level_service_descriptors_services_2fgroup_2fgroup_5fnet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter() {
  return &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_services_2fgroup_2fgroup_5fnet_2eproto(&descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto);
namespace qaul {
namespace net {
namespace group {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GroupMemberState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto);
  return file_level_enum_descriptors_services_2fgroup_2fgroup_5fnet_2eproto[0];
}
bool GroupMemberState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GroupMemberRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto);
  return file_level_enum_descriptors_services_2fgroup_2fgroup_5fnet_2eproto[1];
}
bool GroupMemberRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class GroupContainer::_Internal {
 public:
  static const ::qaul::net::group::InviteMember& invite_member(const GroupContainer* msg);
  static const ::qaul::net::group::ReplyInvite& reply_invite(const GroupContainer* msg);
  static const ::qaul::net::group::GroupInfo& group_info(const GroupContainer* msg);
  static const ::qaul::net::group::RemovedMember& removed(const GroupContainer* msg);
};

const ::qaul::net::group::InviteMember&
GroupContainer::_Internal::invite_member(const GroupContainer* msg) {
  return *msg->_impl_.message_.invite_member_;
}
const ::qaul::net::group::ReplyInvite&
GroupContainer::_Internal::reply_invite(const GroupContainer* msg) {
  return *msg->_impl_.message_.reply_invite_;
}
const ::qaul::net::group::GroupInfo&
GroupContainer::_Internal::group_info(const GroupContainer* msg) {
  return *msg->_impl_.message_.group_info_;
}
const ::qaul::net::group::RemovedMember&
GroupContainer::_Internal::removed(const GroupContainer* msg) {
  return *msg->_impl_.message_.removed_;
}
void GroupContainer::set_allocated_invite_member(::qaul::net::group::InviteMember* invite_member) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (invite_member) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(invite_member);
    if (message_arena != submessage_arena) {
      invite_member = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invite_member, submessage_arena);
    }
    set_has_invite_member();
    _impl_.message_.invite_member_ = invite_member;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.net.group.GroupContainer.invite_member)
}
void GroupContainer::set_allocated_reply_invite(::qaul::net::group::ReplyInvite* reply_invite) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (reply_invite) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reply_invite);
    if (message_arena != submessage_arena) {
      reply_invite = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_invite, submessage_arena);
    }
    set_has_reply_invite();
    _impl_.message_.reply_invite_ = reply_invite;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.net.group.GroupContainer.reply_invite)
}
void GroupContainer::set_allocated_group_info(::qaul::net::group::GroupInfo* group_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (group_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(group_info);
    if (message_arena != submessage_arena) {
      group_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    set_has_group_info();
    _impl_.message_.group_info_ = group_info;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.net.group.GroupContainer.group_info)
}
void GroupContainer::set_allocated_removed(::qaul::net::group::RemovedMember* removed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (removed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(removed);
    if (message_arena != submessage_arena) {
      removed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, removed, submessage_arena);
    }
    set_has_removed();
    _impl_.message_.removed_ = removed;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.net.group.GroupContainer.removed)
}
GroupContainer::GroupContainer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.GroupContainer)
}
GroupContainer::GroupContainer(const GroupContainer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupContainer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kInviteMember: {
      _this->_internal_mutable_invite_member()->::qaul::net::group::InviteMember::MergeFrom(
          from._internal_invite_member());
      break;
    }
    case kReplyInvite: {
      _this->_internal_mutable_reply_invite()->::qaul::net::group::ReplyInvite::MergeFrom(
          from._internal_reply_invite());
      break;
    }
    case kGroupInfo: {
      _this->_internal_mutable_group_info()->::qaul::net::group::GroupInfo::MergeFrom(
          from._internal_group_info());
      break;
    }
    case kRemoved: {
      _this->_internal_mutable_removed()->::qaul::net::group::RemovedMember::MergeFrom(
          from._internal_removed());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.GroupContainer)
}

inline void GroupContainer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message();
}

GroupContainer::~GroupContainer() {
  // @@protoc_insertion_point(destructor:qaul.net.group.GroupContainer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupContainer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void GroupContainer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupContainer::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.net.group.GroupContainer)
  switch (message_case()) {
    case kInviteMember: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.invite_member_;
      }
      break;
    }
    case kReplyInvite: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.reply_invite_;
      }
      break;
    }
    case kGroupInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.group_info_;
      }
      break;
    }
    case kRemoved: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.removed_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void GroupContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.GroupContainer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupContainer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.net.group.InviteMember invite_member = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite_member(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.net.group.ReplyInvite reply_invite = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.net.group.GroupInfo group_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_group_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.net.group.RemovedMember removed = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_removed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupContainer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.GroupContainer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.net.group.InviteMember invite_member = 1;
  if (_internal_has_invite_member()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite_member(this),
        _Internal::invite_member(this).GetCachedSize(), target, stream);
  }

  // .qaul.net.group.ReplyInvite reply_invite = 2;
  if (_internal_has_reply_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::reply_invite(this),
        _Internal::reply_invite(this).GetCachedSize(), target, stream);
  }

  // .qaul.net.group.GroupInfo group_info = 3;
  if (_internal_has_group_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::group_info(this),
        _Internal::group_info(this).GetCachedSize(), target, stream);
  }

  // .qaul.net.group.RemovedMember removed = 4;
  if (_internal_has_removed()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::removed(this),
        _Internal::removed(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.GroupContainer)
  return target;
}

size_t GroupContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.GroupContainer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.net.group.InviteMember invite_member = 1;
    case kInviteMember: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.invite_member_);
      break;
    }
    // .qaul.net.group.ReplyInvite reply_invite = 2;
    case kReplyInvite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.reply_invite_);
      break;
    }
    // .qaul.net.group.GroupInfo group_info = 3;
    case kGroupInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.group_info_);
      break;
    }
    // .qaul.net.group.RemovedMember removed = 4;
    case kRemoved: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.removed_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupContainer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupContainer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupContainer::GetClassData() const { return &_class_data_; }


void GroupContainer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupContainer*>(&to_msg);
  auto& from = static_cast<const GroupContainer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.GroupContainer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kInviteMember: {
      _this->_internal_mutable_invite_member()->::qaul::net::group::InviteMember::MergeFrom(
          from._internal_invite_member());
      break;
    }
    case kReplyInvite: {
      _this->_internal_mutable_reply_invite()->::qaul::net::group::ReplyInvite::MergeFrom(
          from._internal_reply_invite());
      break;
    }
    case kGroupInfo: {
      _this->_internal_mutable_group_info()->::qaul::net::group::GroupInfo::MergeFrom(
          from._internal_group_info());
      break;
    }
    case kRemoved: {
      _this->_internal_mutable_removed()->::qaul::net::group::RemovedMember::MergeFrom(
          from._internal_removed());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupContainer::CopyFrom(const GroupContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.GroupContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupContainer::IsInitialized() const {
  return true;
}

void GroupContainer::InternalSwap(GroupContainer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupContainer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[0]);
}

// ===================================================================

class InviteMember::_Internal {
 public:
  static const ::qaul::net::group::GroupInfo& group(const InviteMember* msg);
};

const ::qaul::net::group::GroupInfo&
InviteMember::_Internal::group(const InviteMember* msg) {
  return *msg->_impl_.group_;
}
InviteMember::InviteMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.InviteMember)
}
InviteMember::InviteMember(const InviteMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InviteMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_group()) {
    _this->_impl_.group_ = new ::qaul::net::group::GroupInfo(*from._impl_.group_);
  }
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.InviteMember)
}

inline void InviteMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InviteMember::~InviteMember() {
  // @@protoc_insertion_point(destructor:qaul.net.group.InviteMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InviteMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.group_;
}

void InviteMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InviteMember::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.InviteMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.group_ != nullptr) {
    delete _impl_.group_;
  }
  _impl_.group_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InviteMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.net.group.GroupInfo group = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_group(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InviteMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.InviteMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.net.group.GroupInfo group = 1;
  if (this->_internal_has_group()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::group(this),
        _Internal::group(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.InviteMember)
  return target;
}

size_t InviteMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.InviteMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .qaul.net.group.GroupInfo group = 1;
  if (this->_internal_has_group()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.group_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InviteMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InviteMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InviteMember::GetClassData() const { return &_class_data_; }


void InviteMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InviteMember*>(&to_msg);
  auto& from = static_cast<const InviteMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.InviteMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_group()) {
    _this->_internal_mutable_group()->::qaul::net::group::GroupInfo::MergeFrom(
        from._internal_group());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InviteMember::CopyFrom(const InviteMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.InviteMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteMember::IsInitialized() const {
  return true;
}

void InviteMember::InternalSwap(InviteMember* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_, other->_impl_.group_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InviteMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[1]);
}

// ===================================================================

class GroupMember::_Internal {
 public:
};

GroupMember::GroupMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.GroupMember)
}
GroupMember::GroupMember(const GroupMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.joined_at_){}
    , decltype(_impl_.role_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.last_message_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.joined_at_, &from._impl_.joined_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.last_message_index_) -
    reinterpret_cast<char*>(&_impl_.joined_at_)) + sizeof(_impl_.last_message_index_));
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.GroupMember)
}

inline void GroupMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.joined_at_){uint64_t{0u}}
    , decltype(_impl_.role_){0}
    , decltype(_impl_.state_){0}
    , decltype(_impl_.last_message_index_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:qaul.net.group.GroupMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
}

void GroupMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.GroupMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.joined_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.last_message_index_) -
      reinterpret_cast<char*>(&_impl_.joined_at_)) + sizeof(_impl_.last_message_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.net.group.GroupMemberRole role = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_role(static_cast<::qaul::net::group::GroupMemberRole>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 joined_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.joined_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.net.group.GroupMemberState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::qaul::net::group::GroupMemberState>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 last_message_index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.last_message_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.GroupMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // .qaul.net.group.GroupMemberRole role = 2;
  if (this->_internal_role() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  // uint64 joined_at = 3;
  if (this->_internal_joined_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_joined_at(), target);
  }

  // .qaul.net.group.GroupMemberState state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  // uint32 last_message_index = 5;
  if (this->_internal_last_message_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_last_message_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.GroupMember)
  return target;
}

size_t GroupMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.GroupMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  // uint64 joined_at = 3;
  if (this->_internal_joined_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_joined_at());
  }

  // .qaul.net.group.GroupMemberRole role = 2;
  if (this->_internal_role() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_role());
  }

  // .qaul.net.group.GroupMemberState state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // uint32 last_message_index = 5;
  if (this->_internal_last_message_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_last_message_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupMember::GetClassData() const { return &_class_data_; }


void GroupMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupMember*>(&to_msg);
  auto& from = static_cast<const GroupMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.GroupMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_joined_at() != 0) {
    _this->_internal_set_joined_at(from._internal_joined_at());
  }
  if (from._internal_role() != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_last_message_index() != 0) {
    _this->_internal_set_last_message_index(from._internal_last_message_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupMember::CopyFrom(const GroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMember::IsInitialized() const {
  return true;
}

void GroupMember::InternalSwap(GroupMember* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.last_message_index_)
      + sizeof(GroupMember::_impl_.last_message_index_)
      - PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.joined_at_)>(
          reinterpret_cast<char*>(&_impl_.joined_at_),
          reinterpret_cast<char*>(&other->_impl_.joined_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[2]);
}

// ===================================================================

class GroupInfo::_Internal {
 public:
};

GroupInfo::GroupInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){from._impl_.members_}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.revision_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_name().empty()) {
    _this->_impl_.group_name_.Set(from._internal_group_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.created_at_, &from._impl_.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.revision_) -
    reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.revision_));
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.GroupInfo)
}

inline void GroupInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.members_){arena}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.group_name_){}
    , decltype(_impl_.created_at_){uint64_t{0u}}
    , decltype(_impl_.revision_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:qaul.net.group.GroupInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.members_.~RepeatedPtrField();
  _impl_.group_id_.Destroy();
  _impl_.group_name_.Destroy();
}

void GroupInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.GroupInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.members_.Clear();
  _impl_.group_id_.ClearToEmpty();
  _impl_.group_name_.ClearToEmpty();
  ::memset(&_impl_.created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.revision_) -
      reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.revision_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string group_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_group_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.net.group.GroupInfo.group_name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 revision = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .qaul.net.group.GroupMember members = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.GroupInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group_name().data(), static_cast<int>(this->_internal_group_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.net.group.GroupInfo.group_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group_name(), target);
  }

  // uint64 created_at = 3;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_created_at(), target);
  }

  // uint32 revision = 4;
  if (this->_internal_revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_revision(), target);
  }

  // repeated .qaul.net.group.GroupMember members = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.GroupInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.net.group.GroupMember members = 5;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->_impl_.members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // string group_name = 2;
  if (!this->_internal_group_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group_name());
  }

  // uint64 created_at = 3;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_created_at());
  }

  // uint32 revision = 4;
  if (this->_internal_revision() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_revision());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupInfo::GetClassData() const { return &_class_data_; }


void GroupInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupInfo*>(&to_msg);
  auto& from = static_cast<const GroupInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.GroupInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.members_.MergeFrom(from._impl_.members_);
  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_group_name().empty()) {
    _this->_internal_set_group_name(from._internal_group_name());
  }
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_revision() != 0) {
    _this->_internal_set_revision(from._internal_revision());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.members_.InternalSwap(&other->_impl_.members_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_name_, lhs_arena,
      &other->_impl_.group_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.revision_)
      + sizeof(GroupInfo::_impl_.revision_)
      - PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[3]);
}

// ===================================================================

class ReplyInvite::_Internal {
 public:
};

ReplyInvite::ReplyInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.ReplyInvite)
}
ReplyInvite::ReplyInvite(const ReplyInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplyInvite* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.accept_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.accept_ = from._impl_.accept_;
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.ReplyInvite)
}

inline void ReplyInvite::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , decltype(_impl_.accept_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReplyInvite::~ReplyInvite() {
  // @@protoc_insertion_point(destructor:qaul.net.group.ReplyInvite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplyInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
}

void ReplyInvite::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplyInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.ReplyInvite)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _impl_.accept_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplyInvite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool accept = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.accept_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplyInvite::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.ReplyInvite)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  // bool accept = 2;
  if (this->_internal_accept() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_accept(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.ReplyInvite)
  return target;
}

size_t ReplyInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.ReplyInvite)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // bool accept = 2;
  if (this->_internal_accept() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplyInvite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplyInvite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplyInvite::GetClassData() const { return &_class_data_; }


void ReplyInvite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplyInvite*>(&to_msg);
  auto& from = static_cast<const ReplyInvite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.ReplyInvite)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (from._internal_accept() != 0) {
    _this->_internal_set_accept(from._internal_accept());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplyInvite::CopyFrom(const ReplyInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.ReplyInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyInvite::IsInitialized() const {
  return true;
}

void ReplyInvite::InternalSwap(ReplyInvite* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  swap(_impl_.accept_, other->_impl_.accept_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplyInvite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[4]);
}

// ===================================================================

class RemovedMember::_Internal {
 public:
};

RemovedMember::RemovedMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.net.group.RemovedMember)
}
RemovedMember::RemovedMember(const RemovedMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemovedMember* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.net.group.RemovedMember)
}

inline void RemovedMember::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemovedMember::~RemovedMember() {
  // @@protoc_insertion_point(destructor:qaul.net.group.RemovedMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemovedMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.group_id_.Destroy();
}

void RemovedMember::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemovedMember::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.net.group.RemovedMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovedMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemovedMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.net.group.RemovedMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.net.group.RemovedMember)
  return target;
}

size_t RemovedMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.net.group.RemovedMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes group_id = 1;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemovedMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemovedMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemovedMember::GetClassData() const { return &_class_data_; }


void RemovedMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemovedMember*>(&to_msg);
  auto& from = static_cast<const RemovedMember&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.net.group.RemovedMember)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemovedMember::CopyFrom(const RemovedMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.net.group.RemovedMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovedMember::IsInitialized() const {
  return true;
}

void RemovedMember::InternalSwap(RemovedMember* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovedMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_getter, &descriptor_table_services_2fgroup_2fgroup_5fnet_2eproto_once,
      file_level_metadata_services_2fgroup_2fgroup_5fnet_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace group
}  // namespace net
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::net::group::GroupContainer*
Arena::CreateMaybeMessage< ::qaul::net::group::GroupContainer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::GroupContainer >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::net::group::InviteMember*
Arena::CreateMaybeMessage< ::qaul::net::group::InviteMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::InviteMember >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::net::group::GroupMember*
Arena::CreateMaybeMessage< ::qaul::net::group::GroupMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::GroupMember >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::net::group::GroupInfo*
Arena::CreateMaybeMessage< ::qaul::net::group::GroupInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::GroupInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::net::group::ReplyInvite*
Arena::CreateMaybeMessage< ::qaul::net::group::ReplyInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::ReplyInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::net::group::RemovedMember*
Arena::CreateMaybeMessage< ::qaul::net::group::RemovedMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::net::group::RemovedMember >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
