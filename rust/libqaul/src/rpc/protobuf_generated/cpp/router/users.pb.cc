// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: router/users.proto

#include "router/users.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace qaul {
namespace rpc {
namespace users {
PROTOBUF_CONSTEXPR Users::Users(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct UsersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UsersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UsersDefaultTypeInternal() {}
  union {
    Users _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UsersDefaultTypeInternal _Users_default_instance_;
PROTOBUF_CONSTEXPR UserRequest::UserRequest(
    ::_pbi::ConstantInitialized) {}
struct UserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRequestDefaultTypeInternal _UserRequest_default_instance_;
PROTOBUF_CONSTEXPR UserOnlineRequest::UserOnlineRequest(
    ::_pbi::ConstantInitialized) {}
struct UserOnlineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserOnlineRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserOnlineRequestDefaultTypeInternal() {}
  union {
    UserOnlineRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserOnlineRequestDefaultTypeInternal _UserOnlineRequest_default_instance_;
PROTOBUF_CONSTEXPR UserList::UserList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListDefaultTypeInternal() {}
  union {
    UserList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListDefaultTypeInternal _UserList_default_instance_;
PROTOBUF_CONSTEXPR UserEntry::UserEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.connections_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.group_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_base58_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.connectivity_)*/0
  , /*decltype(_impl_.verified_)*/false
  , /*decltype(_impl_.blocked_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserEntryDefaultTypeInternal() {}
  union {
    UserEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserEntryDefaultTypeInternal _UserEntry_default_instance_;
PROTOBUF_CONSTEXPR RoutingTableConnection::RoutingTableConnection(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.via_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.module_)*/0
  , /*decltype(_impl_.rtt_)*/0u
  , /*decltype(_impl_.hop_count_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoutingTableConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutingTableConnectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutingTableConnectionDefaultTypeInternal() {}
  union {
    RoutingTableConnection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutingTableConnectionDefaultTypeInternal _RoutingTableConnection_default_instance_;
PROTOBUF_CONSTEXPR SecurityNumberRequest::SecurityNumberRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SecurityNumberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityNumberRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityNumberRequestDefaultTypeInternal() {}
  union {
    SecurityNumberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityNumberRequestDefaultTypeInternal _SecurityNumberRequest_default_instance_;
PROTOBUF_CONSTEXPR SecurityNumberResponse::SecurityNumberResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.security_number_blocks_)*/{}
  , /*decltype(_impl_._security_number_blocks_cached_byte_size_)*/{0}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.security_hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SecurityNumberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityNumberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityNumberResponseDefaultTypeInternal() {}
  union {
    SecurityNumberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityNumberResponseDefaultTypeInternal _SecurityNumberResponse_default_instance_;
}  // namespace users
}  // namespace rpc
}  // namespace qaul
static ::_pb::Metadata file_level_metadata_router_2fusers_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_router_2fusers_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_router_2fusers_2eproto = nullptr;

const uint32_t TableStruct_router_2fusers_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::Users, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::Users, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::Users, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserOnlineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserList, _impl_.user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.key_base58_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.connectivity_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.verified_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.blocked_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::UserEntry, _impl_.connections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::RoutingTableConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::RoutingTableConnection, _impl_.module_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::RoutingTableConnection, _impl_.rtt_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::RoutingTableConnection, _impl_.hop_count_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::RoutingTableConnection, _impl_.via_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberResponse, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberResponse, _impl_.security_hash_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::users::SecurityNumberResponse, _impl_.security_number_blocks_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::rpc::users::Users)},
  { 13, -1, -1, sizeof(::qaul::rpc::users::UserRequest)},
  { 19, -1, -1, sizeof(::qaul::rpc::users::UserOnlineRequest)},
  { 25, -1, -1, sizeof(::qaul::rpc::users::UserList)},
  { 32, -1, -1, sizeof(::qaul::rpc::users::UserEntry)},
  { 46, -1, -1, sizeof(::qaul::rpc::users::RoutingTableConnection)},
  { 56, -1, -1, sizeof(::qaul::rpc::users::SecurityNumberRequest)},
  { 63, -1, -1, sizeof(::qaul::rpc::users::SecurityNumberResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::qaul::rpc::users::_Users_default_instance_._instance,
  &::qaul::rpc::users::_UserRequest_default_instance_._instance,
  &::qaul::rpc::users::_UserOnlineRequest_default_instance_._instance,
  &::qaul::rpc::users::_UserList_default_instance_._instance,
  &::qaul::rpc::users::_UserEntry_default_instance_._instance,
  &::qaul::rpc::users::_RoutingTableConnection_default_instance_._instance,
  &::qaul::rpc::users::_SecurityNumberRequest_default_instance_._instance,
  &::qaul::rpc::users::_SecurityNumberResponse_default_instance_._instance,
};

const char descriptor_table_protodef_router_2fusers_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022router/users.proto\022\016qaul.rpc.users\"\200\003\n"
  "\005Users\0223\n\014user_request\030\001 \001(\0132\033.qaul.rpc."
  "users.UserRequestH\000\022@\n\023user_online_reque"
  "st\030\002 \001(\0132!.qaul.rpc.users.UserOnlineRequ"
  "estH\000\022-\n\tuser_list\030\003 \001(\0132\030.qaul.rpc.user"
  "s.UserListH\000\0220\n\013user_update\030\004 \001(\0132\031.qaul"
  ".rpc.users.UserEntryH\000\022H\n\027security_numbe"
  "r_request\030\005 \001(\0132%.qaul.rpc.users.Securit"
  "yNumberRequestH\000\022J\n\030security_number_resp"
  "onse\030\006 \001(\0132&.qaul.rpc.users.SecurityNumb"
  "erResponseH\000B\t\n\007message\"\r\n\013UserRequest\"\023"
  "\n\021UserOnlineRequest\"3\n\010UserList\022\'\n\004user\030"
  "\001 \003(\0132\031.qaul.rpc.users.UserEntry\"\337\001\n\tUse"
  "rEntry\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\014\022\020\n\010grou"
  "p_id\030\003 \001(\014\022\022\n\nkey_base58\030\007 \001(\t\0222\n\014connec"
  "tivity\030\010 \001(\0162\034.qaul.rpc.users.Connectivi"
  "ty\022\020\n\010verified\030\t \001(\010\022\017\n\007blocked\030\n \001(\010\022;\n"
  "\013connections\030\013 \003(\0132&.qaul.rpc.users.Rout"
  "ingTableConnection\"w\n\026RoutingTableConnec"
  "tion\0220\n\006module\030\002 \001(\0162 .qaul.rpc.users.Co"
  "nnectionModule\022\013\n\003rtt\030\003 \001(\r\022\021\n\thop_count"
  "\030\005 \001(\r\022\013\n\003via\030\004 \001(\014\"(\n\025SecurityNumberReq"
  "uest\022\017\n\007user_id\030\001 \001(\014\"`\n\026SecurityNumberR"
  "esponse\022\017\n\007user_id\030\001 \001(\014\022\025\n\rsecurity_has"
  "h\030\002 \001(\014\022\036\n\026security_number_blocks\030\003 \003(\r*"
  "G\n\020ConnectionModule\022\010\n\004NONE\020\000\022\007\n\003LAN\020\001\022\014"
  "\n\010INTERNET\020\002\022\007\n\003BLE\020\003\022\t\n\005LOCAL\020\004*6\n\014Conn"
  "ectivity\022\n\n\006Online\020\000\022\r\n\tReachable\020\001\022\013\n\007O"
  "ffline\020\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_router_2fusers_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_router_2fusers_2eproto = {
    false, false, 1136, descriptor_table_protodef_router_2fusers_2eproto,
    "router/users.proto",
    &descriptor_table_router_2fusers_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_router_2fusers_2eproto::offsets,
    file_level_metadata_router_2fusers_2eproto, file_level_enum_descriptors_router_2fusers_2eproto,
    file_level_service_descriptors_router_2fusers_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_router_2fusers_2eproto_getter() {
  return &descriptor_table_router_2fusers_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_router_2fusers_2eproto(&descriptor_table_router_2fusers_2eproto);
namespace qaul {
namespace rpc {
namespace users {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConnectionModule_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_router_2fusers_2eproto);
  return file_level_enum_descriptors_router_2fusers_2eproto[0];
}
bool ConnectionModule_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Connectivity_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_router_2fusers_2eproto);
  return file_level_enum_descriptors_router_2fusers_2eproto[1];
}
bool Connectivity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Users::_Internal {
 public:
  static const ::qaul::rpc::users::UserRequest& user_request(const Users* msg);
  static const ::qaul::rpc::users::UserOnlineRequest& user_online_request(const Users* msg);
  static const ::qaul::rpc::users::UserList& user_list(const Users* msg);
  static const ::qaul::rpc::users::UserEntry& user_update(const Users* msg);
  static const ::qaul::rpc::users::SecurityNumberRequest& security_number_request(const Users* msg);
  static const ::qaul::rpc::users::SecurityNumberResponse& security_number_response(const Users* msg);
};

const ::qaul::rpc::users::UserRequest&
Users::_Internal::user_request(const Users* msg) {
  return *msg->_impl_.message_.user_request_;
}
const ::qaul::rpc::users::UserOnlineRequest&
Users::_Internal::user_online_request(const Users* msg) {
  return *msg->_impl_.message_.user_online_request_;
}
const ::qaul::rpc::users::UserList&
Users::_Internal::user_list(const Users* msg) {
  return *msg->_impl_.message_.user_list_;
}
const ::qaul::rpc::users::UserEntry&
Users::_Internal::user_update(const Users* msg) {
  return *msg->_impl_.message_.user_update_;
}
const ::qaul::rpc::users::SecurityNumberRequest&
Users::_Internal::security_number_request(const Users* msg) {
  return *msg->_impl_.message_.security_number_request_;
}
const ::qaul::rpc::users::SecurityNumberResponse&
Users::_Internal::security_number_response(const Users* msg) {
  return *msg->_impl_.message_.security_number_response_;
}
void Users::set_allocated_user_request(::qaul::rpc::users::UserRequest* user_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (user_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_request);
    if (message_arena != submessage_arena) {
      user_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_request, submessage_arena);
    }
    set_has_user_request();
    _impl_.message_.user_request_ = user_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.user_request)
}
void Users::set_allocated_user_online_request(::qaul::rpc::users::UserOnlineRequest* user_online_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (user_online_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_online_request);
    if (message_arena != submessage_arena) {
      user_online_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_online_request, submessage_arena);
    }
    set_has_user_online_request();
    _impl_.message_.user_online_request_ = user_online_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.user_online_request)
}
void Users::set_allocated_user_list(::qaul::rpc::users::UserList* user_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (user_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_list);
    if (message_arena != submessage_arena) {
      user_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_list, submessage_arena);
    }
    set_has_user_list();
    _impl_.message_.user_list_ = user_list;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.user_list)
}
void Users::set_allocated_user_update(::qaul::rpc::users::UserEntry* user_update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (user_update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_update);
    if (message_arena != submessage_arena) {
      user_update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_update, submessage_arena);
    }
    set_has_user_update();
    _impl_.message_.user_update_ = user_update;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.user_update)
}
void Users::set_allocated_security_number_request(::qaul::rpc::users::SecurityNumberRequest* security_number_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (security_number_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(security_number_request);
    if (message_arena != submessage_arena) {
      security_number_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, security_number_request, submessage_arena);
    }
    set_has_security_number_request();
    _impl_.message_.security_number_request_ = security_number_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.security_number_request)
}
void Users::set_allocated_security_number_response(::qaul::rpc::users::SecurityNumberResponse* security_number_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (security_number_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(security_number_response);
    if (message_arena != submessage_arena) {
      security_number_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, security_number_response, submessage_arena);
    }
    set_has_security_number_response();
    _impl_.message_.security_number_response_ = security_number_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.users.Users.security_number_response)
}
Users::Users(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.Users)
}
Users::Users(const Users& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Users* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kUserRequest: {
      _this->_internal_mutable_user_request()->::qaul::rpc::users::UserRequest::MergeFrom(
          from._internal_user_request());
      break;
    }
    case kUserOnlineRequest: {
      _this->_internal_mutable_user_online_request()->::qaul::rpc::users::UserOnlineRequest::MergeFrom(
          from._internal_user_online_request());
      break;
    }
    case kUserList: {
      _this->_internal_mutable_user_list()->::qaul::rpc::users::UserList::MergeFrom(
          from._internal_user_list());
      break;
    }
    case kUserUpdate: {
      _this->_internal_mutable_user_update()->::qaul::rpc::users::UserEntry::MergeFrom(
          from._internal_user_update());
      break;
    }
    case kSecurityNumberRequest: {
      _this->_internal_mutable_security_number_request()->::qaul::rpc::users::SecurityNumberRequest::MergeFrom(
          from._internal_security_number_request());
      break;
    }
    case kSecurityNumberResponse: {
      _this->_internal_mutable_security_number_response()->::qaul::rpc::users::SecurityNumberResponse::MergeFrom(
          from._internal_security_number_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.Users)
}

inline void Users::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message();
}

Users::~Users() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.Users)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Users::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Users::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Users::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.rpc.users.Users)
  switch (message_case()) {
    case kUserRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.user_request_;
      }
      break;
    }
    case kUserOnlineRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.user_online_request_;
      }
      break;
    }
    case kUserList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.user_list_;
      }
      break;
    }
    case kUserUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.user_update_;
      }
      break;
    }
    case kSecurityNumberRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.security_number_request_;
      }
      break;
    }
    case kSecurityNumberResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.security_number_response_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void Users::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.Users)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Users::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.users.UserRequest user_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.UserOnlineRequest user_online_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_online_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.UserList user_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.UserEntry user_update = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.SecurityNumberRequest security_number_request = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_security_number_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.SecurityNumberResponse security_number_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_security_number_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Users::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.Users)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.users.UserRequest user_request = 1;
  if (_internal_has_user_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::user_request(this),
        _Internal::user_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.users.UserOnlineRequest user_online_request = 2;
  if (_internal_has_user_online_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::user_online_request(this),
        _Internal::user_online_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.users.UserList user_list = 3;
  if (_internal_has_user_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::user_list(this),
        _Internal::user_list(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.users.UserEntry user_update = 4;
  if (_internal_has_user_update()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::user_update(this),
        _Internal::user_update(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.users.SecurityNumberRequest security_number_request = 5;
  if (_internal_has_security_number_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::security_number_request(this),
        _Internal::security_number_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.users.SecurityNumberResponse security_number_response = 6;
  if (_internal_has_security_number_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::security_number_response(this),
        _Internal::security_number_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.Users)
  return target;
}

size_t Users::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.Users)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.rpc.users.UserRequest user_request = 1;
    case kUserRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.user_request_);
      break;
    }
    // .qaul.rpc.users.UserOnlineRequest user_online_request = 2;
    case kUserOnlineRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.user_online_request_);
      break;
    }
    // .qaul.rpc.users.UserList user_list = 3;
    case kUserList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.user_list_);
      break;
    }
    // .qaul.rpc.users.UserEntry user_update = 4;
    case kUserUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.user_update_);
      break;
    }
    // .qaul.rpc.users.SecurityNumberRequest security_number_request = 5;
    case kSecurityNumberRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.security_number_request_);
      break;
    }
    // .qaul.rpc.users.SecurityNumberResponse security_number_response = 6;
    case kSecurityNumberResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.security_number_response_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Users::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Users::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Users::GetClassData() const { return &_class_data_; }


void Users::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Users*>(&to_msg);
  auto& from = static_cast<const Users&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.Users)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kUserRequest: {
      _this->_internal_mutable_user_request()->::qaul::rpc::users::UserRequest::MergeFrom(
          from._internal_user_request());
      break;
    }
    case kUserOnlineRequest: {
      _this->_internal_mutable_user_online_request()->::qaul::rpc::users::UserOnlineRequest::MergeFrom(
          from._internal_user_online_request());
      break;
    }
    case kUserList: {
      _this->_internal_mutable_user_list()->::qaul::rpc::users::UserList::MergeFrom(
          from._internal_user_list());
      break;
    }
    case kUserUpdate: {
      _this->_internal_mutable_user_update()->::qaul::rpc::users::UserEntry::MergeFrom(
          from._internal_user_update());
      break;
    }
    case kSecurityNumberRequest: {
      _this->_internal_mutable_security_number_request()->::qaul::rpc::users::SecurityNumberRequest::MergeFrom(
          from._internal_security_number_request());
      break;
    }
    case kSecurityNumberResponse: {
      _this->_internal_mutable_security_number_response()->::qaul::rpc::users::SecurityNumberResponse::MergeFrom(
          from._internal_security_number_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Users::CopyFrom(const Users& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.Users)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Users::IsInitialized() const {
  return true;
}

void Users::InternalSwap(Users* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Users::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[0]);
}

// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UserRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.UserRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[1]);
}

// ===================================================================

class UserOnlineRequest::_Internal {
 public:
};

UserOnlineRequest::UserOnlineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.UserOnlineRequest)
}
UserOnlineRequest::UserOnlineRequest(const UserOnlineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UserOnlineRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.UserOnlineRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserOnlineRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserOnlineRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UserOnlineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[2]);
}

// ===================================================================

class UserList::_Internal {
 public:
};

UserList::UserList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.UserList)
}
UserList::UserList(const UserList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_){from._impl_.user_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.UserList)
}

inline void UserList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserList::~UserList() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.UserList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_.~RepeatedPtrField();
}

void UserList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserList::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.UserList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .qaul.rpc.users.UserEntry user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_user(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.UserList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qaul.rpc.users.UserEntry user = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_user_size()); i < n; i++) {
    const auto& repfield = this->_internal_user(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.UserList)
  return target;
}

size_t UserList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.UserList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.users.UserEntry user = 1;
  total_size += 1UL * this->_internal_user_size();
  for (const auto& msg : this->_impl_.user_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserList::GetClassData() const { return &_class_data_; }


void UserList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserList*>(&to_msg);
  auto& from = static_cast<const UserList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.UserList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.user_.MergeFrom(from._impl_.user_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserList::CopyFrom(const UserList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.UserList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserList::IsInitialized() const {
  return true;
}

void UserList::InternalSwap(UserList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.user_.InternalSwap(&other->_impl_.user_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[3]);
}

// ===================================================================

class UserEntry::_Internal {
 public:
};

UserEntry::UserEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.UserEntry)
}
UserEntry::UserEntry(const UserEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.connections_){from._impl_.connections_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.key_base58_){}
    , decltype(_impl_.connectivity_){}
    , decltype(_impl_.verified_){}
    , decltype(_impl_.blocked_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_group_id().empty()) {
    _this->_impl_.group_id_.Set(from._internal_group_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_base58_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_base58_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_base58().empty()) {
    _this->_impl_.key_base58_.Set(from._internal_key_base58(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.connectivity_, &from._impl_.connectivity_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.blocked_) -
    reinterpret_cast<char*>(&_impl_.connectivity_)) + sizeof(_impl_.blocked_));
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.UserEntry)
}

inline void UserEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.connections_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.group_id_){}
    , decltype(_impl_.key_base58_){}
    , decltype(_impl_.connectivity_){0}
    , decltype(_impl_.verified_){false}
    , decltype(_impl_.blocked_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.group_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_base58_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_base58_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserEntry::~UserEntry() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.UserEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.connections_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.id_.Destroy();
  _impl_.group_id_.Destroy();
  _impl_.key_base58_.Destroy();
}

void UserEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.UserEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connections_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.group_id_.ClearToEmpty();
  _impl_.key_base58_.ClearToEmpty();
  ::memset(&_impl_.connectivity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.blocked_) -
      reinterpret_cast<char*>(&_impl_.connectivity_)) + sizeof(_impl_.blocked_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.users.UserEntry.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes group_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_group_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key_base58 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_key_base58();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.users.UserEntry.key_base58"));
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.users.Connectivity connectivity = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_connectivity(static_cast<::qaul::rpc::users::Connectivity>(val));
        } else
          goto handle_unusual;
        continue;
      // bool verified = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool blocked = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.blocked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .qaul.rpc.users.RoutingTableConnection connections = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_connections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.UserEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.users.UserEntry.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes id = 2;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_id(), target);
  }

  // bytes group_id = 3;
  if (!this->_internal_group_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_group_id(), target);
  }

  // string key_base58 = 7;
  if (!this->_internal_key_base58().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_base58().data(), static_cast<int>(this->_internal_key_base58().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.users.UserEntry.key_base58");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_key_base58(), target);
  }

  // .qaul.rpc.users.Connectivity connectivity = 8;
  if (this->_internal_connectivity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_connectivity(), target);
  }

  // bool verified = 9;
  if (this->_internal_verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_verified(), target);
  }

  // bool blocked = 10;
  if (this->_internal_blocked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_blocked(), target);
  }

  // repeated .qaul.rpc.users.RoutingTableConnection connections = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_connections_size()); i < n; i++) {
    const auto& repfield = this->_internal_connections(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.UserEntry)
  return target;
}

size_t UserEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.UserEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.users.RoutingTableConnection connections = 11;
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->_impl_.connections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // bytes group_id = 3;
  if (!this->_internal_group_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_group_id());
  }

  // string key_base58 = 7;
  if (!this->_internal_key_base58().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_base58());
  }

  // .qaul.rpc.users.Connectivity connectivity = 8;
  if (this->_internal_connectivity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_connectivity());
  }

  // bool verified = 9;
  if (this->_internal_verified() != 0) {
    total_size += 1 + 1;
  }

  // bool blocked = 10;
  if (this->_internal_blocked() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserEntry::GetClassData() const { return &_class_data_; }


void UserEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserEntry*>(&to_msg);
  auto& from = static_cast<const UserEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.UserEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.connections_.MergeFrom(from._impl_.connections_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_group_id().empty()) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  if (!from._internal_key_base58().empty()) {
    _this->_internal_set_key_base58(from._internal_key_base58());
  }
  if (from._internal_connectivity() != 0) {
    _this->_internal_set_connectivity(from._internal_connectivity());
  }
  if (from._internal_verified() != 0) {
    _this->_internal_set_verified(from._internal_verified());
  }
  if (from._internal_blocked() != 0) {
    _this->_internal_set_blocked(from._internal_blocked());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserEntry::CopyFrom(const UserEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.UserEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserEntry::IsInitialized() const {
  return true;
}

void UserEntry::InternalSwap(UserEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connections_.InternalSwap(&other->_impl_.connections_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.group_id_, lhs_arena,
      &other->_impl_.group_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_base58_, lhs_arena,
      &other->_impl_.key_base58_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserEntry, _impl_.blocked_)
      + sizeof(UserEntry::_impl_.blocked_)
      - PROTOBUF_FIELD_OFFSET(UserEntry, _impl_.connectivity_)>(
          reinterpret_cast<char*>(&_impl_.connectivity_),
          reinterpret_cast<char*>(&other->_impl_.connectivity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[4]);
}

// ===================================================================

class RoutingTableConnection::_Internal {
 public:
};

RoutingTableConnection::RoutingTableConnection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.RoutingTableConnection)
}
RoutingTableConnection::RoutingTableConnection(const RoutingTableConnection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoutingTableConnection* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.via_){}
    , decltype(_impl_.module_){}
    , decltype(_impl_.rtt_){}
    , decltype(_impl_.hop_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.via_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.via_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_via().empty()) {
    _this->_impl_.via_.Set(from._internal_via(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.module_, &from._impl_.module_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hop_count_) -
    reinterpret_cast<char*>(&_impl_.module_)) + sizeof(_impl_.hop_count_));
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.RoutingTableConnection)
}

inline void RoutingTableConnection::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.via_){}
    , decltype(_impl_.module_){0}
    , decltype(_impl_.rtt_){0u}
    , decltype(_impl_.hop_count_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.via_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.via_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoutingTableConnection::~RoutingTableConnection() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.RoutingTableConnection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoutingTableConnection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.via_.Destroy();
}

void RoutingTableConnection::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoutingTableConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.RoutingTableConnection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.via_.ClearToEmpty();
  ::memset(&_impl_.module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.hop_count_) -
      reinterpret_cast<char*>(&_impl_.module_)) + sizeof(_impl_.hop_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoutingTableConnection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.users.ConnectionModule module = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_module(static_cast<::qaul::rpc::users::ConnectionModule>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 rtt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.rtt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes via = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_via();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 hop_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.hop_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoutingTableConnection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.RoutingTableConnection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.users.ConnectionModule module = 2;
  if (this->_internal_module() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_module(), target);
  }

  // uint32 rtt = 3;
  if (this->_internal_rtt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rtt(), target);
  }

  // bytes via = 4;
  if (!this->_internal_via().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_via(), target);
  }

  // uint32 hop_count = 5;
  if (this->_internal_hop_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_hop_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.RoutingTableConnection)
  return target;
}

size_t RoutingTableConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.RoutingTableConnection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes via = 4;
  if (!this->_internal_via().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_via());
  }

  // .qaul.rpc.users.ConnectionModule module = 2;
  if (this->_internal_module() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_module());
  }

  // uint32 rtt = 3;
  if (this->_internal_rtt() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rtt());
  }

  // uint32 hop_count = 5;
  if (this->_internal_hop_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hop_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoutingTableConnection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoutingTableConnection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoutingTableConnection::GetClassData() const { return &_class_data_; }


void RoutingTableConnection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoutingTableConnection*>(&to_msg);
  auto& from = static_cast<const RoutingTableConnection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.RoutingTableConnection)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_via().empty()) {
    _this->_internal_set_via(from._internal_via());
  }
  if (from._internal_module() != 0) {
    _this->_internal_set_module(from._internal_module());
  }
  if (from._internal_rtt() != 0) {
    _this->_internal_set_rtt(from._internal_rtt());
  }
  if (from._internal_hop_count() != 0) {
    _this->_internal_set_hop_count(from._internal_hop_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoutingTableConnection::CopyFrom(const RoutingTableConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.RoutingTableConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingTableConnection::IsInitialized() const {
  return true;
}

void RoutingTableConnection::InternalSwap(RoutingTableConnection* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.via_, lhs_arena,
      &other->_impl_.via_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoutingTableConnection, _impl_.hop_count_)
      + sizeof(RoutingTableConnection::_impl_.hop_count_)
      - PROTOBUF_FIELD_OFFSET(RoutingTableConnection, _impl_.module_)>(
          reinterpret_cast<char*>(&_impl_.module_),
          reinterpret_cast<char*>(&other->_impl_.module_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoutingTableConnection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[5]);
}

// ===================================================================

class SecurityNumberRequest::_Internal {
 public:
};

SecurityNumberRequest::SecurityNumberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.SecurityNumberRequest)
}
SecurityNumberRequest::SecurityNumberRequest(const SecurityNumberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SecurityNumberRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.SecurityNumberRequest)
}

inline void SecurityNumberRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SecurityNumberRequest::~SecurityNumberRequest() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.SecurityNumberRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SecurityNumberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
}

void SecurityNumberRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SecurityNumberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.SecurityNumberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityNumberRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityNumberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.SecurityNumberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.SecurityNumberRequest)
  return target;
}

size_t SecurityNumberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.SecurityNumberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityNumberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SecurityNumberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityNumberRequest::GetClassData() const { return &_class_data_; }


void SecurityNumberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SecurityNumberRequest*>(&to_msg);
  auto& from = static_cast<const SecurityNumberRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.SecurityNumberRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityNumberRequest::CopyFrom(const SecurityNumberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.SecurityNumberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityNumberRequest::IsInitialized() const {
  return true;
}

void SecurityNumberRequest::InternalSwap(SecurityNumberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityNumberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[6]);
}

// ===================================================================

class SecurityNumberResponse::_Internal {
 public:
};

SecurityNumberResponse::SecurityNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.users.SecurityNumberResponse)
}
SecurityNumberResponse::SecurityNumberResponse(const SecurityNumberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SecurityNumberResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.security_number_blocks_){from._impl_.security_number_blocks_}
    , /*decltype(_impl_._security_number_blocks_cached_byte_size_)*/{0}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.security_hash_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.security_hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.security_hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_security_hash().empty()) {
    _this->_impl_.security_hash_.Set(from._internal_security_hash(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.users.SecurityNumberResponse)
}

inline void SecurityNumberResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.security_number_blocks_){arena}
    , /*decltype(_impl_._security_number_blocks_cached_byte_size_)*/{0}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.security_hash_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.security_hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.security_hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SecurityNumberResponse::~SecurityNumberResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.users.SecurityNumberResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SecurityNumberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.security_number_blocks_.~RepeatedField();
  _impl_.user_id_.Destroy();
  _impl_.security_hash_.Destroy();
}

void SecurityNumberResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SecurityNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.users.SecurityNumberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.security_number_blocks_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _impl_.security_hash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityNumberResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes security_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_security_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 security_number_blocks = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_security_number_blocks(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_security_number_blocks(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SecurityNumberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.users.SecurityNumberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // bytes security_hash = 2;
  if (!this->_internal_security_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_security_hash(), target);
  }

  // repeated uint32 security_number_blocks = 3;
  {
    int byte_size = _impl_._security_number_blocks_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_security_number_blocks(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.users.SecurityNumberResponse)
  return target;
}

size_t SecurityNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.users.SecurityNumberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 security_number_blocks = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.security_number_blocks_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._security_number_blocks_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_user_id());
  }

  // bytes security_hash = 2;
  if (!this->_internal_security_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_security_hash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SecurityNumberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SecurityNumberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SecurityNumberResponse::GetClassData() const { return &_class_data_; }


void SecurityNumberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SecurityNumberResponse*>(&to_msg);
  auto& from = static_cast<const SecurityNumberResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.users.SecurityNumberResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.security_number_blocks_.MergeFrom(from._impl_.security_number_blocks_);
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_security_hash().empty()) {
    _this->_internal_set_security_hash(from._internal_security_hash());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityNumberResponse::CopyFrom(const SecurityNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.users.SecurityNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityNumberResponse::IsInitialized() const {
  return true;
}

void SecurityNumberResponse::InternalSwap(SecurityNumberResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.security_number_blocks_.InternalSwap(&other->_impl_.security_number_blocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.security_hash_, lhs_arena,
      &other->_impl_.security_hash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityNumberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_router_2fusers_2eproto_getter, &descriptor_table_router_2fusers_2eproto_once,
      file_level_metadata_router_2fusers_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace users
}  // namespace rpc
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::Users*
Arena::CreateMaybeMessage< ::qaul::rpc::users::Users >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::Users >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::UserRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::users::UserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::UserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::UserOnlineRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::users::UserOnlineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::UserOnlineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::UserList*
Arena::CreateMaybeMessage< ::qaul::rpc::users::UserList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::UserList >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::UserEntry*
Arena::CreateMaybeMessage< ::qaul::rpc::users::UserEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::UserEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::RoutingTableConnection*
Arena::CreateMaybeMessage< ::qaul::rpc::users::RoutingTableConnection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::RoutingTableConnection >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::SecurityNumberRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::users::SecurityNumberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::SecurityNumberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::users::SecurityNumberResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::users::SecurityNumberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::users::SecurityNumberResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
