// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connections/ble/manager/ble.proto

#include "connections/ble/manager/ble.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace qaul {
namespace sys {
namespace ble {
constexpr Ble::Ble(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct BleDefaultTypeInternal {
  constexpr BleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleDefaultTypeInternal() {}
  union {
    Ble _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleDefaultTypeInternal _Ble_default_instance_;
constexpr BleInfoRequest::BleInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BleInfoRequestDefaultTypeInternal {
  constexpr BleInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleInfoRequestDefaultTypeInternal() {}
  union {
    BleInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleInfoRequestDefaultTypeInternal _BleInfoRequest_default_instance_;
constexpr BleInfoResponse::BleInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(){}
struct BleInfoResponseDefaultTypeInternal {
  constexpr BleInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleInfoResponseDefaultTypeInternal() {}
  union {
    BleInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleInfoResponseDefaultTypeInternal _BleInfoResponse_default_instance_;
constexpr BleDeviceInfo::BleDeviceInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , powered_(false)
  , ble_support_(false)
  , adv_251_(false)
  , adv_extended_(false)
  , adv_extended_bytes_(0u)
  , adv_1m_(false)
  , adv_2m_(false)
  , adv_coded_(false)
  , le_audio_(false){}
struct BleDeviceInfoDefaultTypeInternal {
  constexpr BleDeviceInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleDeviceInfoDefaultTypeInternal() {}
  union {
    BleDeviceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleDeviceInfoDefaultTypeInternal _BleDeviceInfo_default_instance_;
constexpr BleStartRequest::BleStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BleStartRequestDefaultTypeInternal {
  constexpr BleStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleStartRequestDefaultTypeInternal() {}
  union {
    BleStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleStartRequestDefaultTypeInternal _BleStartRequest_default_instance_;
constexpr BleStartResult::BleStartResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(false)
  , unknonw_error_(false)
  , no_rights_(false){}
struct BleStartResultDefaultTypeInternal {
  constexpr BleStartResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleStartResultDefaultTypeInternal() {}
  union {
    BleStartResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleStartResultDefaultTypeInternal _BleStartResult_default_instance_;
constexpr BleAdvertisingSet::BleAdvertisingSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BleAdvertisingSetDefaultTypeInternal {
  constexpr BleAdvertisingSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleAdvertisingSetDefaultTypeInternal() {}
  union {
    BleAdvertisingSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleAdvertisingSetDefaultTypeInternal _BleAdvertisingSet_default_instance_;
constexpr BleAdvertisingSend::BleAdvertisingSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mode_(0)
{}
struct BleAdvertisingSendDefaultTypeInternal {
  constexpr BleAdvertisingSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleAdvertisingSendDefaultTypeInternal() {}
  union {
    BleAdvertisingSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleAdvertisingSendDefaultTypeInternal _BleAdvertisingSend_default_instance_;
constexpr BleAdvertisingReceived::BleAdvertisingReceived(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rssi_(0)
  , mode_(0)
{}
struct BleAdvertisingReceivedDefaultTypeInternal {
  constexpr BleAdvertisingReceivedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleAdvertisingReceivedDefaultTypeInternal() {}
  union {
    BleAdvertisingReceived _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleAdvertisingReceivedDefaultTypeInternal _BleAdvertisingReceived_default_instance_;
constexpr BleDirectSend::BleDirectSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , to_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mode_(0)
{}
struct BleDirectSendDefaultTypeInternal {
  constexpr BleDirectSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleDirectSendDefaultTypeInternal() {}
  union {
    BleDirectSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleDirectSendDefaultTypeInternal _BleDirectSend_default_instance_;
constexpr BleDirectSendResult::BleDirectSendResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(false){}
struct BleDirectSendResultDefaultTypeInternal {
  constexpr BleDirectSendResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleDirectSendResultDefaultTypeInternal() {}
  union {
    BleDirectSendResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleDirectSendResultDefaultTypeInternal _BleDirectSendResult_default_instance_;
constexpr BleDirectReceived::BleDirectReceived(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : from_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rssi_(0)
  , mode_(0)
{}
struct BleDirectReceivedDefaultTypeInternal {
  constexpr BleDirectReceivedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BleDirectReceivedDefaultTypeInternal() {}
  union {
    BleDirectReceived _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BleDirectReceivedDefaultTypeInternal _BleDirectReceived_default_instance_;
}  // namespace ble
}  // namespace sys
}  // namespace qaul
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[12];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_connections_2fble_2fmanager_2fble_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_connections_2fble_2fmanager_2fble_2eproto = nullptr;

const uint32_t TableStruct_connections_2fble_2fmanager_2fble_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::Ble, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::Ble, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::Ble, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleInfoResponse, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, id_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, name_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, powered_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, ble_support_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_251_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_extended_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_extended_bytes_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_1m_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_2m_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, adv_coded_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDeviceInfo, le_audio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartResult, success_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartResult, error_message_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartResult, unknonw_error_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleStartResult, no_rights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingSet, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingSend, mode_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingSend, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingReceived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingReceived, id_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingReceived, rssi_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingReceived, mode_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleAdvertisingReceived, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSend, id_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSend, to_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSend, mode_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSend, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSendResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSendResult, id_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSendResult, success_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectSendResult, error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectReceived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectReceived, from_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectReceived, rssi_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectReceived, mode_),
  PROTOBUF_FIELD_OFFSET(::qaul::sys::ble::BleDirectReceived, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::sys::ble::Ble)},
  { 16, -1, -1, sizeof(::qaul::sys::ble::BleInfoRequest)},
  { 22, -1, -1, sizeof(::qaul::sys::ble::BleInfoResponse)},
  { 29, -1, -1, sizeof(::qaul::sys::ble::BleDeviceInfo)},
  { 46, -1, -1, sizeof(::qaul::sys::ble::BleStartRequest)},
  { 52, -1, -1, sizeof(::qaul::sys::ble::BleStartResult)},
  { 62, -1, -1, sizeof(::qaul::sys::ble::BleAdvertisingSet)},
  { 69, -1, -1, sizeof(::qaul::sys::ble::BleAdvertisingSend)},
  { 77, -1, -1, sizeof(::qaul::sys::ble::BleAdvertisingReceived)},
  { 87, -1, -1, sizeof(::qaul::sys::ble::BleDirectSend)},
  { 97, -1, -1, sizeof(::qaul::sys::ble::BleDirectSendResult)},
  { 106, -1, -1, sizeof(::qaul::sys::ble::BleDirectReceived)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_Ble_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleDeviceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleStartResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleAdvertisingSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleAdvertisingSend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleAdvertisingReceived_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleDirectSend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleDirectSendResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::sys::ble::_BleDirectReceived_default_instance_),
};

const char descriptor_table_protodef_connections_2fble_2fmanager_2fble_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!connections/ble/manager/ble.proto\022\014qau"
  "l.sys.ble\"\234\004\n\003Ble\0224\n\014info_request\030\001 \001(\0132"
  "\034.qaul.sys.ble.BleInfoRequestH\000\0226\n\rinfo_"
  "response\030\002 \001(\0132\035.qaul.sys.ble.BleInfoRes"
  "ponseH\000\0226\n\rstart_request\030\003 \001(\0132\035.qaul.sy"
  "s.ble.BleStartRequestH\000\0224\n\014start_result\030"
  "\004 \001(\0132\034.qaul.sys.ble.BleStartResultH\000\022:\n"
  "\017advertising_set\030\005 \001(\0132\037.qaul.sys.ble.Bl"
  "eAdvertisingSetH\000\022<\n\020advertising_send\030\006 "
  "\001(\0132 .qaul.sys.ble.BleAdvertisingSendH\000\022"
  "D\n\024advertising_received\030\007 \001(\0132$.qaul.sys"
  ".ble.BleAdvertisingReceivedH\000\0222\n\013direct_"
  "send\030\010 \001(\0132\033.qaul.sys.ble.BleDirectSendH"
  "\000\022:\n\017direct_received\030\t \001(\0132\037.qaul.sys.bl"
  "e.BleDirectReceivedH\000B\t\n\007message\"\020\n\016BleI"
  "nfoRequest\">\n\017BleInfoResponse\022+\n\006device\030"
  "\001 \003(\0132\033.qaul.sys.ble.BleDeviceInfo\"\327\001\n\rB"
  "leDeviceInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017"
  "\n\007powered\030\003 \001(\010\022\023\n\013ble_support\030\004 \001(\010\022\017\n\007"
  "adv_251\030\007 \001(\010\022\024\n\014adv_extended\030\010 \001(\010\022\032\n\022a"
  "dv_extended_bytes\030\t \001(\r\022\016\n\006adv_1m\030\n \001(\010\022"
  "\016\n\006adv_2m\030\013 \001(\010\022\021\n\tadv_coded\030\014 \001(\010\022\020\n\010le"
  "_audio\030\r \001(\010\"\021\n\017BleStartRequest\"b\n\016BleSt"
  "artResult\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_mess"
  "age\030\002 \001(\t\022\025\n\runknonw_error\030\003 \001(\010\022\021\n\tno_r"
  "ights\030\004 \001(\010\"!\n\021BleAdvertisingSet\022\014\n\004data"
  "\030\001 \001(\014\"G\n\022BleAdvertisingSend\022#\n\004mode\030\001 \001"
  "(\0162\025.qaul.sys.ble.BleMode\022\014\n\004data\030\002 \001(\014\""
  "e\n\026BleAdvertisingReceived\022\n\n\002id\030\001 \001(\014\022\014\n"
  "\004rssi\030\002 \001(\005\022#\n\004mode\030\003 \001(\0162\025.qaul.sys.ble"
  ".BleMode\022\014\n\004data\030\004 \001(\014\"Z\n\rBleDirectSend\022"
  "\n\n\002id\030\001 \001(\014\022\n\n\002to\030\002 \001(\014\022#\n\004mode\030\003 \001(\0162\025."
  "qaul.sys.ble.BleMode\022\014\n\004data\030\004 \001(\014\"I\n\023Bl"
  "eDirectSendResult\022\n\n\002id\030\001 \001(\014\022\017\n\007success"
  "\030\002 \001(\010\022\025\n\rerror_message\030\003 \001(\t\"b\n\021BleDire"
  "ctReceived\022\014\n\004from\030\001 \001(\014\022\014\n\004rssi\030\002 \001(\005\022#"
  "\n\004mode\030\003 \001(\0162\025.qaul.sys.ble.BleMode\022\014\n\004d"
  "ata\030\004 \001(\014*E\n\007BleMode\022\n\n\006legacy\020\000\022\t\n\005le_1"
  "m\020\001\022\t\n\005le_2m\020\002\022\013\n\007coded_2\020\003\022\013\n\007coded_8\020\004"
  "b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_connections_2fble_2fmanager_2fble_2eproto = {
  false, false, 1568, descriptor_table_protodef_connections_2fble_2fmanager_2fble_2eproto, "connections/ble/manager/ble.proto", 
  &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once, nullptr, 0, 12,
  schemas, file_default_instances, TableStruct_connections_2fble_2fmanager_2fble_2eproto::offsets,
  file_level_metadata_connections_2fble_2fmanager_2fble_2eproto, file_level_enum_descriptors_connections_2fble_2fmanager_2fble_2eproto, file_level_service_descriptors_connections_2fble_2fmanager_2fble_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter() {
  return &descriptor_table_connections_2fble_2fmanager_2fble_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_connections_2fble_2fmanager_2fble_2eproto(&descriptor_table_connections_2fble_2fmanager_2fble_2eproto);
namespace qaul {
namespace sys {
namespace ble {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BleMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_connections_2fble_2fmanager_2fble_2eproto);
  return file_level_enum_descriptors_connections_2fble_2fmanager_2fble_2eproto[0];
}
bool BleMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Ble::_Internal {
 public:
  static const ::qaul::sys::ble::BleInfoRequest& info_request(const Ble* msg);
  static const ::qaul::sys::ble::BleInfoResponse& info_response(const Ble* msg);
  static const ::qaul::sys::ble::BleStartRequest& start_request(const Ble* msg);
  static const ::qaul::sys::ble::BleStartResult& start_result(const Ble* msg);
  static const ::qaul::sys::ble::BleAdvertisingSet& advertising_set(const Ble* msg);
  static const ::qaul::sys::ble::BleAdvertisingSend& advertising_send(const Ble* msg);
  static const ::qaul::sys::ble::BleAdvertisingReceived& advertising_received(const Ble* msg);
  static const ::qaul::sys::ble::BleDirectSend& direct_send(const Ble* msg);
  static const ::qaul::sys::ble::BleDirectReceived& direct_received(const Ble* msg);
};

const ::qaul::sys::ble::BleInfoRequest&
Ble::_Internal::info_request(const Ble* msg) {
  return *msg->message_.info_request_;
}
const ::qaul::sys::ble::BleInfoResponse&
Ble::_Internal::info_response(const Ble* msg) {
  return *msg->message_.info_response_;
}
const ::qaul::sys::ble::BleStartRequest&
Ble::_Internal::start_request(const Ble* msg) {
  return *msg->message_.start_request_;
}
const ::qaul::sys::ble::BleStartResult&
Ble::_Internal::start_result(const Ble* msg) {
  return *msg->message_.start_result_;
}
const ::qaul::sys::ble::BleAdvertisingSet&
Ble::_Internal::advertising_set(const Ble* msg) {
  return *msg->message_.advertising_set_;
}
const ::qaul::sys::ble::BleAdvertisingSend&
Ble::_Internal::advertising_send(const Ble* msg) {
  return *msg->message_.advertising_send_;
}
const ::qaul::sys::ble::BleAdvertisingReceived&
Ble::_Internal::advertising_received(const Ble* msg) {
  return *msg->message_.advertising_received_;
}
const ::qaul::sys::ble::BleDirectSend&
Ble::_Internal::direct_send(const Ble* msg) {
  return *msg->message_.direct_send_;
}
const ::qaul::sys::ble::BleDirectReceived&
Ble::_Internal::direct_received(const Ble* msg) {
  return *msg->message_.direct_received_;
}
void Ble::set_allocated_info_request(::qaul::sys::ble::BleInfoRequest* info_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (info_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleInfoRequest>::GetOwningArena(info_request);
    if (message_arena != submessage_arena) {
      info_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_request, submessage_arena);
    }
    set_has_info_request();
    message_.info_request_ = info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.info_request)
}
void Ble::set_allocated_info_response(::qaul::sys::ble::BleInfoResponse* info_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (info_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleInfoResponse>::GetOwningArena(info_response);
    if (message_arena != submessage_arena) {
      info_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_response, submessage_arena);
    }
    set_has_info_response();
    message_.info_response_ = info_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.info_response)
}
void Ble::set_allocated_start_request(::qaul::sys::ble::BleStartRequest* start_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (start_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleStartRequest>::GetOwningArena(start_request);
    if (message_arena != submessage_arena) {
      start_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_request, submessage_arena);
    }
    set_has_start_request();
    message_.start_request_ = start_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.start_request)
}
void Ble::set_allocated_start_result(::qaul::sys::ble::BleStartResult* start_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (start_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleStartResult>::GetOwningArena(start_result);
    if (message_arena != submessage_arena) {
      start_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_result, submessage_arena);
    }
    set_has_start_result();
    message_.start_result_ = start_result;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.start_result)
}
void Ble::set_allocated_advertising_set(::qaul::sys::ble::BleAdvertisingSet* advertising_set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (advertising_set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleAdvertisingSet>::GetOwningArena(advertising_set);
    if (message_arena != submessage_arena) {
      advertising_set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, advertising_set, submessage_arena);
    }
    set_has_advertising_set();
    message_.advertising_set_ = advertising_set;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.advertising_set)
}
void Ble::set_allocated_advertising_send(::qaul::sys::ble::BleAdvertisingSend* advertising_send) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (advertising_send) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleAdvertisingSend>::GetOwningArena(advertising_send);
    if (message_arena != submessage_arena) {
      advertising_send = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, advertising_send, submessage_arena);
    }
    set_has_advertising_send();
    message_.advertising_send_ = advertising_send;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.advertising_send)
}
void Ble::set_allocated_advertising_received(::qaul::sys::ble::BleAdvertisingReceived* advertising_received) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (advertising_received) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleAdvertisingReceived>::GetOwningArena(advertising_received);
    if (message_arena != submessage_arena) {
      advertising_received = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, advertising_received, submessage_arena);
    }
    set_has_advertising_received();
    message_.advertising_received_ = advertising_received;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.advertising_received)
}
void Ble::set_allocated_direct_send(::qaul::sys::ble::BleDirectSend* direct_send) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (direct_send) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleDirectSend>::GetOwningArena(direct_send);
    if (message_arena != submessage_arena) {
      direct_send = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, direct_send, submessage_arena);
    }
    set_has_direct_send();
    message_.direct_send_ = direct_send;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.direct_send)
}
void Ble::set_allocated_direct_received(::qaul::sys::ble::BleDirectReceived* direct_received) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (direct_received) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::sys::ble::BleDirectReceived>::GetOwningArena(direct_received);
    if (message_arena != submessage_arena) {
      direct_received = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, direct_received, submessage_arena);
    }
    set_has_direct_received();
    message_.direct_received_ = direct_received;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.sys.ble.Ble.direct_received)
}
Ble::Ble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.Ble)
}
Ble::Ble(const Ble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kInfoRequest: {
      _internal_mutable_info_request()->::qaul::sys::ble::BleInfoRequest::MergeFrom(from._internal_info_request());
      break;
    }
    case kInfoResponse: {
      _internal_mutable_info_response()->::qaul::sys::ble::BleInfoResponse::MergeFrom(from._internal_info_response());
      break;
    }
    case kStartRequest: {
      _internal_mutable_start_request()->::qaul::sys::ble::BleStartRequest::MergeFrom(from._internal_start_request());
      break;
    }
    case kStartResult: {
      _internal_mutable_start_result()->::qaul::sys::ble::BleStartResult::MergeFrom(from._internal_start_result());
      break;
    }
    case kAdvertisingSet: {
      _internal_mutable_advertising_set()->::qaul::sys::ble::BleAdvertisingSet::MergeFrom(from._internal_advertising_set());
      break;
    }
    case kAdvertisingSend: {
      _internal_mutable_advertising_send()->::qaul::sys::ble::BleAdvertisingSend::MergeFrom(from._internal_advertising_send());
      break;
    }
    case kAdvertisingReceived: {
      _internal_mutable_advertising_received()->::qaul::sys::ble::BleAdvertisingReceived::MergeFrom(from._internal_advertising_received());
      break;
    }
    case kDirectSend: {
      _internal_mutable_direct_send()->::qaul::sys::ble::BleDirectSend::MergeFrom(from._internal_direct_send());
      break;
    }
    case kDirectReceived: {
      _internal_mutable_direct_received()->::qaul::sys::ble::BleDirectReceived::MergeFrom(from._internal_direct_received());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.Ble)
}

inline void Ble::SharedCtor() {
clear_has_message();
}

Ble::~Ble() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.Ble)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Ble::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Ble::ArenaDtor(void* object) {
  Ble* _this = reinterpret_cast< Ble* >(object);
  (void)_this;
}
void Ble::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Ble::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.sys.ble.Ble)
  switch (message_case()) {
    case kInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.info_request_;
      }
      break;
    }
    case kInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.info_response_;
      }
      break;
    }
    case kStartRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.start_request_;
      }
      break;
    }
    case kStartResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.start_result_;
      }
      break;
    }
    case kAdvertisingSet: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.advertising_set_;
      }
      break;
    }
    case kAdvertisingSend: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.advertising_send_;
      }
      break;
    }
    case kAdvertisingReceived: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.advertising_received_;
      }
      break;
    }
    case kDirectSend: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.direct_send_;
      }
      break;
    }
    case kDirectReceived: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.direct_received_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Ble::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.Ble)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ble::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.sys.ble.BleInfoRequest info_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleInfoResponse info_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleStartRequest start_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleStartResult start_result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleAdvertisingSet advertising_set = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_advertising_set(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleAdvertisingSend advertising_send = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_advertising_send(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleAdvertisingReceived advertising_received = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_advertising_received(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleDirectSend direct_send = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_direct_send(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleDirectReceived direct_received = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_direct_received(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ble::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.Ble)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.sys.ble.BleInfoRequest info_request = 1;
  if (_internal_has_info_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info_request(this), target, stream);
  }

  // .qaul.sys.ble.BleInfoResponse info_response = 2;
  if (_internal_has_info_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::info_response(this), target, stream);
  }

  // .qaul.sys.ble.BleStartRequest start_request = 3;
  if (_internal_has_start_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::start_request(this), target, stream);
  }

  // .qaul.sys.ble.BleStartResult start_result = 4;
  if (_internal_has_start_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::start_result(this), target, stream);
  }

  // .qaul.sys.ble.BleAdvertisingSet advertising_set = 5;
  if (_internal_has_advertising_set()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::advertising_set(this), target, stream);
  }

  // .qaul.sys.ble.BleAdvertisingSend advertising_send = 6;
  if (_internal_has_advertising_send()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::advertising_send(this), target, stream);
  }

  // .qaul.sys.ble.BleAdvertisingReceived advertising_received = 7;
  if (_internal_has_advertising_received()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::advertising_received(this), target, stream);
  }

  // .qaul.sys.ble.BleDirectSend direct_send = 8;
  if (_internal_has_direct_send()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::direct_send(this), target, stream);
  }

  // .qaul.sys.ble.BleDirectReceived direct_received = 9;
  if (_internal_has_direct_received()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::direct_received(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.Ble)
  return target;
}

size_t Ble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.Ble)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.sys.ble.BleInfoRequest info_request = 1;
    case kInfoRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.info_request_);
      break;
    }
    // .qaul.sys.ble.BleInfoResponse info_response = 2;
    case kInfoResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.info_response_);
      break;
    }
    // .qaul.sys.ble.BleStartRequest start_request = 3;
    case kStartRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.start_request_);
      break;
    }
    // .qaul.sys.ble.BleStartResult start_result = 4;
    case kStartResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.start_result_);
      break;
    }
    // .qaul.sys.ble.BleAdvertisingSet advertising_set = 5;
    case kAdvertisingSet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.advertising_set_);
      break;
    }
    // .qaul.sys.ble.BleAdvertisingSend advertising_send = 6;
    case kAdvertisingSend: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.advertising_send_);
      break;
    }
    // .qaul.sys.ble.BleAdvertisingReceived advertising_received = 7;
    case kAdvertisingReceived: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.advertising_received_);
      break;
    }
    // .qaul.sys.ble.BleDirectSend direct_send = 8;
    case kDirectSend: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.direct_send_);
      break;
    }
    // .qaul.sys.ble.BleDirectReceived direct_received = 9;
    case kDirectReceived: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.direct_received_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ble::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ble::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ble::GetClassData() const { return &_class_data_; }

void Ble::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ble *>(to)->MergeFrom(
      static_cast<const Ble &>(from));
}


void Ble::MergeFrom(const Ble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.Ble)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kInfoRequest: {
      _internal_mutable_info_request()->::qaul::sys::ble::BleInfoRequest::MergeFrom(from._internal_info_request());
      break;
    }
    case kInfoResponse: {
      _internal_mutable_info_response()->::qaul::sys::ble::BleInfoResponse::MergeFrom(from._internal_info_response());
      break;
    }
    case kStartRequest: {
      _internal_mutable_start_request()->::qaul::sys::ble::BleStartRequest::MergeFrom(from._internal_start_request());
      break;
    }
    case kStartResult: {
      _internal_mutable_start_result()->::qaul::sys::ble::BleStartResult::MergeFrom(from._internal_start_result());
      break;
    }
    case kAdvertisingSet: {
      _internal_mutable_advertising_set()->::qaul::sys::ble::BleAdvertisingSet::MergeFrom(from._internal_advertising_set());
      break;
    }
    case kAdvertisingSend: {
      _internal_mutable_advertising_send()->::qaul::sys::ble::BleAdvertisingSend::MergeFrom(from._internal_advertising_send());
      break;
    }
    case kAdvertisingReceived: {
      _internal_mutable_advertising_received()->::qaul::sys::ble::BleAdvertisingReceived::MergeFrom(from._internal_advertising_received());
      break;
    }
    case kDirectSend: {
      _internal_mutable_direct_send()->::qaul::sys::ble::BleDirectSend::MergeFrom(from._internal_direct_send());
      break;
    }
    case kDirectReceived: {
      _internal_mutable_direct_received()->::qaul::sys::ble::BleDirectReceived::MergeFrom(from._internal_direct_received());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ble::CopyFrom(const Ble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.Ble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ble::IsInitialized() const {
  return true;
}

void Ble::InternalSwap(Ble* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ble::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[0]);
}

// ===================================================================

class BleInfoRequest::_Internal {
 public:
};

BleInfoRequest::BleInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleInfoRequest)
}
BleInfoRequest::BleInfoRequest(const BleInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BleInfoRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[1]);
}

// ===================================================================

class BleInfoResponse::_Internal {
 public:
};

BleInfoResponse::BleInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  device_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleInfoResponse)
}
BleInfoResponse::BleInfoResponse(const BleInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      device_(from.device_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleInfoResponse)
}

inline void BleInfoResponse::SharedCtor() {
}

BleInfoResponse::~BleInfoResponse() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleInfoResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BleInfoResponse::ArenaDtor(void* object) {
  BleInfoResponse* _this = reinterpret_cast< BleInfoResponse* >(object);
  (void)_this;
}
void BleInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .qaul.sys.ble.BleDeviceInfo device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_device(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .qaul.sys.ble.BleDeviceInfo device = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_device_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_device(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleInfoResponse)
  return target;
}

size_t BleInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.sys.ble.BleDeviceInfo device = 1;
  total_size += 1UL * this->_internal_device_size();
  for (const auto& msg : this->device_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleInfoResponse::GetClassData() const { return &_class_data_; }

void BleInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleInfoResponse *>(to)->MergeFrom(
      static_cast<const BleInfoResponse &>(from));
}


void BleInfoResponse::MergeFrom(const BleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleInfoResponse::CopyFrom(const BleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleInfoResponse::IsInitialized() const {
  return true;
}

void BleInfoResponse::InternalSwap(BleInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  device_.InternalSwap(&other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BleInfoResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[2]);
}

// ===================================================================

class BleDeviceInfo::_Internal {
 public:
};

BleDeviceInfo::BleDeviceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleDeviceInfo)
}
BleDeviceInfo::BleDeviceInfo(const BleDeviceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&powered_, &from.powered_,
    static_cast<size_t>(reinterpret_cast<char*>(&le_audio_) -
    reinterpret_cast<char*>(&powered_)) + sizeof(le_audio_));
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleDeviceInfo)
}

inline void BleDeviceInfo::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&powered_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&le_audio_) -
    reinterpret_cast<char*>(&powered_)) + sizeof(le_audio_));
}

BleDeviceInfo::~BleDeviceInfo() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleDeviceInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleDeviceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleDeviceInfo::ArenaDtor(void* object) {
  BleDeviceInfo* _this = reinterpret_cast< BleDeviceInfo* >(object);
  (void)_this;
}
void BleDeviceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleDeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleDeviceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  ::memset(&powered_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&le_audio_) -
      reinterpret_cast<char*>(&powered_)) + sizeof(le_audio_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleDeviceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "qaul.sys.ble.BleDeviceInfo.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "qaul.sys.ble.BleDeviceInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool powered = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          powered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ble_support = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ble_support_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool adv_251 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          adv_251_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool adv_extended = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          adv_extended_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 adv_extended_bytes = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          adv_extended_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool adv_1m = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          adv_1m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool adv_2m = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          adv_2m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool adv_coded = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          adv_coded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool le_audio = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          le_audio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleDeviceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleDeviceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.sys.ble.BleDeviceInfo.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.sys.ble.BleDeviceInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bool powered = 3;
  if (this->_internal_powered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_powered(), target);
  }

  // bool ble_support = 4;
  if (this->_internal_ble_support() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_ble_support(), target);
  }

  // bool adv_251 = 7;
  if (this->_internal_adv_251() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_adv_251(), target);
  }

  // bool adv_extended = 8;
  if (this->_internal_adv_extended() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_adv_extended(), target);
  }

  // uint32 adv_extended_bytes = 9;
  if (this->_internal_adv_extended_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_adv_extended_bytes(), target);
  }

  // bool adv_1m = 10;
  if (this->_internal_adv_1m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_adv_1m(), target);
  }

  // bool adv_2m = 11;
  if (this->_internal_adv_2m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_adv_2m(), target);
  }

  // bool adv_coded = 12;
  if (this->_internal_adv_coded() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_adv_coded(), target);
  }

  // bool le_audio = 13;
  if (this->_internal_le_audio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_le_audio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleDeviceInfo)
  return target;
}

size_t BleDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleDeviceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool powered = 3;
  if (this->_internal_powered() != 0) {
    total_size += 1 + 1;
  }

  // bool ble_support = 4;
  if (this->_internal_ble_support() != 0) {
    total_size += 1 + 1;
  }

  // bool adv_251 = 7;
  if (this->_internal_adv_251() != 0) {
    total_size += 1 + 1;
  }

  // bool adv_extended = 8;
  if (this->_internal_adv_extended() != 0) {
    total_size += 1 + 1;
  }

  // uint32 adv_extended_bytes = 9;
  if (this->_internal_adv_extended_bytes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_adv_extended_bytes());
  }

  // bool adv_1m = 10;
  if (this->_internal_adv_1m() != 0) {
    total_size += 1 + 1;
  }

  // bool adv_2m = 11;
  if (this->_internal_adv_2m() != 0) {
    total_size += 1 + 1;
  }

  // bool adv_coded = 12;
  if (this->_internal_adv_coded() != 0) {
    total_size += 1 + 1;
  }

  // bool le_audio = 13;
  if (this->_internal_le_audio() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleDeviceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleDeviceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleDeviceInfo::GetClassData() const { return &_class_data_; }

void BleDeviceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleDeviceInfo *>(to)->MergeFrom(
      static_cast<const BleDeviceInfo &>(from));
}


void BleDeviceInfo::MergeFrom(const BleDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_powered() != 0) {
    _internal_set_powered(from._internal_powered());
  }
  if (from._internal_ble_support() != 0) {
    _internal_set_ble_support(from._internal_ble_support());
  }
  if (from._internal_adv_251() != 0) {
    _internal_set_adv_251(from._internal_adv_251());
  }
  if (from._internal_adv_extended() != 0) {
    _internal_set_adv_extended(from._internal_adv_extended());
  }
  if (from._internal_adv_extended_bytes() != 0) {
    _internal_set_adv_extended_bytes(from._internal_adv_extended_bytes());
  }
  if (from._internal_adv_1m() != 0) {
    _internal_set_adv_1m(from._internal_adv_1m());
  }
  if (from._internal_adv_2m() != 0) {
    _internal_set_adv_2m(from._internal_adv_2m());
  }
  if (from._internal_adv_coded() != 0) {
    _internal_set_adv_coded(from._internal_adv_coded());
  }
  if (from._internal_le_audio() != 0) {
    _internal_set_le_audio(from._internal_le_audio());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleDeviceInfo::CopyFrom(const BleDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleDeviceInfo::IsInitialized() const {
  return true;
}

void BleDeviceInfo::InternalSwap(BleDeviceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BleDeviceInfo, le_audio_)
      + sizeof(BleDeviceInfo::le_audio_)
      - PROTOBUF_FIELD_OFFSET(BleDeviceInfo, powered_)>(
          reinterpret_cast<char*>(&powered_),
          reinterpret_cast<char*>(&other->powered_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BleDeviceInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[3]);
}

// ===================================================================

class BleStartRequest::_Internal {
 public:
};

BleStartRequest::BleStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleStartRequest)
}
BleStartRequest::BleStartRequest(const BleStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleStartRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleStartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleStartRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BleStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[4]);
}

// ===================================================================

class BleStartResult::_Internal {
 public:
};

BleStartResult::BleStartResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleStartResult)
}
BleStartResult::BleStartResult(const BleStartResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    error_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error_message(), 
      GetArenaForAllocation());
  }
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&no_rights_) -
    reinterpret_cast<char*>(&success_)) + sizeof(no_rights_));
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleStartResult)
}

inline void BleStartResult::SharedCtor() {
error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&success_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&no_rights_) -
    reinterpret_cast<char*>(&success_)) + sizeof(no_rights_));
}

BleStartResult::~BleStartResult() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleStartResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleStartResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleStartResult::ArenaDtor(void* object) {
  BleStartResult* _this = reinterpret_cast< BleStartResult* >(object);
  (void)_this;
}
void BleStartResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleStartResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleStartResult::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleStartResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty();
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_rights_) -
      reinterpret_cast<char*>(&success_)) + sizeof(no_rights_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleStartResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "qaul.sys.ble.BleStartResult.error_message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool unknonw_error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          unknonw_error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_rights = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          no_rights_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleStartResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleStartResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.sys.ble.BleStartResult.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // bool unknonw_error = 3;
  if (this->_internal_unknonw_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_unknonw_error(), target);
  }

  // bool no_rights = 4;
  if (this->_internal_no_rights() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_no_rights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleStartResult)
  return target;
}

size_t BleStartResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleStartResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  // bool unknonw_error = 3;
  if (this->_internal_unknonw_error() != 0) {
    total_size += 1 + 1;
  }

  // bool no_rights = 4;
  if (this->_internal_no_rights() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleStartResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleStartResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleStartResult::GetClassData() const { return &_class_data_; }

void BleStartResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleStartResult *>(to)->MergeFrom(
      static_cast<const BleStartResult &>(from));
}


void BleStartResult::MergeFrom(const BleStartResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleStartResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  if (from._internal_unknonw_error() != 0) {
    _internal_set_unknonw_error(from._internal_unknonw_error());
  }
  if (from._internal_no_rights() != 0) {
    _internal_set_no_rights(from._internal_no_rights());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleStartResult::CopyFrom(const BleStartResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleStartResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleStartResult::IsInitialized() const {
  return true;
}

void BleStartResult::InternalSwap(BleStartResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_message_, lhs_arena,
      &other->error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BleStartResult, no_rights_)
      + sizeof(BleStartResult::no_rights_)
      - PROTOBUF_FIELD_OFFSET(BleStartResult, success_)>(
          reinterpret_cast<char*>(&success_),
          reinterpret_cast<char*>(&other->success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BleStartResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[5]);
}

// ===================================================================

class BleAdvertisingSet::_Internal {
 public:
};

BleAdvertisingSet::BleAdvertisingSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleAdvertisingSet)
}
BleAdvertisingSet::BleAdvertisingSet(const BleAdvertisingSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleAdvertisingSet)
}

inline void BleAdvertisingSet::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BleAdvertisingSet::~BleAdvertisingSet() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleAdvertisingSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleAdvertisingSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleAdvertisingSet::ArenaDtor(void* object) {
  BleAdvertisingSet* _this = reinterpret_cast< BleAdvertisingSet* >(object);
  (void)_this;
}
void BleAdvertisingSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleAdvertisingSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleAdvertisingSet::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleAdvertisingSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleAdvertisingSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleAdvertisingSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleAdvertisingSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleAdvertisingSet)
  return target;
}

size_t BleAdvertisingSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleAdvertisingSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleAdvertisingSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleAdvertisingSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleAdvertisingSet::GetClassData() const { return &_class_data_; }

void BleAdvertisingSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleAdvertisingSet *>(to)->MergeFrom(
      static_cast<const BleAdvertisingSet &>(from));
}


void BleAdvertisingSet::MergeFrom(const BleAdvertisingSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleAdvertisingSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleAdvertisingSet::CopyFrom(const BleAdvertisingSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleAdvertisingSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleAdvertisingSet::IsInitialized() const {
  return true;
}

void BleAdvertisingSet::InternalSwap(BleAdvertisingSet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BleAdvertisingSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[6]);
}

// ===================================================================

class BleAdvertisingSend::_Internal {
 public:
};

BleAdvertisingSend::BleAdvertisingSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleAdvertisingSend)
}
BleAdvertisingSend::BleAdvertisingSend(const BleAdvertisingSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleAdvertisingSend)
}

inline void BleAdvertisingSend::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mode_ = 0;
}

BleAdvertisingSend::~BleAdvertisingSend() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleAdvertisingSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleAdvertisingSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleAdvertisingSend::ArenaDtor(void* object) {
  BleAdvertisingSend* _this = reinterpret_cast< BleAdvertisingSend* >(object);
  (void)_this;
}
void BleAdvertisingSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleAdvertisingSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleAdvertisingSend::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleAdvertisingSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleAdvertisingSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.sys.ble.BleMode mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::qaul::sys::ble::BleMode>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleAdvertisingSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleAdvertisingSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.sys.ble.BleMode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mode(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleAdvertisingSend)
  return target;
}

size_t BleAdvertisingSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleAdvertisingSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .qaul.sys.ble.BleMode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleAdvertisingSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleAdvertisingSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleAdvertisingSend::GetClassData() const { return &_class_data_; }

void BleAdvertisingSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleAdvertisingSend *>(to)->MergeFrom(
      static_cast<const BleAdvertisingSend &>(from));
}


void BleAdvertisingSend::MergeFrom(const BleAdvertisingSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleAdvertisingSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleAdvertisingSend::CopyFrom(const BleAdvertisingSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleAdvertisingSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleAdvertisingSend::IsInitialized() const {
  return true;
}

void BleAdvertisingSend::InternalSwap(BleAdvertisingSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(mode_, other->mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BleAdvertisingSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[7]);
}

// ===================================================================

class BleAdvertisingReceived::_Internal {
 public:
};

BleAdvertisingReceived::BleAdvertisingReceived(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleAdvertisingReceived)
}
BleAdvertisingReceived::BleAdvertisingReceived(const BleAdvertisingReceived& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&rssi_, &from.rssi_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleAdvertisingReceived)
}

inline void BleAdvertisingReceived::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rssi_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
}

BleAdvertisingReceived::~BleAdvertisingReceived() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleAdvertisingReceived)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleAdvertisingReceived::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleAdvertisingReceived::ArenaDtor(void* object) {
  BleAdvertisingReceived* _this = reinterpret_cast< BleAdvertisingReceived* >(object);
  (void)_this;
}
void BleAdvertisingReceived::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleAdvertisingReceived::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleAdvertisingReceived::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleAdvertisingReceived)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  ::memset(&rssi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleAdvertisingReceived::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 rssi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rssi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleMode mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::qaul::sys::ble::BleMode>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleAdvertisingReceived::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleAdvertisingReceived)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int32 rssi = 2;
  if (this->_internal_rssi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rssi(), target);
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_mode(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleAdvertisingReceived)
  return target;
}

size_t BleAdvertisingReceived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleAdvertisingReceived)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 rssi = 2;
  if (this->_internal_rssi() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_rssi());
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleAdvertisingReceived::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleAdvertisingReceived::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleAdvertisingReceived::GetClassData() const { return &_class_data_; }

void BleAdvertisingReceived::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleAdvertisingReceived *>(to)->MergeFrom(
      static_cast<const BleAdvertisingReceived &>(from));
}


void BleAdvertisingReceived::MergeFrom(const BleAdvertisingReceived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleAdvertisingReceived)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_rssi() != 0) {
    _internal_set_rssi(from._internal_rssi());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleAdvertisingReceived::CopyFrom(const BleAdvertisingReceived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleAdvertisingReceived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleAdvertisingReceived::IsInitialized() const {
  return true;
}

void BleAdvertisingReceived::InternalSwap(BleAdvertisingReceived* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BleAdvertisingReceived, mode_)
      + sizeof(BleAdvertisingReceived::mode_)
      - PROTOBUF_FIELD_OFFSET(BleAdvertisingReceived, rssi_)>(
          reinterpret_cast<char*>(&rssi_),
          reinterpret_cast<char*>(&other->rssi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BleAdvertisingReceived::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[8]);
}

// ===================================================================

class BleDirectSend::_Internal {
 public:
};

BleDirectSend::BleDirectSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleDirectSend)
}
BleDirectSend::BleDirectSend(const BleDirectSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    to_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to().empty()) {
    to_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_to(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleDirectSend)
}

inline void BleDirectSend::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
to_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  to_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mode_ = 0;
}

BleDirectSend::~BleDirectSend() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleDirectSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleDirectSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleDirectSend::ArenaDtor(void* object) {
  BleDirectSend* _this = reinterpret_cast< BleDirectSend* >(object);
  (void)_this;
}
void BleDirectSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleDirectSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleDirectSend::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleDirectSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  to_.ClearToEmpty();
  data_.ClearToEmpty();
  mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleDirectSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleMode mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::qaul::sys::ble::BleMode>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleDirectSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleDirectSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bytes to = 2;
  if (!this->_internal_to().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_to(), target);
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_mode(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleDirectSend)
  return target;
}

size_t BleDirectSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleDirectSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // bytes to = 2;
  if (!this->_internal_to().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_to());
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleDirectSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleDirectSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleDirectSend::GetClassData() const { return &_class_data_; }

void BleDirectSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleDirectSend *>(to)->MergeFrom(
      static_cast<const BleDirectSend &>(from));
}


void BleDirectSend::MergeFrom(const BleDirectSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleDirectSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_to().empty()) {
    _internal_set_to(from._internal_to());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleDirectSend::CopyFrom(const BleDirectSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleDirectSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleDirectSend::IsInitialized() const {
  return true;
}

void BleDirectSend::InternalSwap(BleDirectSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &to_, lhs_arena,
      &other->to_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(mode_, other->mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BleDirectSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[9]);
}

// ===================================================================

class BleDirectSendResult::_Internal {
 public:
};

BleDirectSendResult::BleDirectSendResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleDirectSendResult)
}
BleDirectSendResult::BleDirectSendResult(const BleDirectSendResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    error_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error_message(), 
      GetArenaForAllocation());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleDirectSendResult)
}

inline void BleDirectSendResult::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
success_ = false;
}

BleDirectSendResult::~BleDirectSendResult() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleDirectSendResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleDirectSendResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleDirectSendResult::ArenaDtor(void* object) {
  BleDirectSendResult* _this = reinterpret_cast< BleDirectSendResult* >(object);
  (void)_this;
}
void BleDirectSendResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleDirectSendResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleDirectSendResult::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleDirectSendResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  error_message_.ClearToEmpty();
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleDirectSendResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "qaul.sys.ble.BleDirectSendResult.error_message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleDirectSendResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleDirectSendResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.sys.ble.BleDirectSendResult.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleDirectSendResult)
  return target;
}

size_t BleDirectSendResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleDirectSendResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleDirectSendResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleDirectSendResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleDirectSendResult::GetClassData() const { return &_class_data_; }

void BleDirectSendResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleDirectSendResult *>(to)->MergeFrom(
      static_cast<const BleDirectSendResult &>(from));
}


void BleDirectSendResult::MergeFrom(const BleDirectSendResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleDirectSendResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_error_message().empty()) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleDirectSendResult::CopyFrom(const BleDirectSendResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleDirectSendResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleDirectSendResult::IsInitialized() const {
  return true;
}

void BleDirectSendResult::InternalSwap(BleDirectSendResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_message_, lhs_arena,
      &other->error_message_, rhs_arena
  );
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BleDirectSendResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[10]);
}

// ===================================================================

class BleDirectReceived::_Internal {
 public:
};

BleDirectReceived::BleDirectReceived(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.sys.ble.BleDirectReceived)
}
BleDirectReceived::BleDirectReceived(const BleDirectReceived& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    from_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from().empty()) {
    from_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_from(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&rssi_, &from.rssi_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:qaul.sys.ble.BleDirectReceived)
}

inline void BleDirectReceived::SharedCtor() {
from_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  from_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rssi_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
}

BleDirectReceived::~BleDirectReceived() {
  // @@protoc_insertion_point(destructor:qaul.sys.ble.BleDirectReceived)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BleDirectReceived::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  from_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BleDirectReceived::ArenaDtor(void* object) {
  BleDirectReceived* _this = reinterpret_cast< BleDirectReceived* >(object);
  (void)_this;
}
void BleDirectReceived::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BleDirectReceived::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BleDirectReceived::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.sys.ble.BleDirectReceived)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmpty();
  data_.ClearToEmpty();
  ::memset(&rssi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&rssi_)) + sizeof(mode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BleDirectReceived::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 rssi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rssi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.sys.ble.BleMode mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::qaul::sys::ble::BleMode>(val));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BleDirectReceived::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.sys.ble.BleDirectReceived)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes from = 1;
  if (!this->_internal_from().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_from(), target);
  }

  // int32 rssi = 2;
  if (this->_internal_rssi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rssi(), target);
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_mode(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.sys.ble.BleDirectReceived)
  return target;
}

size_t BleDirectReceived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.sys.ble.BleDirectReceived)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes from = 1;
  if (!this->_internal_from().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_from());
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 rssi = 2;
  if (this->_internal_rssi() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_rssi());
  }

  // .qaul.sys.ble.BleMode mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BleDirectReceived::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BleDirectReceived::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BleDirectReceived::GetClassData() const { return &_class_data_; }

void BleDirectReceived::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BleDirectReceived *>(to)->MergeFrom(
      static_cast<const BleDirectReceived &>(from));
}


void BleDirectReceived::MergeFrom(const BleDirectReceived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.sys.ble.BleDirectReceived)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from().empty()) {
    _internal_set_from(from._internal_from());
  }
  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_rssi() != 0) {
    _internal_set_rssi(from._internal_rssi());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BleDirectReceived::CopyFrom(const BleDirectReceived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.sys.ble.BleDirectReceived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BleDirectReceived::IsInitialized() const {
  return true;
}

void BleDirectReceived::InternalSwap(BleDirectReceived* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &from_, lhs_arena,
      &other->from_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BleDirectReceived, mode_)
      + sizeof(BleDirectReceived::mode_)
      - PROTOBUF_FIELD_OFFSET(BleDirectReceived, rssi_)>(
          reinterpret_cast<char*>(&rssi_),
          reinterpret_cast<char*>(&other->rssi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BleDirectReceived::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_getter, &descriptor_table_connections_2fble_2fmanager_2fble_2eproto_once,
      file_level_metadata_connections_2fble_2fmanager_2fble_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ble
}  // namespace sys
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::Ble* Arena::CreateMaybeMessage< ::qaul::sys::ble::Ble >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::Ble >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleInfoRequest* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleInfoResponse* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleDeviceInfo* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleDeviceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleDeviceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleStartRequest* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleStartResult* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleStartResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleStartResult >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleAdvertisingSet* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleAdvertisingSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleAdvertisingSet >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleAdvertisingSend* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleAdvertisingSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleAdvertisingSend >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleAdvertisingReceived* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleAdvertisingReceived >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleAdvertisingReceived >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleDirectSend* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleDirectSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleDirectSend >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleDirectSendResult* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleDirectSendResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleDirectSendResult >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::sys::ble::BleDirectReceived* Arena::CreateMaybeMessage< ::qaul::sys::ble::BleDirectReceived >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::sys::ble::BleDirectReceived >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
