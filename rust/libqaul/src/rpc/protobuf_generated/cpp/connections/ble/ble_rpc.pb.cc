// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connections/ble/ble_rpc.proto

#include "connections/ble/ble_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace qaul {
namespace rpc {
namespace ble {
PROTOBUF_CONSTEXPR Ble::Ble(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct BleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BleDefaultTypeInternal() {}
  union {
    Ble _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BleDefaultTypeInternal _Ble_default_instance_;
PROTOBUF_CONSTEXPR InfoRequest::InfoRequest(
    ::_pbi::ConstantInitialized) {}
struct InfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoRequestDefaultTypeInternal() {}
  union {
    InfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoRequestDefaultTypeInternal _InfoRequest_default_instance_;
PROTOBUF_CONSTEXPR InfoResponse::InfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.small_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_info_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoResponseDefaultTypeInternal() {}
  union {
    InfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoResponseDefaultTypeInternal _InfoResponse_default_instance_;
PROTOBUF_CONSTEXPR StartRequest::StartRequest(
    ::_pbi::ConstantInitialized) {}
struct StartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartRequestDefaultTypeInternal() {}
  union {
    StartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartRequestDefaultTypeInternal _StartRequest_default_instance_;
PROTOBUF_CONSTEXPR StopRequest::StopRequest(
    ::_pbi::ConstantInitialized) {}
struct StopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRequestDefaultTypeInternal() {}
  union {
    StopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRequestDefaultTypeInternal _StopRequest_default_instance_;
PROTOBUF_CONSTEXPR DiscoveredRequest::DiscoveredRequest(
    ::_pbi::ConstantInitialized) {}
struct DiscoveredRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveredRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveredRequestDefaultTypeInternal() {}
  union {
    DiscoveredRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveredRequestDefaultTypeInternal _DiscoveredRequest_default_instance_;
PROTOBUF_CONSTEXPR DiscoveredResponse::DiscoveredResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nodes_count_)*/0u
  , /*decltype(_impl_.to_confirm_count_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiscoveredResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveredResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveredResponseDefaultTypeInternal() {}
  union {
    DiscoveredResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveredResponseDefaultTypeInternal _DiscoveredResponse_default_instance_;
PROTOBUF_CONSTEXPR RightsRequest::RightsRequest(
    ::_pbi::ConstantInitialized) {}
struct RightsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RightsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RightsRequestDefaultTypeInternal() {}
  union {
    RightsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RightsRequestDefaultTypeInternal _RightsRequest_default_instance_;
PROTOBUF_CONSTEXPR RightsResult::RightsResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rights_granted_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RightsResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RightsResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RightsResultDefaultTypeInternal() {}
  union {
    RightsResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RightsResultDefaultTypeInternal _RightsResult_default_instance_;
}  // namespace ble
}  // namespace rpc
}  // namespace qaul
static ::_pb::Metadata file_level_metadata_connections_2fble_2fble_5frpc_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_connections_2fble_2fble_5frpc_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_connections_2fble_2fble_5frpc_2eproto = nullptr;

const uint32_t TableStruct_connections_2fble_2fble_5frpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::Ble, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::Ble, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::Ble, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::InfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::InfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::InfoResponse, _impl_.small_id_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::InfoResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::InfoResponse, _impl_.device_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::StartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::DiscoveredRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::DiscoveredResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::DiscoveredResponse, _impl_.nodes_count_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::DiscoveredResponse, _impl_.to_confirm_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::RightsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::RightsResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::ble::RightsResult, _impl_.rights_granted_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::rpc::ble::Ble)},
  { 15, -1, -1, sizeof(::qaul::rpc::ble::InfoRequest)},
  { 21, -1, -1, sizeof(::qaul::rpc::ble::InfoResponse)},
  { 30, -1, -1, sizeof(::qaul::rpc::ble::StartRequest)},
  { 36, -1, -1, sizeof(::qaul::rpc::ble::StopRequest)},
  { 42, -1, -1, sizeof(::qaul::rpc::ble::DiscoveredRequest)},
  { 48, -1, -1, sizeof(::qaul::rpc::ble::DiscoveredResponse)},
  { 56, -1, -1, sizeof(::qaul::rpc::ble::RightsRequest)},
  { 62, -1, -1, sizeof(::qaul::rpc::ble::RightsResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::qaul::rpc::ble::_Ble_default_instance_._instance,
  &::qaul::rpc::ble::_InfoRequest_default_instance_._instance,
  &::qaul::rpc::ble::_InfoResponse_default_instance_._instance,
  &::qaul::rpc::ble::_StartRequest_default_instance_._instance,
  &::qaul::rpc::ble::_StopRequest_default_instance_._instance,
  &::qaul::rpc::ble::_DiscoveredRequest_default_instance_._instance,
  &::qaul::rpc::ble::_DiscoveredResponse_default_instance_._instance,
  &::qaul::rpc::ble::_RightsRequest_default_instance_._instance,
  &::qaul::rpc::ble::_RightsResult_default_instance_._instance,
};

const char descriptor_table_protodef_connections_2fble_2fble_5frpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035connections/ble/ble_rpc.proto\022\014qaul.rp"
  "c.ble\"\314\003\n\003Ble\0221\n\014info_request\030\001 \001(\0132\031.qa"
  "ul.rpc.ble.InfoRequestH\000\0223\n\rinfo_respons"
  "e\030\002 \001(\0132\032.qaul.rpc.ble.InfoResponseH\000\0223\n"
  "\rstart_request\030\003 \001(\0132\032.qaul.rpc.ble.Star"
  "tRequestH\000\0221\n\014stop_request\030\004 \001(\0132\031.qaul."
  "rpc.ble.StopRequestH\000\022=\n\022discovered_requ"
  "est\030\005 \001(\0132\037.qaul.rpc.ble.DiscoveredReque"
  "stH\000\022\?\n\023discovered_response\030\006 \001(\0132 .qaul"
  ".rpc.ble.DiscoveredResponseH\000\0225\n\016rights_"
  "request\030\007 \001(\0132\033.qaul.rpc.ble.RightsReque"
  "stH\000\0223\n\rrights_result\030\010 \001(\0132\032.qaul.rpc.b"
  "le.RightsResultH\000B\t\n\007message\"\r\n\013InfoRequ"
  "est\"E\n\014InfoResponse\022\020\n\010small_id\030\001 \001(\014\022\016\n"
  "\006status\030\002 \001(\t\022\023\n\013device_info\030\003 \001(\014\"\016\n\014St"
  "artRequest\"\r\n\013StopRequest\"\023\n\021DiscoveredR"
  "equest\"C\n\022DiscoveredResponse\022\023\n\013nodes_co"
  "unt\030\001 \001(\r\022\030\n\020to_confirm_count\030\002 \001(\r\"\017\n\rR"
  "ightsRequest\"&\n\014RightsResult\022\026\n\016rights_g"
  "ranted\030\001 \001(\010b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_connections_2fble_2fble_5frpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_connections_2fble_2fble_5frpc_2eproto = {
    false, false, 780, descriptor_table_protodef_connections_2fble_2fble_5frpc_2eproto,
    "connections/ble/ble_rpc.proto",
    &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_connections_2fble_2fble_5frpc_2eproto::offsets,
    file_level_metadata_connections_2fble_2fble_5frpc_2eproto, file_level_enum_descriptors_connections_2fble_2fble_5frpc_2eproto,
    file_level_service_descriptors_connections_2fble_2fble_5frpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter() {
  return &descriptor_table_connections_2fble_2fble_5frpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_connections_2fble_2fble_5frpc_2eproto(&descriptor_table_connections_2fble_2fble_5frpc_2eproto);
namespace qaul {
namespace rpc {
namespace ble {

// ===================================================================

class Ble::_Internal {
 public:
  static const ::qaul::rpc::ble::InfoRequest& info_request(const Ble* msg);
  static const ::qaul::rpc::ble::InfoResponse& info_response(const Ble* msg);
  static const ::qaul::rpc::ble::StartRequest& start_request(const Ble* msg);
  static const ::qaul::rpc::ble::StopRequest& stop_request(const Ble* msg);
  static const ::qaul::rpc::ble::DiscoveredRequest& discovered_request(const Ble* msg);
  static const ::qaul::rpc::ble::DiscoveredResponse& discovered_response(const Ble* msg);
  static const ::qaul::rpc::ble::RightsRequest& rights_request(const Ble* msg);
  static const ::qaul::rpc::ble::RightsResult& rights_result(const Ble* msg);
};

const ::qaul::rpc::ble::InfoRequest&
Ble::_Internal::info_request(const Ble* msg) {
  return *msg->_impl_.message_.info_request_;
}
const ::qaul::rpc::ble::InfoResponse&
Ble::_Internal::info_response(const Ble* msg) {
  return *msg->_impl_.message_.info_response_;
}
const ::qaul::rpc::ble::StartRequest&
Ble::_Internal::start_request(const Ble* msg) {
  return *msg->_impl_.message_.start_request_;
}
const ::qaul::rpc::ble::StopRequest&
Ble::_Internal::stop_request(const Ble* msg) {
  return *msg->_impl_.message_.stop_request_;
}
const ::qaul::rpc::ble::DiscoveredRequest&
Ble::_Internal::discovered_request(const Ble* msg) {
  return *msg->_impl_.message_.discovered_request_;
}
const ::qaul::rpc::ble::DiscoveredResponse&
Ble::_Internal::discovered_response(const Ble* msg) {
  return *msg->_impl_.message_.discovered_response_;
}
const ::qaul::rpc::ble::RightsRequest&
Ble::_Internal::rights_request(const Ble* msg) {
  return *msg->_impl_.message_.rights_request_;
}
const ::qaul::rpc::ble::RightsResult&
Ble::_Internal::rights_result(const Ble* msg) {
  return *msg->_impl_.message_.rights_result_;
}
void Ble::set_allocated_info_request(::qaul::rpc::ble::InfoRequest* info_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (info_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info_request);
    if (message_arena != submessage_arena) {
      info_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_request, submessage_arena);
    }
    set_has_info_request();
    _impl_.message_.info_request_ = info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.info_request)
}
void Ble::set_allocated_info_response(::qaul::rpc::ble::InfoResponse* info_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (info_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info_response);
    if (message_arena != submessage_arena) {
      info_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_response, submessage_arena);
    }
    set_has_info_response();
    _impl_.message_.info_response_ = info_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.info_response)
}
void Ble::set_allocated_start_request(::qaul::rpc::ble::StartRequest* start_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (start_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(start_request);
    if (message_arena != submessage_arena) {
      start_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_request, submessage_arena);
    }
    set_has_start_request();
    _impl_.message_.start_request_ = start_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.start_request)
}
void Ble::set_allocated_stop_request(::qaul::rpc::ble::StopRequest* stop_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (stop_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stop_request);
    if (message_arena != submessage_arena) {
      stop_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stop_request, submessage_arena);
    }
    set_has_stop_request();
    _impl_.message_.stop_request_ = stop_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.stop_request)
}
void Ble::set_allocated_discovered_request(::qaul::rpc::ble::DiscoveredRequest* discovered_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (discovered_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(discovered_request);
    if (message_arena != submessage_arena) {
      discovered_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, discovered_request, submessage_arena);
    }
    set_has_discovered_request();
    _impl_.message_.discovered_request_ = discovered_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.discovered_request)
}
void Ble::set_allocated_discovered_response(::qaul::rpc::ble::DiscoveredResponse* discovered_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (discovered_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(discovered_response);
    if (message_arena != submessage_arena) {
      discovered_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, discovered_response, submessage_arena);
    }
    set_has_discovered_response();
    _impl_.message_.discovered_response_ = discovered_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.discovered_response)
}
void Ble::set_allocated_rights_request(::qaul::rpc::ble::RightsRequest* rights_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (rights_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(rights_request);
    if (message_arena != submessage_arena) {
      rights_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rights_request, submessage_arena);
    }
    set_has_rights_request();
    _impl_.message_.rights_request_ = rights_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.rights_request)
}
void Ble::set_allocated_rights_result(::qaul::rpc::ble::RightsResult* rights_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (rights_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(rights_result);
    if (message_arena != submessage_arena) {
      rights_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rights_result, submessage_arena);
    }
    set_has_rights_result();
    _impl_.message_.rights_result_ = rights_result;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.ble.Ble.rights_result)
}
Ble::Ble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.Ble)
}
Ble::Ble(const Ble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Ble* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kInfoRequest: {
      _this->_internal_mutable_info_request()->::qaul::rpc::ble::InfoRequest::MergeFrom(
          from._internal_info_request());
      break;
    }
    case kInfoResponse: {
      _this->_internal_mutable_info_response()->::qaul::rpc::ble::InfoResponse::MergeFrom(
          from._internal_info_response());
      break;
    }
    case kStartRequest: {
      _this->_internal_mutable_start_request()->::qaul::rpc::ble::StartRequest::MergeFrom(
          from._internal_start_request());
      break;
    }
    case kStopRequest: {
      _this->_internal_mutable_stop_request()->::qaul::rpc::ble::StopRequest::MergeFrom(
          from._internal_stop_request());
      break;
    }
    case kDiscoveredRequest: {
      _this->_internal_mutable_discovered_request()->::qaul::rpc::ble::DiscoveredRequest::MergeFrom(
          from._internal_discovered_request());
      break;
    }
    case kDiscoveredResponse: {
      _this->_internal_mutable_discovered_response()->::qaul::rpc::ble::DiscoveredResponse::MergeFrom(
          from._internal_discovered_response());
      break;
    }
    case kRightsRequest: {
      _this->_internal_mutable_rights_request()->::qaul::rpc::ble::RightsRequest::MergeFrom(
          from._internal_rights_request());
      break;
    }
    case kRightsResult: {
      _this->_internal_mutable_rights_result()->::qaul::rpc::ble::RightsResult::MergeFrom(
          from._internal_rights_result());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.Ble)
}

inline void Ble::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message();
}

Ble::~Ble() {
  // @@protoc_insertion_point(destructor:qaul.rpc.ble.Ble)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ble::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Ble::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ble::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.rpc.ble.Ble)
  switch (message_case()) {
    case kInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.info_request_;
      }
      break;
    }
    case kInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.info_response_;
      }
      break;
    }
    case kStartRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.start_request_;
      }
      break;
    }
    case kStopRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.stop_request_;
      }
      break;
    }
    case kDiscoveredRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.discovered_request_;
      }
      break;
    }
    case kDiscoveredResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.discovered_response_;
      }
      break;
    }
    case kRightsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.rights_request_;
      }
      break;
    }
    case kRightsResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_.rights_result_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void Ble::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.ble.Ble)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ble::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.ble.InfoRequest info_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.InfoResponse info_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.StartRequest start_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.StopRequest stop_request = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stop_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.DiscoveredRequest discovered_request = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_discovered_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.DiscoveredResponse discovered_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_discovered_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.RightsRequest rights_request = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_rights_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.ble.RightsResult rights_result = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_rights_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ble::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.ble.Ble)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.ble.InfoRequest info_request = 1;
  if (_internal_has_info_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_request(this),
        _Internal::info_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.InfoResponse info_response = 2;
  if (_internal_has_info_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info_response(this),
        _Internal::info_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.StartRequest start_request = 3;
  if (_internal_has_start_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::start_request(this),
        _Internal::start_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.StopRequest stop_request = 4;
  if (_internal_has_stop_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::stop_request(this),
        _Internal::stop_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.DiscoveredRequest discovered_request = 5;
  if (_internal_has_discovered_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::discovered_request(this),
        _Internal::discovered_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.DiscoveredResponse discovered_response = 6;
  if (_internal_has_discovered_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::discovered_response(this),
        _Internal::discovered_response(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.RightsRequest rights_request = 7;
  if (_internal_has_rights_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::rights_request(this),
        _Internal::rights_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.ble.RightsResult rights_result = 8;
  if (_internal_has_rights_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::rights_result(this),
        _Internal::rights_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.ble.Ble)
  return target;
}

size_t Ble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.ble.Ble)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.rpc.ble.InfoRequest info_request = 1;
    case kInfoRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.info_request_);
      break;
    }
    // .qaul.rpc.ble.InfoResponse info_response = 2;
    case kInfoResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.info_response_);
      break;
    }
    // .qaul.rpc.ble.StartRequest start_request = 3;
    case kStartRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.start_request_);
      break;
    }
    // .qaul.rpc.ble.StopRequest stop_request = 4;
    case kStopRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.stop_request_);
      break;
    }
    // .qaul.rpc.ble.DiscoveredRequest discovered_request = 5;
    case kDiscoveredRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.discovered_request_);
      break;
    }
    // .qaul.rpc.ble.DiscoveredResponse discovered_response = 6;
    case kDiscoveredResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.discovered_response_);
      break;
    }
    // .qaul.rpc.ble.RightsRequest rights_request = 7;
    case kRightsRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.rights_request_);
      break;
    }
    // .qaul.rpc.ble.RightsResult rights_result = 8;
    case kRightsResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_.rights_result_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ble::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Ble::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ble::GetClassData() const { return &_class_data_; }


void Ble::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Ble*>(&to_msg);
  auto& from = static_cast<const Ble&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.ble.Ble)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kInfoRequest: {
      _this->_internal_mutable_info_request()->::qaul::rpc::ble::InfoRequest::MergeFrom(
          from._internal_info_request());
      break;
    }
    case kInfoResponse: {
      _this->_internal_mutable_info_response()->::qaul::rpc::ble::InfoResponse::MergeFrom(
          from._internal_info_response());
      break;
    }
    case kStartRequest: {
      _this->_internal_mutable_start_request()->::qaul::rpc::ble::StartRequest::MergeFrom(
          from._internal_start_request());
      break;
    }
    case kStopRequest: {
      _this->_internal_mutable_stop_request()->::qaul::rpc::ble::StopRequest::MergeFrom(
          from._internal_stop_request());
      break;
    }
    case kDiscoveredRequest: {
      _this->_internal_mutable_discovered_request()->::qaul::rpc::ble::DiscoveredRequest::MergeFrom(
          from._internal_discovered_request());
      break;
    }
    case kDiscoveredResponse: {
      _this->_internal_mutable_discovered_response()->::qaul::rpc::ble::DiscoveredResponse::MergeFrom(
          from._internal_discovered_response());
      break;
    }
    case kRightsRequest: {
      _this->_internal_mutable_rights_request()->::qaul::rpc::ble::RightsRequest::MergeFrom(
          from._internal_rights_request());
      break;
    }
    case kRightsResult: {
      _this->_internal_mutable_rights_result()->::qaul::rpc::ble::RightsResult::MergeFrom(
          from._internal_rights_result());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ble::CopyFrom(const Ble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.ble.Ble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ble::IsInitialized() const {
  return true;
}

void Ble::InternalSwap(Ble* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ble::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[0]);
}

// ===================================================================

class InfoRequest::_Internal {
 public:
};

InfoRequest::InfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  InfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.InfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[1]);
}

// ===================================================================

class InfoResponse::_Internal {
 public:
};

InfoResponse::InfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.small_id_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.device_info_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.small_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.small_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_small_id().empty()) {
    _this->_impl_.small_id_.Set(from._internal_small_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.device_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device_info().empty()) {
    _this->_impl_.device_info_.Set(from._internal_device_info(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.InfoResponse)
}

inline void InfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.small_id_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.device_info_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.small_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.small_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.device_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.ble.InfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.small_id_.Destroy();
  _impl_.status_.Destroy();
  _impl_.device_info_.Destroy();
}

void InfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.ble.InfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.small_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.device_info_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes small_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_small_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.ble.InfoResponse.status"));
        } else
          goto handle_unusual;
        continue;
      // bytes device_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_device_info();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.ble.InfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes small_id = 1;
  if (!this->_internal_small_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_small_id(), target);
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.ble.InfoResponse.status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_status(), target);
  }

  // bytes device_info = 3;
  if (!this->_internal_device_info().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_device_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.ble.InfoResponse)
  return target;
}

size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.ble.InfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes small_id = 1;
  if (!this->_internal_small_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_small_id());
  }

  // string status = 2;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // bytes device_info = 3;
  if (!this->_internal_device_info().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_device_info());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoResponse::GetClassData() const { return &_class_data_; }


void InfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InfoResponse*>(&to_msg);
  auto& from = static_cast<const InfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.ble.InfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_small_id().empty()) {
    _this->_internal_set_small_id(from._internal_small_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_device_info().empty()) {
    _this->_internal_set_device_info(from._internal_device_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.ble.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.small_id_, lhs_arena,
      &other->_impl_.small_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.device_info_, lhs_arena,
      &other->_impl_.device_info_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[2]);
}

// ===================================================================

class StartRequest::_Internal {
 public:
};

StartRequest::StartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.StartRequest)
}
StartRequest::StartRequest(const StartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StartRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.StartRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[3]);
}

// ===================================================================

class StopRequest::_Internal {
 public:
};

StopRequest::StopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StopRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.StopRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[4]);
}

// ===================================================================

class DiscoveredRequest::_Internal {
 public:
};

DiscoveredRequest::DiscoveredRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.DiscoveredRequest)
}
DiscoveredRequest::DiscoveredRequest(const DiscoveredRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DiscoveredRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.DiscoveredRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoveredRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoveredRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DiscoveredRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[5]);
}

// ===================================================================

class DiscoveredResponse::_Internal {
 public:
};

DiscoveredResponse::DiscoveredResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.DiscoveredResponse)
}
DiscoveredResponse::DiscoveredResponse(const DiscoveredResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DiscoveredResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_count_){}
    , decltype(_impl_.to_confirm_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.nodes_count_, &from._impl_.nodes_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.to_confirm_count_) -
    reinterpret_cast<char*>(&_impl_.nodes_count_)) + sizeof(_impl_.to_confirm_count_));
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.DiscoveredResponse)
}

inline void DiscoveredResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_count_){0u}
    , decltype(_impl_.to_confirm_count_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DiscoveredResponse::~DiscoveredResponse() {
  // @@protoc_insertion_point(destructor:qaul.rpc.ble.DiscoveredResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoveredResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DiscoveredResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DiscoveredResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.ble.DiscoveredResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.nodes_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.to_confirm_count_) -
      reinterpret_cast<char*>(&_impl_.nodes_count_)) + sizeof(_impl_.to_confirm_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoveredResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 nodes_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nodes_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 to_confirm_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.to_confirm_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoveredResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.ble.DiscoveredResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nodes_count = 1;
  if (this->_internal_nodes_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_nodes_count(), target);
  }

  // uint32 to_confirm_count = 2;
  if (this->_internal_to_confirm_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_to_confirm_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.ble.DiscoveredResponse)
  return target;
}

size_t DiscoveredResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.ble.DiscoveredResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 nodes_count = 1;
  if (this->_internal_nodes_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_nodes_count());
  }

  // uint32 to_confirm_count = 2;
  if (this->_internal_to_confirm_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_to_confirm_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoveredResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DiscoveredResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoveredResponse::GetClassData() const { return &_class_data_; }


void DiscoveredResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DiscoveredResponse*>(&to_msg);
  auto& from = static_cast<const DiscoveredResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.ble.DiscoveredResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nodes_count() != 0) {
    _this->_internal_set_nodes_count(from._internal_nodes_count());
  }
  if (from._internal_to_confirm_count() != 0) {
    _this->_internal_set_to_confirm_count(from._internal_to_confirm_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoveredResponse::CopyFrom(const DiscoveredResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.ble.DiscoveredResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveredResponse::IsInitialized() const {
  return true;
}

void DiscoveredResponse::InternalSwap(DiscoveredResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiscoveredResponse, _impl_.to_confirm_count_)
      + sizeof(DiscoveredResponse::_impl_.to_confirm_count_)
      - PROTOBUF_FIELD_OFFSET(DiscoveredResponse, _impl_.nodes_count_)>(
          reinterpret_cast<char*>(&_impl_.nodes_count_),
          reinterpret_cast<char*>(&other->_impl_.nodes_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoveredResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[6]);
}

// ===================================================================

class RightsRequest::_Internal {
 public:
};

RightsRequest::RightsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.RightsRequest)
}
RightsRequest::RightsRequest(const RightsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RightsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.RightsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RightsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RightsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RightsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[7]);
}

// ===================================================================

class RightsResult::_Internal {
 public:
};

RightsResult::RightsResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.ble.RightsResult)
}
RightsResult::RightsResult(const RightsResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RightsResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rights_granted_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.rights_granted_ = from._impl_.rights_granted_;
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.ble.RightsResult)
}

inline void RightsResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rights_granted_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RightsResult::~RightsResult() {
  // @@protoc_insertion_point(destructor:qaul.rpc.ble.RightsResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RightsResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RightsResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RightsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.ble.RightsResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rights_granted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightsResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool rights_granted = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.rights_granted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RightsResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.ble.RightsResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rights_granted = 1;
  if (this->_internal_rights_granted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_rights_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.ble.RightsResult)
  return target;
}

size_t RightsResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.ble.RightsResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool rights_granted = 1;
  if (this->_internal_rights_granted() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RightsResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RightsResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RightsResult::GetClassData() const { return &_class_data_; }


void RightsResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RightsResult*>(&to_msg);
  auto& from = static_cast<const RightsResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.ble.RightsResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rights_granted() != 0) {
    _this->_internal_set_rights_granted(from._internal_rights_granted());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RightsResult::CopyFrom(const RightsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.ble.RightsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightsResult::IsInitialized() const {
  return true;
}

void RightsResult::InternalSwap(RightsResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.rights_granted_, other->_impl_.rights_granted_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RightsResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fble_2fble_5frpc_2eproto_getter, &descriptor_table_connections_2fble_2fble_5frpc_2eproto_once,
      file_level_metadata_connections_2fble_2fble_5frpc_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ble
}  // namespace rpc
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::Ble*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::Ble >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::Ble >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::InfoRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::InfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::InfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::InfoResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::InfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::InfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::StartRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::StartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::StartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::StopRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::StopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::DiscoveredRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::DiscoveredRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::DiscoveredRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::DiscoveredResponse*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::DiscoveredResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::DiscoveredResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::RightsRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::RightsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::RightsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::ble::RightsResult*
Arena::CreateMaybeMessage< ::qaul::rpc::ble::RightsResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::ble::RightsResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
