//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connections/ble/manager/ble.proto

package qaul.sys.ble;

@kotlin.jvm.JvmSynthetic
public inline fun bleAdvertisingSend(block: qaul.sys.ble.BleAdvertisingSendKt.Dsl.() -> kotlin.Unit): qaul.sys.ble.BleOuterClass.BleAdvertisingSend =
  qaul.sys.ble.BleAdvertisingSendKt.Dsl._create(qaul.sys.ble.BleOuterClass.BleAdvertisingSend.newBuilder()).apply { block() }._build()
public object BleAdvertisingSendKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.sys.ble.BleOuterClass.BleAdvertisingSend.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.sys.ble.BleOuterClass.BleAdvertisingSend.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.sys.ble.BleOuterClass.BleAdvertisingSend = _builder.build()

    /**
     * <pre>
     * advertising mode
     * </pre>
     *
     * <code>.qaul.sys.ble.BleMode mode = 1;</code>
     */
    public var mode: qaul.sys.ble.BleOuterClass.BleMode
      @JvmName("getMode")
      get() = _builder.getMode()
      @JvmName("setMode")
      set(value) {
        _builder.setMode(value)
      }
    /**
     * <pre>
     * advertising mode
     * </pre>
     *
     * <code>.qaul.sys.ble.BleMode mode = 1;</code>
     */
    public fun clearMode() {
      _builder.clearMode()
    }

    /**
     * <pre>
     * the data to be sent in the data field
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * the data to be sent in the data field
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.sys.ble.BleOuterClass.BleAdvertisingSend.copy(block: qaul.sys.ble.BleAdvertisingSendKt.Dsl.() -> kotlin.Unit): qaul.sys.ble.BleOuterClass.BleAdvertisingSend =
  qaul.sys.ble.BleAdvertisingSendKt.Dsl._create(this.toBuilder()).apply { block() }._build()
