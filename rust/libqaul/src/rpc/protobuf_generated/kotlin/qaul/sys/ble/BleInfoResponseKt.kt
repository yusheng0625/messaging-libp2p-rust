//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connections/ble/ble.proto

package qaul.sys.ble;

@kotlin.jvm.JvmName("-initializebleInfoResponse")
inline fun bleInfoResponse(block: qaul.sys.ble.BleInfoResponseKt.Dsl.() -> kotlin.Unit): qaul.sys.ble.BleOuterClass.BleInfoResponse =
  qaul.sys.ble.BleInfoResponseKt.Dsl._create(qaul.sys.ble.BleOuterClass.BleInfoResponse.newBuilder()).apply { block() }._build()
object BleInfoResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.sys.ble.BleOuterClass.BleInfoResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.sys.ble.BleOuterClass.BleInfoResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.sys.ble.BleOuterClass.BleInfoResponse = _builder.build()

    /**
     * <pre>
     * fill in a device information of the BLE device
     * </pre>
     *
     * <code>.qaul.sys.ble.BleDeviceInfo device = 1;</code>
     */
    var device: qaul.sys.ble.BleOuterClass.BleDeviceInfo
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * <pre>
     * fill in a device information of the BLE device
     * </pre>
     *
     * <code>.qaul.sys.ble.BleDeviceInfo device = 1;</code>
     */
    fun clearDevice() {
      _builder.clearDevice()
    }
    /**
     * <pre>
     * fill in a device information of the BLE device
     * </pre>
     *
     * <code>.qaul.sys.ble.BleDeviceInfo device = 1;</code>
     * @return Whether the device field is set.
     */
    fun hasDevice(): kotlin.Boolean {
      return _builder.hasDevice()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.sys.ble.BleOuterClass.BleInfoResponse.copy(block: qaul.sys.ble.BleInfoResponseKt.Dsl.() -> kotlin.Unit): qaul.sys.ble.BleOuterClass.BleInfoResponse =
  qaul.sys.ble.BleInfoResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.sys.ble.BleOuterClass.BleInfoResponseOrBuilder.deviceOrNull: qaul.sys.ble.BleOuterClass.BleDeviceInfo?
  get() = if (hasDevice()) getDevice() else null

