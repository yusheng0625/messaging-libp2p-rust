//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connections/ble/ble_rpc.proto

package qaul.rpc.ble;

@kotlin.jvm.JvmName("-initializeble")
inline fun ble(block: qaul.rpc.ble.BleKt.Dsl.() -> kotlin.Unit): qaul.rpc.ble.BleRpc.Ble =
  qaul.rpc.ble.BleKt.Dsl._create(qaul.rpc.ble.BleRpc.Ble.newBuilder()).apply { block() }._build()
object BleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.ble.BleRpc.Ble.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.ble.BleRpc.Ble.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.ble.BleRpc.Ble = _builder.build()

    /**
     * <code>.qaul.rpc.ble.InfoRequest info_request = 1;</code>
     */
    var infoRequest: qaul.rpc.ble.BleRpc.InfoRequest
      @JvmName("getInfoRequest")
      get() = _builder.getInfoRequest()
      @JvmName("setInfoRequest")
      set(value) {
        _builder.setInfoRequest(value)
      }
    /**
     * <code>.qaul.rpc.ble.InfoRequest info_request = 1;</code>
     */
    fun clearInfoRequest() {
      _builder.clearInfoRequest()
    }
    /**
     * <code>.qaul.rpc.ble.InfoRequest info_request = 1;</code>
     * @return Whether the infoRequest field is set.
     */
    fun hasInfoRequest(): kotlin.Boolean {
      return _builder.hasInfoRequest()
    }

    /**
     * <code>.qaul.rpc.ble.InfoResponse info_response = 2;</code>
     */
    var infoResponse: qaul.rpc.ble.BleRpc.InfoResponse
      @JvmName("getInfoResponse")
      get() = _builder.getInfoResponse()
      @JvmName("setInfoResponse")
      set(value) {
        _builder.setInfoResponse(value)
      }
    /**
     * <code>.qaul.rpc.ble.InfoResponse info_response = 2;</code>
     */
    fun clearInfoResponse() {
      _builder.clearInfoResponse()
    }
    /**
     * <code>.qaul.rpc.ble.InfoResponse info_response = 2;</code>
     * @return Whether the infoResponse field is set.
     */
    fun hasInfoResponse(): kotlin.Boolean {
      return _builder.hasInfoResponse()
    }

    /**
     * <code>.qaul.rpc.ble.StartRequest start_request = 3;</code>
     */
    var startRequest: qaul.rpc.ble.BleRpc.StartRequest
      @JvmName("getStartRequest")
      get() = _builder.getStartRequest()
      @JvmName("setStartRequest")
      set(value) {
        _builder.setStartRequest(value)
      }
    /**
     * <code>.qaul.rpc.ble.StartRequest start_request = 3;</code>
     */
    fun clearStartRequest() {
      _builder.clearStartRequest()
    }
    /**
     * <code>.qaul.rpc.ble.StartRequest start_request = 3;</code>
     * @return Whether the startRequest field is set.
     */
    fun hasStartRequest(): kotlin.Boolean {
      return _builder.hasStartRequest()
    }

    /**
     * <code>.qaul.rpc.ble.StopRequest stop_request = 4;</code>
     */
    var stopRequest: qaul.rpc.ble.BleRpc.StopRequest
      @JvmName("getStopRequest")
      get() = _builder.getStopRequest()
      @JvmName("setStopRequest")
      set(value) {
        _builder.setStopRequest(value)
      }
    /**
     * <code>.qaul.rpc.ble.StopRequest stop_request = 4;</code>
     */
    fun clearStopRequest() {
      _builder.clearStopRequest()
    }
    /**
     * <code>.qaul.rpc.ble.StopRequest stop_request = 4;</code>
     * @return Whether the stopRequest field is set.
     */
    fun hasStopRequest(): kotlin.Boolean {
      return _builder.hasStopRequest()
    }

    /**
     * <code>.qaul.rpc.ble.DiscoveredRequest discovered_request = 5;</code>
     */
    var discoveredRequest: qaul.rpc.ble.BleRpc.DiscoveredRequest
      @JvmName("getDiscoveredRequest")
      get() = _builder.getDiscoveredRequest()
      @JvmName("setDiscoveredRequest")
      set(value) {
        _builder.setDiscoveredRequest(value)
      }
    /**
     * <code>.qaul.rpc.ble.DiscoveredRequest discovered_request = 5;</code>
     */
    fun clearDiscoveredRequest() {
      _builder.clearDiscoveredRequest()
    }
    /**
     * <code>.qaul.rpc.ble.DiscoveredRequest discovered_request = 5;</code>
     * @return Whether the discoveredRequest field is set.
     */
    fun hasDiscoveredRequest(): kotlin.Boolean {
      return _builder.hasDiscoveredRequest()
    }

    /**
     * <code>.qaul.rpc.ble.DiscoveredResponse discovered_response = 6;</code>
     */
    var discoveredResponse: qaul.rpc.ble.BleRpc.DiscoveredResponse
      @JvmName("getDiscoveredResponse")
      get() = _builder.getDiscoveredResponse()
      @JvmName("setDiscoveredResponse")
      set(value) {
        _builder.setDiscoveredResponse(value)
      }
    /**
     * <code>.qaul.rpc.ble.DiscoveredResponse discovered_response = 6;</code>
     */
    fun clearDiscoveredResponse() {
      _builder.clearDiscoveredResponse()
    }
    /**
     * <code>.qaul.rpc.ble.DiscoveredResponse discovered_response = 6;</code>
     * @return Whether the discoveredResponse field is set.
     */
    fun hasDiscoveredResponse(): kotlin.Boolean {
      return _builder.hasDiscoveredResponse()
    }

    /**
     * <code>.qaul.rpc.ble.RightsRequest rights_request = 7;</code>
     */
    var rightsRequest: qaul.rpc.ble.BleRpc.RightsRequest
      @JvmName("getRightsRequest")
      get() = _builder.getRightsRequest()
      @JvmName("setRightsRequest")
      set(value) {
        _builder.setRightsRequest(value)
      }
    /**
     * <code>.qaul.rpc.ble.RightsRequest rights_request = 7;</code>
     */
    fun clearRightsRequest() {
      _builder.clearRightsRequest()
    }
    /**
     * <code>.qaul.rpc.ble.RightsRequest rights_request = 7;</code>
     * @return Whether the rightsRequest field is set.
     */
    fun hasRightsRequest(): kotlin.Boolean {
      return _builder.hasRightsRequest()
    }

    /**
     * <code>.qaul.rpc.ble.RightsResult rights_result = 8;</code>
     */
    var rightsResult: qaul.rpc.ble.BleRpc.RightsResult
      @JvmName("getRightsResult")
      get() = _builder.getRightsResult()
      @JvmName("setRightsResult")
      set(value) {
        _builder.setRightsResult(value)
      }
    /**
     * <code>.qaul.rpc.ble.RightsResult rights_result = 8;</code>
     */
    fun clearRightsResult() {
      _builder.clearRightsResult()
    }
    /**
     * <code>.qaul.rpc.ble.RightsResult rights_result = 8;</code>
     * @return Whether the rightsResult field is set.
     */
    fun hasRightsResult(): kotlin.Boolean {
      return _builder.hasRightsResult()
    }
    val messageCase: qaul.rpc.ble.BleRpc.Ble.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.ble.BleRpc.Ble.copy(block: qaul.rpc.ble.BleKt.Dsl.() -> kotlin.Unit): qaul.rpc.ble.BleRpc.Ble =
  qaul.rpc.ble.BleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.rpc.ble.BleRpc.BleOrBuilder.infoRequestOrNull: qaul.rpc.ble.BleRpc.InfoRequest?
  get() = if (hasInfoRequest()) getInfoRequest() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.infoResponseOrNull: qaul.rpc.ble.BleRpc.InfoResponse?
  get() = if (hasInfoResponse()) getInfoResponse() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.startRequestOrNull: qaul.rpc.ble.BleRpc.StartRequest?
  get() = if (hasStartRequest()) getStartRequest() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.stopRequestOrNull: qaul.rpc.ble.BleRpc.StopRequest?
  get() = if (hasStopRequest()) getStopRequest() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.discoveredRequestOrNull: qaul.rpc.ble.BleRpc.DiscoveredRequest?
  get() = if (hasDiscoveredRequest()) getDiscoveredRequest() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.discoveredResponseOrNull: qaul.rpc.ble.BleRpc.DiscoveredResponse?
  get() = if (hasDiscoveredResponse()) getDiscoveredResponse() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.rightsRequestOrNull: qaul.rpc.ble.BleRpc.RightsRequest?
  get() = if (hasRightsRequest()) getRightsRequest() else null

val qaul.rpc.ble.BleRpc.BleOrBuilder.rightsResultOrNull: qaul.rpc.ble.BleRpc.RightsResult?
  get() = if (hasRightsResult()) getRightsResult() else null

