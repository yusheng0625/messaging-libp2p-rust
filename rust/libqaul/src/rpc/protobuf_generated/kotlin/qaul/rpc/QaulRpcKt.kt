//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: rpc/qaul_rpc.proto

package qaul.rpc;

@kotlin.jvm.JvmName("-initializeqaulRpc")
inline fun qaulRpc(block: qaul.rpc.QaulRpcKt.Dsl.() -> kotlin.Unit): qaul.rpc.QaulRpcOuterClass.QaulRpc =
  qaul.rpc.QaulRpcKt.Dsl._create(qaul.rpc.QaulRpcOuterClass.QaulRpc.newBuilder()).apply { block() }._build()
object QaulRpcKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.QaulRpcOuterClass.QaulRpc.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.QaulRpcOuterClass.QaulRpc.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.QaulRpcOuterClass.QaulRpc = _builder.build()

    /**
     * <pre>
     * which module to approach
     * </pre>
     *
     * <code>.qaul.rpc.Modules module = 1;</code>
     */
     var module: qaul.rpc.QaulRpcOuterClass.Modules
      @JvmName("getModule")
      get() = _builder.getModule()
      @JvmName("setModule")
      set(value) {
        _builder.setModule(value)
      }
    /**
     * <pre>
     * which module to approach
     * </pre>
     *
     * <code>.qaul.rpc.Modules module = 1;</code>
     */
    fun clearModule() {
      _builder.clearModule()
    }

    /**
     * <pre>
     * can be used to identify responses
     * </pre>
     *
     * <code>string request_id = 2;</code>
     */
    var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * <pre>
     * can be used to identify responses
     * </pre>
     *
     * <code>string request_id = 2;</code>
     */
    fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * <pre>
     * authorisation
     * binary user id
     * </pre>
     *
     * <code>bytes user_id = 3;</code>
     */
    var userId: com.google.protobuf.ByteString
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <pre>
     * authorisation
     * binary user id
     * </pre>
     *
     * <code>bytes user_id = 3;</code>
     */
    fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * <pre>
     * the protobuf encoded binary message data
     * which is passed to the module.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * the protobuf encoded binary message data
     * which is passed to the module.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     */
    fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.QaulRpcOuterClass.QaulRpc.copy(block: qaul.rpc.QaulRpcKt.Dsl.() -> kotlin.Unit): qaul.rpc.QaulRpcOuterClass.QaulRpc =
  qaul.rpc.QaulRpcKt.Dsl._create(this.toBuilder()).apply { block() }._build()

