//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/group/group_rpc.proto

package qaul.rpc.group;

@kotlin.jvm.JvmName("-initializegroupListResponse")
inline fun groupListResponse(block: qaul.rpc.group.GroupListResponseKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupListResponse =
  qaul.rpc.group.GroupListResponseKt.Dsl._create(qaul.rpc.group.GroupRpc.GroupListResponse.newBuilder()).apply { block() }._build()
object GroupListResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.group.GroupRpc.GroupListResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.group.GroupRpc.GroupListResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.group.GroupRpc.GroupListResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class GroupsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     */
     val groups: com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getGroupsList()
      )
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     * @param value The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addGroups")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.add(value: qaul.rpc.group.GroupRpc.GroupInfo) {
      _builder.addGroups(value)
    }
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     * @param value The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignGroups")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.plusAssign(value: qaul.rpc.group.GroupRpc.GroupInfo) {
      add(value)
    }
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     * @param values The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllGroups")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.addAll(values: kotlin.collections.Iterable<qaul.rpc.group.GroupRpc.GroupInfo>) {
      _builder.addAllGroups(values)
    }
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     * @param values The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllGroups")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.plusAssign(values: kotlin.collections.Iterable<qaul.rpc.group.GroupRpc.GroupInfo>) {
      addAll(values)
    }
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     * @param index The index to set the value at.
     * @param value The groups to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setGroups")
    operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.set(index: kotlin.Int, value: qaul.rpc.group.GroupRpc.GroupInfo) {
      _builder.setGroups(index, value)
    }
    /**
     * <pre>
     * group list
     * </pre>
     *
     * <code>repeated .qaul.rpc.group.GroupInfo groups = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearGroups")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.group.GroupRpc.GroupInfo, GroupsProxy>.clear() {
      _builder.clearGroups()
    }

  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.group.GroupRpc.GroupListResponse.copy(block: qaul.rpc.group.GroupListResponseKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupListResponse =
  qaul.rpc.group.GroupListResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

