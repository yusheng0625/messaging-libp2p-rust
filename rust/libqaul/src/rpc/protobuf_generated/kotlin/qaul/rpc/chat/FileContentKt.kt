//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/chat/chat.proto

package qaul.rpc.chat;

@kotlin.jvm.JvmName("-initializefileContent")
inline fun fileContent(block: qaul.rpc.chat.FileContentKt.Dsl.() -> kotlin.Unit): qaul.rpc.chat.ChatOuterClass.FileContent =
  qaul.rpc.chat.FileContentKt.Dsl._create(qaul.rpc.chat.ChatOuterClass.FileContent.newBuilder()).apply { block() }._build()
object FileContentKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.chat.ChatOuterClass.FileContent.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.chat.ChatOuterClass.FileContent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.chat.ChatOuterClass.FileContent = _builder.build()

    /**
     * <pre>
     * file id
     * </pre>
     *
     * <code>uint64 file_id = 1;</code>
     */
    var fileId: kotlin.Long
      @JvmName("getFileId")
      get() = _builder.getFileId()
      @JvmName("setFileId")
      set(value) {
        _builder.setFileId(value)
      }
    /**
     * <pre>
     * file id
     * </pre>
     *
     * <code>uint64 file_id = 1;</code>
     */
    fun clearFileId() {
      _builder.clearFileId()
    }

    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     */
    var fileName: kotlin.String
      @JvmName("getFileName")
      get() = _builder.getFileName()
      @JvmName("setFileName")
      set(value) {
        _builder.setFileName(value)
      }
    /**
     * <pre>
     * file name
     * </pre>
     *
     * <code>string file_name = 2;</code>
     */
    fun clearFileName() {
      _builder.clearFileName()
    }

    /**
     * <pre>
     * file extension
     * </pre>
     *
     * <code>string file_extension = 3;</code>
     */
    var fileExtension: kotlin.String
      @JvmName("getFileExtension")
      get() = _builder.getFileExtension()
      @JvmName("setFileExtension")
      set(value) {
        _builder.setFileExtension(value)
      }
    /**
     * <pre>
     * file extension
     * </pre>
     *
     * <code>string file_extension = 3;</code>
     */
    fun clearFileExtension() {
      _builder.clearFileExtension()
    }

    /**
     * <pre>
     * file size
     * </pre>
     *
     * <code>uint32 file_size = 4;</code>
     */
    var fileSize: kotlin.Int
      @JvmName("getFileSize")
      get() = _builder.getFileSize()
      @JvmName("setFileSize")
      set(value) {
        _builder.setFileSize(value)
      }
    /**
     * <pre>
     * file size
     * </pre>
     *
     * <code>uint32 file_size = 4;</code>
     */
    fun clearFileSize() {
      _builder.clearFileSize()
    }

    /**
     * <pre>
     * file description
     * </pre>
     *
     * <code>string file_description = 5;</code>
     */
    var fileDescription: kotlin.String
      @JvmName("getFileDescription")
      get() = _builder.getFileDescription()
      @JvmName("setFileDescription")
      set(value) {
        _builder.setFileDescription(value)
      }
    /**
     * <pre>
     * file description
     * </pre>
     *
     * <code>string file_description = 5;</code>
     */
    fun clearFileDescription() {
      _builder.clearFileDescription()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.chat.ChatOuterClass.FileContent.copy(block: qaul.rpc.chat.FileContentKt.Dsl.() -> kotlin.Unit): qaul.rpc.chat.ChatOuterClass.FileContent =
  qaul.rpc.chat.FileContentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

