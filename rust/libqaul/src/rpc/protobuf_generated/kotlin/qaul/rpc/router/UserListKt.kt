//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: router/router.proto

package qaul.rpc.router;

@kotlin.jvm.JvmSynthetic
inline fun userList(block: qaul.rpc.router.UserListKt.Dsl.() -> Unit): qaul.rpc.router.RouterOuterClass.UserList =
  qaul.rpc.router.UserListKt.Dsl._create(qaul.rpc.router.RouterOuterClass.UserList.newBuilder()).apply { block() }._build()
object UserListKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul.rpc.router.RouterOuterClass.UserList.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.router.RouterOuterClass.UserList.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.router.RouterOuterClass.UserList = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class UserProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     */
     val user: com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUserList()
      )
    /**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     * @param value The user to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUser")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.add(value: qaul.rpc.router.RouterOuterClass.UserEntry) {
      _builder.addUser(value)
    }/**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     * @param value The user to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUser")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.plusAssign(value: qaul.rpc.router.RouterOuterClass.UserEntry) {
      add(value)
    }/**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     * @param values The user to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUser")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.addAll(values: kotlin.collections.Iterable<qaul.rpc.router.RouterOuterClass.UserEntry>) {
      _builder.addAllUser(values)
    }/**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     * @param values The user to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUser")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.plusAssign(values: kotlin.collections.Iterable<qaul.rpc.router.RouterOuterClass.UserEntry>) {
      addAll(values)
    }/**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     * @param index The index to set the value at.
     * @param value The user to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUser")
    operator fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.set(index: kotlin.Int, value: qaul.rpc.router.RouterOuterClass.UserEntry) {
      _builder.setUser(index, value)
    }/**
     * <code>repeated .qaul.rpc.router.UserEntry user = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUser")
    fun com.google.protobuf.kotlin.DslList<qaul.rpc.router.RouterOuterClass.UserEntry, UserProxy>.clear() {
      _builder.clearUser()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.router.RouterOuterClass.UserList.copy(block: qaul.rpc.router.UserListKt.Dsl.() -> Unit): qaul.rpc.router.RouterOuterClass.UserList =
  qaul.rpc.router.UserListKt.Dsl._create(this.toBuilder()).apply { block() }._build()
