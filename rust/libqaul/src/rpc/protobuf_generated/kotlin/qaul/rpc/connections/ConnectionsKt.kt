//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connections/connections.proto

package qaul.rpc.connections;

@kotlin.jvm.JvmName("-initializeconnections")
inline fun connections(block: qaul.rpc.connections.ConnectionsKt.Dsl.() -> kotlin.Unit): qaul.rpc.connections.ConnectionsOuterClass.Connections =
  qaul.rpc.connections.ConnectionsKt.Dsl._create(qaul.rpc.connections.ConnectionsOuterClass.Connections.newBuilder()).apply { block() }._build()
object ConnectionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.connections.ConnectionsOuterClass.Connections.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.connections.ConnectionsOuterClass.Connections.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.connections.ConnectionsOuterClass.Connections = _builder.build()

    /**
     * <pre>
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;</code>
     */
    var internetNodesRequest: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesRequest
      @JvmName("getInternetNodesRequest")
      get() = _builder.getInternetNodesRequest()
      @JvmName("setInternetNodesRequest")
      set(value) {
        _builder.setInternetNodesRequest(value)
      }
    /**
     * <pre>
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;</code>
     */
    fun clearInternetNodesRequest() {
      _builder.clearInternetNodesRequest()
    }
    /**
     * <pre>
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;</code>
     * @return Whether the internetNodesRequest field is set.
     */
    fun hasInternetNodesRequest(): kotlin.Boolean {
      return _builder.hasInternetNodesRequest()
    }

    /**
     * <pre>
     * returns a list of all internet nodes and 
     * an information about why this message has been sent.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;</code>
     */
    var internetNodesList: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesList
      @JvmName("getInternetNodesList")
      get() = _builder.getInternetNodesList()
      @JvmName("setInternetNodesList")
      set(value) {
        _builder.setInternetNodesList(value)
      }
    /**
     * <pre>
     * returns a list of all internet nodes and 
     * an information about why this message has been sent.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;</code>
     */
    fun clearInternetNodesList() {
      _builder.clearInternetNodesList()
    }
    /**
     * <pre>
     * returns a list of all internet nodes and 
     * an information about why this message has been sent.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;</code>
     * @return Whether the internetNodesList field is set.
     */
    fun hasInternetNodesList(): kotlin.Boolean {
      return _builder.hasInternetNodesList()
    }

    /**
     * <pre>
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;</code>
     */
    var internetNodesAdd: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesAdd")
      get() = _builder.getInternetNodesAdd()
      @JvmName("setInternetNodesAdd")
      set(value) {
        _builder.setInternetNodesAdd(value)
      }
    /**
     * <pre>
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;</code>
     */
    fun clearInternetNodesAdd() {
      _builder.clearInternetNodesAdd()
    }
    /**
     * <pre>
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;</code>
     * @return Whether the internetNodesAdd field is set.
     */
    fun hasInternetNodesAdd(): kotlin.Boolean {
      return _builder.hasInternetNodesAdd()
    }

    /**
     * <pre>
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;</code>
     */
    var internetNodesRemove: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesRemove")
      get() = _builder.getInternetNodesRemove()
      @JvmName("setInternetNodesRemove")
      set(value) {
        _builder.setInternetNodesRemove(value)
      }
    /**
     * <pre>
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;</code>
     */
    fun clearInternetNodesRemove() {
      _builder.clearInternetNodesRemove()
    }
    /**
     * <pre>
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;</code>
     * @return Whether the internetNodesRemove field is set.
     */
    fun hasInternetNodesRemove(): kotlin.Boolean {
      return _builder.hasInternetNodesRemove()
    }

    /**
     * <pre>
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;</code>
     */
    var internetNodesState: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesState")
      get() = _builder.getInternetNodesState()
      @JvmName("setInternetNodesState")
      set(value) {
        _builder.setInternetNodesState(value)
      }
    /**
     * <pre>
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;</code>
     */
    fun clearInternetNodesState() {
      _builder.clearInternetNodesState()
    }
    /**
     * <pre>
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * </pre>
     *
     * <code>.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;</code>
     * @return Whether the internetNodesState field is set.
     */
    fun hasInternetNodesState(): kotlin.Boolean {
      return _builder.hasInternetNodesState()
    }
    val messageCase: qaul.rpc.connections.ConnectionsOuterClass.Connections.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.connections.ConnectionsOuterClass.Connections.copy(block: qaul.rpc.connections.ConnectionsKt.Dsl.() -> kotlin.Unit): qaul.rpc.connections.ConnectionsOuterClass.Connections =
  qaul.rpc.connections.ConnectionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesRequestOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesRequest?
  get() = if (hasInternetNodesRequest()) getInternetNodesRequest() else null

val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesListOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesList?
  get() = if (hasInternetNodesList()) getInternetNodesList() else null

val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesAddOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesAdd()) getInternetNodesAdd() else null

val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesRemoveOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesRemove()) getInternetNodesRemove() else null

val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesStateOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesState()) getInternetNodesState() else null

