//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: node/user_accounts.proto

package qaul.rpc.user_accounts;

@kotlin.jvm.JvmName("-initializedefaultUserAccount")
inline fun defaultUserAccount(block: qaul.rpc.user_accounts.DefaultUserAccountKt.Dsl.() -> kotlin.Unit): qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount =
  qaul.rpc.user_accounts.DefaultUserAccountKt.Dsl._create(qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount.newBuilder()).apply { block() }._build()
object DefaultUserAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount = _builder.build()

    /**
     * <code>bool user_account_exists = 1;</code>
     */
    var userAccountExists: kotlin.Boolean
      @JvmName("getUserAccountExists")
      get() = _builder.getUserAccountExists()
      @JvmName("setUserAccountExists")
      set(value) {
        _builder.setUserAccountExists(value)
      }
    /**
     * <code>bool user_account_exists = 1;</code>
     */
    fun clearUserAccountExists() {
      _builder.clearUserAccountExists()
    }

    /**
     * <code>.qaul.rpc.user_accounts.MyUserAccount my_user_account = 2;</code>
     */
    var myUserAccount: qaul.rpc.user_accounts.UserAccountsOuterClass.MyUserAccount
      @JvmName("getMyUserAccount")
      get() = _builder.getMyUserAccount()
      @JvmName("setMyUserAccount")
      set(value) {
        _builder.setMyUserAccount(value)
      }
    /**
     * <code>.qaul.rpc.user_accounts.MyUserAccount my_user_account = 2;</code>
     */
    fun clearMyUserAccount() {
      _builder.clearMyUserAccount()
    }
    /**
     * <code>.qaul.rpc.user_accounts.MyUserAccount my_user_account = 2;</code>
     * @return Whether the myUserAccount field is set.
     */
    fun hasMyUserAccount(): kotlin.Boolean {
      return _builder.hasMyUserAccount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount.copy(block: qaul.rpc.user_accounts.DefaultUserAccountKt.Dsl.() -> kotlin.Unit): qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccount =
  qaul.rpc.user_accounts.DefaultUserAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.rpc.user_accounts.UserAccountsOuterClass.DefaultUserAccountOrBuilder.myUserAccountOrNull: qaul.rpc.user_accounts.UserAccountsOuterClass.MyUserAccount?
  get() = if (hasMyUserAccount()) getMyUserAccount() else null

