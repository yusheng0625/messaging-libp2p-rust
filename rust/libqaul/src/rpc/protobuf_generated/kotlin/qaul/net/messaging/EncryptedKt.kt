//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/messaging/messaging.proto

package qaul.net.messaging;

@kotlin.jvm.JvmName("-initializeencrypted")
inline fun encrypted(block: qaul.net.messaging.EncryptedKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Encrypted =
  qaul.net.messaging.EncryptedKt.Dsl._create(qaul.net.messaging.MessagingOuterClass.Encrypted.newBuilder()).apply { block() }._build()
object EncryptedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.net.messaging.MessagingOuterClass.Encrypted.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.messaging.MessagingOuterClass.Encrypted.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.messaging.MessagingOuterClass.Encrypted = _builder.build()

    /**
     * <pre>
     * state of the crypto session
     * </pre>
     *
     * <code>.qaul.net.messaging.CryptoState state = 1;</code>
     */
     var state: qaul.net.messaging.MessagingOuterClass.CryptoState
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <pre>
     * state of the crypto session
     * </pre>
     *
     * <code>.qaul.net.messaging.CryptoState state = 1;</code>
     */
    fun clearState() {
      _builder.clearState()
    }

    /**
     * <pre>
     * crypto session id
     * </pre>
     *
     * <code>uint32 session_id = 2;</code>
     */
    var sessionId: kotlin.Int
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <pre>
     * crypto session id
     * </pre>
     *
     * <code>uint32 session_id = 2;</code>
     */
    fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class DataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     */
     val data: com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDataList()
      )
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addData")
    fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.add(value: qaul.net.messaging.MessagingOuterClass.Data) {
      _builder.addData(value)
    }
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignData")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.plusAssign(value: qaul.net.messaging.MessagingOuterClass.Data) {
      add(value)
    }
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllData")
    fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.addAll(values: kotlin.collections.Iterable<qaul.net.messaging.MessagingOuterClass.Data>) {
      _builder.addAllData(values)
    }
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllData")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.plusAssign(values: kotlin.collections.Iterable<qaul.net.messaging.MessagingOuterClass.Data>) {
      addAll(values)
    }
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     * @param index The index to set the value at.
     * @param value The data to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setData")
    operator fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.set(index: kotlin.Int, value: qaul.net.messaging.MessagingOuterClass.Data) {
      _builder.setData(index, value)
    }
    /**
     * <pre>
     * one or several Data messages
     * of maximally 64KB each.
     * </pre>
     *
     * <code>repeated .qaul.net.messaging.Data data = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearData")
    fun com.google.protobuf.kotlin.DslList<qaul.net.messaging.MessagingOuterClass.Data, DataProxy>.clear() {
      _builder.clearData()
    }

  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.net.messaging.MessagingOuterClass.Encrypted.copy(block: qaul.net.messaging.EncryptedKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Encrypted =
  qaul.net.messaging.EncryptedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

