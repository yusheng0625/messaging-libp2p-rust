//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/messaging/messaging.proto

package qaul.net.messaging;

@kotlin.jvm.JvmName("-initializedtn")
inline fun dtn(block: qaul.net.messaging.DtnKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Dtn =
  qaul.net.messaging.DtnKt.Dsl._create(qaul.net.messaging.MessagingOuterClass.Dtn.newBuilder()).apply { block() }._build()
object DtnKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.net.messaging.MessagingOuterClass.Dtn.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.messaging.MessagingOuterClass.Dtn.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.messaging.MessagingOuterClass.Dtn = _builder.build()

    /**
     * <pre>
     * message container
     * </pre>
     *
     * <code>bytes container = 1;</code>
     */
    var container: com.google.protobuf.ByteString
      @JvmName("getContainer")
      get() = _builder.getContainer()
      @JvmName("setContainer")
      set(value) {
        _builder.setContainer(value)
      }
    /**
     * <pre>
     * message container
     * </pre>
     *
     * <code>bytes container = 1;</code>
     */
    fun clearContainer() {
      _builder.clearContainer()
    }
    /**
     * <pre>
     * message container
     * </pre>
     *
     * <code>bytes container = 1;</code>
     * @return Whether the container field is set.
     */
    fun hasContainer(): kotlin.Boolean {
      return _builder.hasContainer()
    }

    /**
     * <pre>
     * message received response
     * </pre>
     *
     * <code>.qaul.net.messaging.DtnResponse response = 2;</code>
     */
    var response: qaul.net.messaging.MessagingOuterClass.DtnResponse
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * <pre>
     * message received response
     * </pre>
     *
     * <code>.qaul.net.messaging.DtnResponse response = 2;</code>
     */
    fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * <pre>
     * message received response
     * </pre>
     *
     * <code>.qaul.net.messaging.DtnResponse response = 2;</code>
     * @return Whether the response field is set.
     */
    fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }
    val messageCase: qaul.net.messaging.MessagingOuterClass.Dtn.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.net.messaging.MessagingOuterClass.Dtn.copy(block: qaul.net.messaging.DtnKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Dtn =
  qaul.net.messaging.DtnKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.net.messaging.MessagingOuterClass.DtnOrBuilder.responseOrNull: qaul.net.messaging.MessagingOuterClass.DtnResponse?
  get() = if (hasResponse()) getResponse() else null

