//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: router/router_net_info.proto

package qaul.net.router_net_info;

@kotlin.jvm.JvmName("-initializefeedIdsTable")
inline fun feedIdsTable(block: qaul.net.router_net_info.FeedIdsTableKt.Dsl.() -> kotlin.Unit): qaul.net.router_net_info.RouterNetInfo.FeedIdsTable =
  qaul.net.router_net_info.FeedIdsTableKt.Dsl._create(qaul.net.router_net_info.RouterNetInfo.FeedIdsTable.newBuilder()).apply { block() }._build()
object FeedIdsTableKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.net.router_net_info.RouterNetInfo.FeedIdsTable.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.router_net_info.RouterNetInfo.FeedIdsTable.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.router_net_info.RouterNetInfo.FeedIdsTable = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class IdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     */
     val ids: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getIdsList()
      )
    /**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     * @param value The ids to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addIds")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addIds(value)
    }/**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     * @param value The ids to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignIds")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     * @param values The ids to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllIds")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllIds(values)
    }/**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     * @param values The ids to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllIds")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The ids to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setIds")
    operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setIds(index, value)
    }/**
     * <pre>
     * feed id
     * </pre>
     *
     * <code>repeated bytes ids = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearIds")
    fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, IdsProxy>.clear() {
      _builder.clearIds()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.net.router_net_info.RouterNetInfo.FeedIdsTable.copy(block: qaul.net.router_net_info.FeedIdsTableKt.Dsl.() -> kotlin.Unit): qaul.net.router_net_info.RouterNetInfo.FeedIdsTable =
  qaul.net.router_net_info.FeedIdsTableKt.Dsl._create(this.toBuilder()).apply { block() }._build()

