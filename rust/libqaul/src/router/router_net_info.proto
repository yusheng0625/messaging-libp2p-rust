syntax = "proto3";
package qaul.net.router_net_info;

// Router information Container
message RouterInfoContainer {
    // signature
    bytes signature = 1;
    // message content
    bytes message = 2;
}

// Router information content
message RouterInfoContent {
    // node id
    bytes id = 1;
    // RouterInfo Module
    RouterInfoModule routerInfoModule = 2;
    // message content
    bytes content = 3;
    // timestamp in milli seconds
    uint64 time = 4;
}

// RouterInfoModule
enum RouterInfoModule {
    // Message is a common RouterInfoMessage
    ROUTER_INFO = 0;
    // Message is a FeedRequestMessage
    FEED_REQUEST = 1;
    // Message is a FeedResponseMessage
    FEED_RESPONSE = 2;
    // Message is a UserRequestMessage
    USER_REQUEST = 3;
    // Message is a UserResponseMessage
    USER_RESPONSE = 4;
}

// Router information message
message RouterInfoMessage {
    // node id
    bytes node = 1;
    // Routing information table
    RoutingInfoTable routes = 2;
    // Latest Feed ids table
    FeedIdsTable feeds = 4;
    // timestamp
    uint64 timestamp = 5;
}

// Routing information to send to neighbours
message RoutingInfoTable {
    repeated RoutingInfoEntry entry = 1;
}

// Routing structures to send over the network
message RoutingInfoEntry {
    // user id
    bytes user = 1;
    // round trip time
    uint32 rtt = 2;
    // hop count
    bytes hc = 3;
    // propagation id
    uint32 pgid = 5;
}


// User information table
message UserIdTable {
    // user ids
    repeated bytes ids = 1;
}


// User information table
message UserInfoTable {
    // user info
    repeated UserInfo info = 1;
}

// User info structure for sending to the neighbours
message UserInfo {
    // user id
    bytes id = 1;
    // public key of the user
    bytes key = 2;
    // user name
    string name = 3;
}

// List of feed ID's
message FeedIdsTable {
    // feed id
    repeated bytes ids = 1;
}

// Feed request message
message FeedRequestMessage {
    // Feed ids table
    FeedIdsTable feeds = 1;
}

// Feed response message
message FeedResponseMessage {
    // Feed table
    FeedResponseTable feeds = 1;
}

// Feed response table
// containing the feed messages for response
message FeedResponseTable {
    // feed messages
    repeated FeedMessage messages = 1;
}

// Feed Message
message FeedMessage {
    // message id
    bytes message_id = 1;
    // sender id
    bytes sender_id = 2;
    // message content
    string content = 3;
    // timestamp in milli seconds
    uint64 time = 4;
}


